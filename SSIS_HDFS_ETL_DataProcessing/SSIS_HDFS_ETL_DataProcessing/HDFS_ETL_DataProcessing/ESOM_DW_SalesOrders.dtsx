<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/4/2018 10:29:10 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="BORISPC"
  DTS:CreatorName="JOMAX\bberlin"
  DTS:DTSID="{7D8A27B3-7580-4CD4-9DD9-B65F1764EA14}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="12.0.2430.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="ESOM_DW_SalesOrders"
  DTS:PackageType="5"
  DTS:VersionBuild="255"
  DTS:VersionGUID="{54ECCCBD-8035-4637-9F31-8EA603323E95}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[campaigns.db.txt]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{C020DCCF-B427-4C1D-8C53-EDB1EE45A85D}"
      DTS:ObjectName="campaigns.db.txt">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\HDFS_Stage\data\campaigns.db.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0060_"
              DTS:DataType="21"
              DTS:TextQualified="True"
              DTS:ObjectName="id"
              DTS:DTSID="{735DC655-EC07-450B-8F02-3CCD70FE66B0}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0060_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="name"
              DTS:DTSID="{5A9E766C-1056-4B90-96D9-B848B3B3D644}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0060_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="created_date"
              DTS:DTSID="{0316C48A-1A3C-4039-9193-9121F4BC114E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0060_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="launch_date"
              DTS:DTSID="{D39DFD72-B825-4C1A-A080-20BAD60B928C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0060_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="last_surveyed_date"
              DTS:DTSID="{16129754-4A3E-4CD4-B724-BFA1CD7521E0}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="21"
              DTS:TextQualified="True"
              DTS:ObjectName="drip_duration"
              DTS:DTSID="{0BF9CE2D-5B0B-4D5B-B8BA-FD237C20EC06}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[feedbacks.db.txt]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{18AAE878-134B-4BA9-89B8-BF2B0241E62A}"
      DTS:ObjectName="feedbacks.db.txt">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\HDFS_Stage\data\feedbacks.db.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0060_"
              DTS:DataType="21"
              DTS:TextQualified="True"
              DTS:ObjectName="id"
              DTS:DTSID="{1C2B6AB5-95D0-413F-AA19-6E94D9076071}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0060_"
              DTS:DataType="19"
              DTS:TextQualified="True"
              DTS:ObjectName="campaign"
              DTS:DTSID="{98C08C42-2CAE-4B3B-980E-7A25F2CAE19C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0060_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="posted_date"
              DTS:DTSID="{64097C65-AD29-4C0E-A4E1-EBF23BFE7C58}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0060_"
              DTS:DataType="21"
              DTS:TextQualified="True"
              DTS:ObjectName="score"
              DTS:DTSID="{5118180C-CABD-499F-996B-05333EC63CEF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0060_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="score_type"
              DTS:DTSID="{268C816C-840E-405E-81BE-B2D368ECCAE2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0060_"
              DTS:DataType="21"
              DTS:TextQualified="True"
              DTS:ObjectName="contact id"
              DTS:DTSID="{C7820F71-C209-48A8-BBD9-A7B3A11AE1F1}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="250"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="contact email"
              DTS:DTSID="{E307F6C3-E36F-4928-BC56-15CA71B87DD0}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0D9B0EC2-B610-462D-B490-07B3F12E6601}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="GETDATE()"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varCurTime">
      <DTS:VariableValue
        DTS:DataType="7">8/9/2018 2:52:35 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E17BDFFB-7251-44D0-9F6B-5468310F38CD}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varDataDirectory">
      <DTS:VariableValue
        DTS:DataType="8">C:\HDFS_Stage\data</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2A9BFAB6-0445-413C-985A-25B419BCD31B}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="DATEADD(&quot;day&quot;, -1, GETDATE() )"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varDateRange">
      <DTS:VariableValue
        DTS:DataType="7">8/8/2018 2:52:35 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{69EC13DB-64BC-4FC6-8EAF-5DE1AFEF82E0}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varDaysBack">
      <DTS:VariableValue
        DTS:DataType="3">60</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{00E12C07-863F-4910-AE30-27BAFD366983}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varDbConnection">
      <DTS:VariableValue
        DTS:DataType="8">bi01.lax01.mtsvc.net.mtbiODS.biadmin</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B9DCC68A-7013-4FA8-AC00-97096ED160AF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varDBmtbiOdsPwd">
      <DTS:VariableValue
        DTS:DataType="8">a\7B'fTRXQ~re/y</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8E3B6115-7919-426F-AFC6-D2F41F294B07}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varDependences">
      <DTS:VariableValue
        DTS:DataType="8">ESOM_DataUploader</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DA68681E-0EAA-4B96-BF2B-E4DAC1D088F8}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::varFullLoad]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varEndDate">
      <DTS:VariableValue
        DTS:DataType="7">8/9/2018 2:52:35 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{95997BC9-A126-41E4-83C4-AD7254B4900E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varErrorSalesOrdersOutput">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{92FB4668-BCCE-4B9D-BA20-B0A6F31512BC}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="GETDATE()"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varFullLoad">
      <DTS:VariableValue
        DTS:DataType="7">8/9/2018 2:52:35 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9A36F4D0-9A6B-4E69-97D9-C8D8A7CD8756}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varModuleToCall">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0AF031C0-7957-40E5-BE6C-9E8E05A35A80}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSalesOrders">
      <DTS:VariableValue
        DTS:DataType="8">salesorders</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{46BAE3A9-D4D9-4AD0-B926-DBC40465EE6E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSalesOrdersDbDataFile">
      <DTS:VariableValue
        DTS:DataType="8">salesorders.db.txt</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{89914238-E652-4D6C-BC64-01AF2BC09975}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSalesOrdersJsonFile">
      <DTS:VariableValue
        DTS:DataType="8">salesorders.json</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0D7A3942-461A-4CC1-8C27-002C80A8EDE6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSQL_Dir">
      <DTS:VariableValue
        DTS:DataType="8">C:\mtbi\HDFS_ETL\RM_SSIS_HDFS_ETL_DataProcessing\SSIS_HDFS_ETL_DataProcessing\HDFS_ETL_DataProcessing</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DA365BF0-66C5-4EC3-995F-ADEEE5A6402E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varStatus">
      <DTS:VariableValue
        DTS:DataType="8">F</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{291A3089-4E4D-4ED9-AFC8-8C97DE6D17ED}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[System::PackageName]  + &quot;  [Failure]  &quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSubject">
      <DTS:VariableValue
        DTS:DataType="8">ESOM_DW_SalesOrders  [Failure]  </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FE5C0278-838D-4D31-AF60-E42BFF1A74FB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varType">
      <DTS:VariableValue
        DTS:DataType="8">E</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\ERROR ESOM - Listener"
      DTS:CreationName="Microsoft.ExecutePackageTask"
      DTS:Description="Execute AllocationDetails Package Task"
      DTS:DTSID="{81ac5bac-42c2-4064-a427-0c176d65d61a}"
      DTS:ExecutableType="Microsoft.ExecutePackageTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="ERROR ESOM - Listener"
      DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ExecutePackageTask>
          <UseProjectReference>True</UseProjectReference>
          <PackageName>ERROR_Notification.dtsx.dtsx</PackageName>
          <ParameterAssignment>
            <ParameterName>varMessage</ParameterName>
            <BindedVariableOrParameterName>User::varErrorSalesOrdersOutput</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>varSubject</ParameterName>
            <BindedVariableOrParameterName>User::varSubject</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>varStatus</ParameterName>
            <BindedVariableOrParameterName>User::varStatus</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>varDependency</ParameterName>
            <BindedVariableOrParameterName>User::varDependences</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>varEventTime</ParameterName>
            <BindedVariableOrParameterName>User::varCurTime</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>varSender</ParameterName>
            <BindedVariableOrParameterName>System::PackageName</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>varType</ParameterName>
            <BindedVariableOrParameterName>User::varType</BindedVariableOrParameterName>
          </ParameterAssignment>
        </ExecutePackageTask>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\ERROR fetch Sales Orders"
      DTS:CreationName="Microsoft.ExecutePackageTask"
      DTS:Description="Execute AllocationDetails Package Task"
      DTS:DTSID="{3e591382-821b-4ba3-883d-30f6a0bda359}"
      DTS:ExecutableType="Microsoft.ExecutePackageTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="ERROR fetch Sales Orders"
      DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ExecutePackageTask>
          <UseProjectReference>True</UseProjectReference>
          <PackageName>ERROR_Notification.dtsx.dtsx</PackageName>
          <ParameterAssignment>
            <ParameterName>varMessage</ParameterName>
            <BindedVariableOrParameterName>User::varErrorSalesOrdersOutput</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>varSubject</ParameterName>
            <BindedVariableOrParameterName>User::varSubject</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>varStatus</ParameterName>
            <BindedVariableOrParameterName>User::varStatus</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>varDependency</ParameterName>
            <BindedVariableOrParameterName>User::varDependences</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>varEventTime</ParameterName>
            <BindedVariableOrParameterName>User::varCurTime</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>varSender</ParameterName>
            <BindedVariableOrParameterName>System::PackageName</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>varType</ParameterName>
            <BindedVariableOrParameterName>User::varType</BindedVariableOrParameterName>
          </ParameterAssignment>
        </ExecutePackageTask>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\PROD SQL Server Listener"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{cd267618-dba0-4557-a0a1-bcd1990bc0bb}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="PROD SQL Server Listener"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_60d4e1dbf8114a6182a91c35a0581992"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::TaskName,System::PackageName,User::varDbConnection,User::varDBmtbiOdsPwd"
          ReadWriteVariables="User::varErrorSalesOrdersOutput">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a2b270d938b741f69feaa5a21eb80fd7.Properties.Settings.get_Default():ST_a2b270d938b741f69feaa5a21eb80fd7.Properties.Sett" +
    "ings")]

namespace ST_a2b270d938b741f69feaa5a21eb80fd7.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Data.OleDb;
using System.Threading;
#endregion

namespace ST_a2b270d938b741f69feaa5a21eb80fd7
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // TODO: Add your code here
            ConnectionManager cm;
            System.Data.OleDb.OleDbCommand sqlComm;
            
            bool isFailed = true;
            
            string varTaskName = String.Format(@"{0}", Dts.Variables["TaskName"].Value);
            string varPackageName = String.Format(@"{0}", Dts.Variables["PackageName"].Value);
                
            try
            {
                // Init Variables
                string varDbConnection = String.Format(@"{0}", Dts.Variables["varDbConnection"].Value);
                string varDBmtbiOdsPwd = String.Format(@"{0}", Dts.Variables["varDBmtbiOdsPwd"].Value);
                

                // get the SSIS Remote connection object
                cm = Dts.Connections[varDbConnection];


                string connstr = cm.ConnectionString + ";pwd=" + varDBmtbiOdsPwd;
                System.Data.OleDb.OleDbConnection objRmConn = new System.Data.OleDb.OleDbConnection(connstr);
                using (objRmConn)
                {

                    objRmConn.Open();

                    // Test connection
                    OleDbCommand cmd = new OleDbCommand("SELECT 1", objRmConn);
                    int val = (int)cmd.ExecuteScalar();

                    // set sql dir path
                    string sql_dir_path = @"C:\mtbi\HDFS_ETL\RM_SSIS_HDFS_ETL_DataProcessing\SSIS_HDFS_ETL_DataProcessing\HDFS_ETL_DataProcessing\";

                    // Is Master Presentaion done OK?
                    string masterPresentationCompletionSql = sql_dir_path + "MasterPresentationCompletion.sql";
                    string sql = File.ReadAllText(masterPresentationCompletionSql);
                    sqlComm = new System.Data.OleDb.OleDbCommand(sql, objRmConn);
                    bool sentWarning = false;

                    // get the SSIS Remote connection object
                    cm = Dts.Connections["localhost.HostOps"];
                    string connstr1 = String.Format(@"{0};{1}", cm.ConnectionString, "Provider=SQLOLEDB;");

                    System.Data.OleDb.OleDbConnection objLocalConn = new System.Data.OleDb.OleDbConnection(cm.ConnectionString);

                        objLocalConn.Open();
                        // test objLocalConn
                        OleDbCommand cmdLoc = new OleDbCommand("SELECT 1", objRmConn);
                        val = (int)cmdLoc.ExecuteScalar();
                        OleDbDataReader reader = null;
                        while (!(reader = sqlComm.ExecuteReader()).HasRows)
                        {
                            using (reader)
                            {
                                // Should we issue an error?
                                if (DateTime.Now.Hour > 20)
                                {
                                    string WarningMailSql = sql_dir_path + "MasterPresentationErrorMail.sql";
                                    string sqlWarningMail = File.ReadAllText(WarningMailSql);
                                    System.Data.OleDb.OleDbCommand sqlWarningMailCom = new System.Data.OleDb.OleDbCommand(sqlWarningMail, objLocalConn);
                                    int num_of_rows = sqlWarningMailCom.ExecuteNonQuery();
                                    throw new Exception("The PROD SQL Master Presentation package is not found successfully finished after 8 pm.");
                                }

                                // Should we issue a warning?
                                if (!sentWarning && DateTime.Now.Hour > 9)
                                {

                                    // send warning
                                    sentWarning = true;

                                    string WarningMailSql = sql_dir_path + "MasterPresentationWarningMail.sql";
                                    string sqlWarningMail = File.ReadAllText(WarningMailSql);
                                    System.Data.OleDb.OleDbCommand sqlWarningMailCom = new System.Data.OleDb.OleDbCommand(sqlWarningMail, objLocalConn);
                                    int num_of_rows = sqlWarningMailCom.ExecuteNonQuery();


                                }

                                Thread.Sleep(3000 * 60);  // 3000 * 60  = 3 min
                            }
                            val = (int)cmdLoc.ExecuteScalar();

                        } // while((number_of_rows = sqlComm.ExecuteNonQuery()) == 0)

                        isFailed = false;

                    

                } // using (objRmConn)
            }
            catch (Exception ex)
            {
                
                Dts.Variables["varErrorSalesOrdersOutput"].Value = String.Format("Exception: [{0}],[{1}: {2}]", DateTime.Now.ToString(), varTaskName, ex.Message);

                string logPath = String.Format("{0}{1}.log", @"C:\HDFS_Stage\log\", varPackageName);
                FileStream fl = File.Open(logPath, FileMode.Append, FileAccess.Write, FileShare.ReadWrite);

                using (System.IO.StreamWriter file = new System.IO.StreamWriter(fl))
                {
                    file.WriteLine(Dts.Variables["varErrorSalesOrdersOutput"].Value);
                }

            }

            Dts.TaskResult = isFailed ? (int)ScriptResults.Failure : (int)ScriptResults.Success;

        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_60d4e1dbf8114a6182a91c35a0581992.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{a9d7c8a8-5667-4659-bbe7-adc3aadbceb5}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_a2b270d938b741f69feaa5a21eb80fd7</RootNamespace><AssemblyName>ST_60d4e1dbf8114a6182a91c35a0581992</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_a2b270d938b741f69feaa5a21eb80fd7</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_a2b270d938b741f69feaa5a21eb80fd7</msb:DisplayName>
		<msb:ProjectId>{C9526407-8D7E-4ABA-9F4D-024CA195B8A8}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_60d4e1dbf8114a6182a91c35a0581992.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a2b270d938b741f69feaa5a21eb80fd7")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a2b270d938b741f69feaa5a21eb80fd7")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a2b270d938b741f69feaa5a21eb80fd7.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a2b270d938b741f69feaa5a21eb80fd7.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a2b270d938b741f69feaa5a21eb80fd7.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a2b270d938b741f69feaa5a21eb80fd7.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a2b270d938b741f69feaa5a21eb80fd7.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_60d4e1dbf8114a6182a91c35a0581992.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAJSwbFsAAAAAAAAAAOAAAiELAQsAABoAAAAIAAAAAAAA3jgA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIw4AABPAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA5BgAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADA
OAAAAAAAAEgAAAACAAUA+CQAAJQTAAABAAAAAAAAAEAkAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswBQAGAwAAAgAAERcMcnMAAHACKBYAAApvFwAACnJ7AABwbxgAAApv
GQAACigaAAAKDXJzAABwAigWAAAKbxcAAApyjQAAcG8YAAAKbxkAAAooGgAAChMEcnMAAHACKBYA
AApvFwAACnKlAABwbxgAAApvGQAACigaAAAKEwVycwAAcAIoFgAACm8XAAAKcsUAAHBvGAAACm8Z
AAAKKBoAAAoTBgIoFgAACm8bAAAKEQVvHAAACgoGbx0AAApy5QAAcBEGKB4AAAoTBxEHcx8AAAoT
CBEIExsRCG8gAAAKcvEAAHARCHMhAAAKEwkRCW8iAAAKpSUAAAEmcgMBAHATChEKctIBAHAoIwAA
ChMLEQsoJAAAChMMEQwRCHMhAAAKCxYTDQIoFgAACm8bAAAKchQCAHBvHAAACgpyOAIAcAZvHQAA
CnJIAgBwKCUAAAomBm8dAAAKcx8AAAoTDhEObyAAAApy8QAAcBEIcyEAAAoTDxEPbyIAAAqlJQAA
ASYUExA4swAAABEQExwoJgAAChMdEh0oJwAACh8UMTURCnJuAgBwKCMAAAoTERERKCQAAAoTEhES
EQ5zIQAAChMTERNvKAAACiZyrgIAcHMpAAAKehENLT8oJgAAChMeEh4oJwAACh8JMS0XEw0RCnJf
AwBwKCMAAAoTFBEUKCQAAAoTFREVEQ5zIQAAChMWERZvKAAACiYgIL8CACgqAAAK3gwRHCwHERxv
KwAACtwRD28iAAAKpSUAAAEmB28sAAAKJRMQby0AAAo5Ov///xYM3gwRGywHERtvKwAACtzdmwAA
ABMXAigWAAAKbxcAAApyowMAcG8YAAAKctcDAHAoJgAAChMfEh/+FicAAAFvLgAACgkRF28vAAAK
KDAAAApvMQAACnIPBABwciUEAHARBCglAAAKExgRGBwYGSgyAAAKExkRGXMzAAAKExoRGgIoFgAA
Cm8XAAAKcqMDAHBvGAAACm8ZAAAKbzQAAAreDBEaLAcRGm8rAAAK3N4AAigWAAAKCC0DFisBF281
AAAKKgAAQWQAAAIAAACBAQAAlgAAABcCAAAMAAAAAAAAAAIAAADNAAAAegEAAEcCAAAMAAAAAAAA
AAIAAADCAgAAIwAAAOUCAAAMAAAAAAAAAAAAAABNAAAACwIAAFgCAACbAAAAKAAAAR4CKDYAAAoq
AAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNj
b3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1i
NzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAA
AAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAD0BAAA
I34AAGAFAADIBwAAI1N0cmluZ3MAAAAAKA0AAEwEAAAjVVMAdBEAABAAAAAjR1VJRAAAAIQRAAAQ
AgAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPolMwAWAAABAAAAMwAAAAUAAAAGAAAACQAAAAEA
AAA2AAAAAgAAAA8AAAACAAAAAgAAAAMAAAAEAAAAAQAAAAUAAAABAAAAAQAAAAAACgABAAAAAAAG
AMEAugAKAN0AyAAOAD0BFAEGAFkBugAGAG8BXgEGAKABiwEGAFcCPQIGAIICcAIGAJkCcAIGALYC
cAIGANUCcAIGAO4CcAIGAAcDcAIGACIDcAIGAD0DcAIGAFYDcAIGAI8DbwMGAK8DbwMGAAQE8QMG
ACEEugAGACYEugAGAEoEcAIKAHYEYAQKAI8EYAQGAKQEbwMOAMYEFAEOAOgEFAESAEEFIQUSAFkF
IQUGAHUFugASAIMFIQUSAJ8FIQUWAOsF2QUWAA4G+wUWACAG2QUWAC0G+wUGAEUGugAGAFUGSwYG
AGYGugAGAJAGugAGAKsGmgYGALgGugAWAMwG2QUWAOoG+wUGACIHSwYGAC0HSwYGADYHSwYGAEEH
SwYGAEsHSwYGAFgHSwYGAF8HSwYAAAAAAQAAAAAAAQABAAAAEAAyADwABQABAAEAAAEQAGsAPAAJ
AAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAAEQAEAAoAEQB/ARMAEQCsARcAEQD2ATkABgYfAkcA
VoAnAkoAVoAvAkoAUCAAAAAAgxi8ARsAAQBYIAAAAACTCMIBHwABAJEgAAAAAJMI1gEkAAEAmCAA
AAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMgAAAAAIYYvAEbAAIApyAAAAAAkRi/BIkAAgC8IAAA
AACGABoCGwACADQkAAAAAIYYvAEbAAIAAAABADcCOQC8AVgAQQC8AVgASQC8AVgAUQC8AVgAWQC8
AVgAYQC8AVgAaQC8AVgAcQC8AVgAeQC8AVgAgQC8AVgAiQC8AV0AkQC8ARsAmQC8ARsACQC8ARsA
oQA4BGIAoQBTBGkAKQC8AW4AuQC8AXoAyQC8ARsAEQC8ARsA0QC8ARsAGQD6BI0A2QBLBZIA4QBi
BZcA6QBrBZ0A8QB8BaEA2QCPBacA+QBiBawAAQGxBbMA8QDGBbcACQG8AVgAEQEbBhsAGQG8Ab4A
IQE3Bp0A8QDGBcYAMQFaBswA8QB8BdEAOQFvBtgAOQF3Bt4AIQGABt4AQQG8AVgASQGyBuIAUQHE
BhsAGQHcBucAYQH3Bu0ACQADB7MAQQEMB7MA8QB8BfEA6QAYB/kAMQEbBv4AiQG8AQ4BmQFqB/kA
2QB0B10AGQC8ARsACAAUAE4ACAAYAFMAKQCTAIAALgAbAMsBLgAjAMsBLgBjAPEBLgALAFoBLgAT
AKIBLgAzAKIBLgArAMsBLgA7ANEBLgBDAMsBLgBbAOgBQwBrAFMASQCTAIAAYQCbAFMAgwCrAFMA
dQAVAQIAAQADAAMAAABvAS8AAADuATQAAAASAkIAAgACAAMAAgADAAUAAQAEAAUAAgAFAAcABIAA
AAEAAACLGgpeAAAAAAAAzQMAAAQAAAAAAAAAAAAAAAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAA
AAAMAAAAAAAAAAAAAAAKAPUAAAAAAAwAAAAAAAAAAAAAAAoAAgUAAAAABAAAAAAAAAAAAAAAAQDN
BQAAAAAAAAAAAQAAAIMHAAAFAAQAAAAAAAA8TW9kdWxlPgBTVF82MGQ0ZTFkYmY4MTE0YTYxODJh
OTFjMzVhMDU4MTk5Mi5kbGwAUmVzb3VyY2VzAFNUX2EyYjI3MGQ5MzhiNzQxZjY5ZmVhYTVhMjFl
YjgwZmQ3LlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0TWFpbgBTVF9hMmIyNzBkOTM4Yjc0MWY2
OWZlYWE1YTIxZWI4MGZkNwBTY3JpcHRSZXN1bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lz
dGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNl
cnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sA
VlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJj
ZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVz
b3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1
bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABNYWluAHZh
bHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFy
Z2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRy
aWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25B
dHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0
ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBB
c3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5S
dW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBS
dW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTVF82MGQ0ZTFkYmY4MTE0YTYxODJhOTFjMzVh
MDU4MTk5MgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBU
eXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3Nl
bWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRv
ckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2Ny
aXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNy
b3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGlt
ZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRfVmFsdWUAU3Ry
aW5nAEZvcm1hdABDb25uZWN0aW9ucwBnZXRfQ29ubmVjdGlvbnMAQ29ubmVjdGlvbk1hbmFnZXIA
Z2V0X0Nvbm5lY3Rpb25TdHJpbmcAQ29uY2F0AFN5c3RlbS5EYXRhAFN5c3RlbS5EYXRhLk9sZURi
AE9sZURiQ29ubmVjdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24ARGJDb25uZWN0aW9uAE9wZW4AT2xl
RGJDb21tYW5kAERiQ29tbWFuZABFeGVjdXRlU2NhbGFyAEludDMyAFN5c3RlbS5JTwBGaWxlAFJl
YWRBbGxUZXh0AERhdGVUaW1lAGdldF9Ob3cAZ2V0X0hvdXIARXhlY3V0ZU5vblF1ZXJ5AEV4Y2Vw
dGlvbgBTeXN0ZW0uVGhyZWFkaW5nAFRocmVhZABTbGVlcABJRGlzcG9zYWJsZQBEaXNwb3NlAE9s
ZURiRGF0YVJlYWRlcgBFeGVjdXRlUmVhZGVyAERiRGF0YVJlYWRlcgBnZXRfSGFzUm93cwBUb1N0
cmluZwBnZXRfTWVzc2FnZQBzZXRfVmFsdWUARmlsZVN0cmVhbQBGaWxlTW9kZQBGaWxlQWNjZXNz
AEZpbGVTaGFyZQBTdHJlYW1Xcml0ZXIAU3RyZWFtAFRleHRXcml0ZXIAV3JpdGVMaW5lAHNldF9U
YXNrUmVzdWx0AFNUX2EyYjI3MGQ5MzhiNzQxZjY5ZmVhYTVhMjFlYjgwZmQ3LlByb3BlcnRpZXMu
UmVzb3VyY2VzLnJlc291cmNlcwAAAABxUwBUAF8AYQAyAGIAMgA3ADAAZAA5ADMAOABiADcANAAx
AGYANgA5AGYAZQBhAGEANQBhADIAMQBlAGIAOAAwAGYAZAA3AC4AUAByAG8AcABlAHIAdABpAGUA
cwAuAFIAZQBzAG8AdQByAGMAZQBzAAAHewAwAH0AABFUAGEAcwBrAE4AYQBtAGUAABdQAGEAYwBr
AGEAZwBlAE4AYQBtAGUAAB92AGEAcgBEAGIAQwBvAG4AbgBlAGMAdABpAG8AbgAAH3YAYQByAEQA
QgBtAHQAYgBpAE8AZABzAFAAdwBkAAALOwBwAHcAZAA9AAARUwBFAEwARQBDAFQAIAAxAACAzUMA
OgBcAG0AdABiAGkAXABIAEQARgBTAF8ARQBUAEwAXABSAE0AXwBTAFMASQBTAF8ASABEAEYAUwBf
AEUAVABMAF8ARABhAHQAYQBQAHIAbwBjAGUAcwBzAGkAbgBnAFwAUwBTAEkAUwBfAEgARABGAFMA
XwBFAFQATABfAEQAYQB0AGEAUAByAG8AYwBlAHMAcwBpAG4AZwBcAEgARABGAFMAXwBFAFQATABf
AEQAYQB0AGEAUAByAG8AYwBlAHMAcwBpAG4AZwBcAABBTQBhAHMAdABlAHIAUAByAGUAcwBlAG4A
dABhAHQAaQBvAG4AQwBvAG0AcABsAGUAdABpAG8AbgAuAHMAcQBsAAAjbABvAGMAYQBsAGgAbwBz
AHQALgBIAG8AcwB0AE8AcABzAAAPewAwAH0AOwB7ADEAfQAAJVAAcgBvAHYAaQBkAGUAcgA9AFMA
UQBMAE8ATABFAEQAQgA7AAA/TQBhAHMAdABlAHIAUAByAGUAcwBlAG4AdABhAHQAaQBvAG4ARQBy
AHIAbwByAE0AYQBpAGwALgBzAHEAbAAAgK9UAGgAZQAgAFAAUgBPAEQAIABTAFEATAAgAE0AYQBz
AHQAZQByACAAUAByAGUAcwBlAG4AdABhAHQAaQBvAG4AIABwAGEAYwBrAGEAZwBlACAAaQBzACAA
bgBvAHQAIABmAG8AdQBuAGQAIABzAHUAYwBjAGUAcwBzAGYAdQBsAGwAeQAgAGYAaQBuAGkAcwBo
AGUAZAAgAGEAZgB0AGUAcgAgADgAIABwAG0ALgAAQ00AYQBzAHQAZQByAFAAcgBlAHMAZQBuAHQA
YQB0AGkAbwBuAFcAYQByAG4AaQBuAGcATQBhAGkAbAAuAHMAcQBsAAAzdgBhAHIARQByAHIAbwBy
AFMAYQBsAGUAcwBPAHIAZABlAHIAcwBPAHUAdABwAHUAdAAAN0UAeABjAGUAcAB0AGkAbwBuADoA
IABbAHsAMAB9AF0ALABbAHsAMQB9ADoAIAB7ADIAfQBdAAAVewAwAH0AewAxAH0ALgBsAG8AZwAA
JUMAOgBcAEgARABGAFMAXwBTAHQAYQBnAGUAXABsAG8AZwBcAAAAfwj+HF6gs0WMUVB+boiyFgAI
t3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUECAASGQMG
EgwEAAASDAQIABIMAgYIAwYRFAQAAAAABAEAAAAEIAEBDgQgAQEIBgABElERVQQgABJZBiACAQ4S
WQQHARIVBSABARFhCAEAAgAAAAAAAwAAAQQgABJtBCAAEnEFIAESdRwDIAAcBQACDg4cBCAAEn0G
IAESgIEcAyAADgYAAw4ODg4HIAIBDhKAhQUAAg4ODgQAAQ4OBgADDg4cHAUAABGAnQMgAAgEAAEB
CAUgABKArQMgAAIHAAQODhwcHAQgAQEcDwAEEoC1DhGAuRGAvRGAwQYgAQESgMlEByASgIESgI0C
Dg4ODg4SgIUSgI0ODg4CEoCFEoCNEoCtDg4SgI0ODhKAjRKAoQ4SgLUSgMUSgIUSgK0RgJ0RgJ0R
gJ1HAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1l
EC5ORVQgRnJhbWV3b3JrIDQoAQAjU1RfYTJiMjcwZDkzOGI3NDFmNjlmZWFhNWEyMWViODBmZDcA
AAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNwAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhj
ZXB0aW9uVGhyb3dzAbQ4AAAAAAAAAAAAAM44AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAOAAA
AAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAACwAwAAAAAAAAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEACl6LGgAAAQAKXosaPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEEAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAAMAAw
ADQAYgAwAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGEA
MgBiADIANwAwAGQAOQAzADgAYgA3ADQAMQBmADYAOQBmAGUAYQBhADUAYQAyADEAZQBiADgAMABm
AGQANwAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADcAOQA1AC4A
MgA0ADAANwA0AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADYAMABk
ADQAZQAxAGQAYgBmADgAMQAxADQAYQA2ADEAOAAyAGEAOQAxAGMAMwA1AGEAMAA1ADgAMQA5ADkA
MgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQBy
AGkAZwBoAHQAIABAACAAIAAyADAAMQA3AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAVABfADYAMABkADQAZQAxAGQAYgBmADgAMQAxADQAYQA2ADEAOAAyAGEAOQAx
AGMAMwA1AGEAMAA1ADgAMQA5ADkAMgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAFQAXwBhADIAYgAyADcAMABkADkAMwA4AGIANwA0ADEAZgA2ADkAZgBlAGEAYQA1
AGEAMgAxAGUAYgA4ADAAZgBkADcAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADYANwA5ADUALgAyADQAMAA3ADQAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAg
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYANwA5ADUALgAyADQAMAA3ADQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAA4DgAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task - fetch Sales Orders"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{F6B2EBC4-7381-4DAD-AD2A-24B5BE0702D4}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task - fetch Sales Orders"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_1bc4d9e91dbf417b9862c75a97db0565"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::TaskName,System::PackageName,User::varDataDirectory,User::varDateRange,User::varDaysBack,User::varDbConnection,User::varDBmtbiOdsPwd,User::varEndDate,User::varFullLoad,User::varModuleToCall,User::varSalesOrders,User::varSalesOrdersDbDataFile,User::varSalesOrdersJsonFile,User::varSQL_Dir"
          ReadWriteVariables="User::varErrorSalesOrdersOutput">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="SalesOrersDataSample.json"
            Encoding="UTF8"><![CDATA[{
  "SalesOrders": [
    {
      "CustomerId": "string",
      "OrderId": "string",
      "OrderType": "string",
      "OrderUTCDateTime": "2018-07-27T17:09:23.833Z",
      "OriginalOrderIdValue": "string",
      "Payments": [
        {
          "Amount": 0,
          "BillingAddress": {
            "City": "string",
            "Country": "string",
            "PostalCode": "string",
            "State": "string"
          },
          "Index": 0,
          "MerchantAccountKey": "string"
        }
      ],
      "SalesOrderResources": [
        {
          "Duration": 0,
          "DurationType": 0,
          "InterCompanyOrderId": "string",
          "ISOCurrencyCode": "string",
          "OrderItemId": "string",
          "OrderItemQuantity": 0,
          "OrderItemResourceCount": 0,
          "OrderItemResourceId": "string",
          "Product": {
            "PeriodType": 0,
            "PriceTierDescription": "string",
            "ProductFamily": "string",
            "ProductSubFamily": "string",
            "ProductTLDPhase": "string",
            "RegistrationPeriod": 0,
            "RegistryDescription": "string",
            "Sponsor": "string",
            "Supplier": "string",
            "TLD": "string",
            "RegistrationPeriodType": {}
          },
          "ResourceAmount": {
            "Cost": 0,
            "ICANNFee": 0,
            "ListPrice": 0,
            "PricePaid": 0,
            "Revenue": {}
          },
          "ServicePeriodEndDate": "2018-07-27T17:09:23.833Z",
          "ServicePeriodStartDate": "2018-07-27T17:09:23.833Z",
          "Taxes": [
            {
              "TaxAmount": 0,
              "TaxType": "string",
              "Type": {},
              "Amount": {}
            }
          ],
          "TaxTotal": 0
        }
      ],
      "ShippingHandlingAmount": 0,
      "SubTotalAmount": 0,
      "TotalAmount": 0,
      "TotalTaxAmount": 0,
      "TransactionalISOCurrencyCode": "string",
      "TaxAmount": {}
    }
  ],
  "SourceSystem": "string"
}]]></ProjectItem>
          <ProjectItem
            Name="MT_SalesOrders.sql"
            Encoding="UTF8"><![CDATA[select
	top 10
	/*ds not null*/
	orderid,  
	/* nullable  ????  what to do?  */
	startdate,  
	/*ds not null*/
	account,  
	/*ds not null*/
	country,  
	/*ds not null*/
	ordertypeid, 
	/*ds not null*/
	tax, 
	/*ds not null*/
	total 
from [dbo].[vAllocationDetail]
	where ordertypeid in (1,2,3) and orderid > 0]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2e79ef5ec40c40659c4b5fed897ff42b.Properties.Settings.get_Default():ST_2e79ef5ec40c40659c4b5fed897ff42b.Properties.Sett" +
    "ings")]

namespace ST_2e79ef5ec40c40659c4b5fed897ff42b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Data.OleDb;
using System.Threading;
using System.Collections.Generic;
using System.Diagnostics;
using System.Data.SqlClient;
using System.Globalization;
using System.Text;

#endregion

namespace ST_2e79ef5ec40c40659c4b5fed897ff42b
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */
        public string varDbConnection { get; set; }
        public string varDataDirectory { get; set; }
        public int varDaysBack { get; set; }
        public string varSalesOrderJsonFile { get; set; }
        public DateTime varEndDate { get; set; }
        public int varModuleToCall { get; set; }
        public string varDBmtbiOdsPwd { get; set; }
        public string varPackageName { get; set; }
        public string varTaskName { get; set; }
        public string varSQL_Dir { get; set; }



        public DataTable m_dtMtSalesOrders = new DataTable("mtSalesOrders");
        public SalesOrders m_salesOrders;

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
			// TODO: Add your code here
            ConnectionManager cm;
            varPackageName = "ESOM_DW_SalesOrders";
            bool isFailed = true;
                        

            try
            {
                Init();

                // get the SSIS Remote connection object
                cm = Dts.Connections[varDbConnection]; //"bi01.lax01.mtsvc.net.HostOps.biadmin"];

                
                string connstr = cm.ConnectionString + ";pwd=" + varDBmtbiOdsPwd;
                System.Data.OleDb.OleDbConnection objRmConn = new System.Data.OleDb.OleDbConnection(connstr);
                using (objRmConn)
                {

                    objRmConn.Open();

                    // Test connection
                    OleDbCommand cmd = new OleDbCommand("SELECT 1", objRmConn);
                    int val = (int)cmd.ExecuteScalar();

                    // Is Master Presentaion will be checked prior  to this component
                    if( FetchSalesOrdersData(objRmConn) > 0)
                    {
                        // Load Payments For Orders
                        LoadPaymentsForOrders();

                        // Load Order Items
                        LoadOrdersItems();

                        // Serialize Sales Orders Object as JSON file.
                        string jsonDataFile = String.Format(@"{0}\{1}", varDataDirectory,  varSalesOrderJsonFile);
                        m_salesOrders.Serialize2JsonFile(jsonDataFile);
                    }

                    isFailed = false;

                } // using (objRmConn)
            }
            catch (Exception ex)
            {
                Dts.Variables["varErrorSalesOrdersOutput"].Value = ex.Message;
                LogMessage(String.Format("Main Exception: [{0}],[{1}]", DateTime.Now.ToString(), Dts.Variables["varErrorSalesOrdersOutput"].Value));
            }

            Dts.TaskResult = isFailed ? (int)ScriptResults.Failure : (int)ScriptResults.Success;
			
		}

        private void LoadOrdersItems()
        {
            // TEST DATA
            foreach (SalesOrder order in m_salesOrders.DictSalesOrder.Values)
            {
                order.SalesOrderResources = new List<SalesOrderResource>(2);

                // Add Items
                SalesOrderResource so = new SalesOrderResource();
                so.Duration = "0";
                so.DurationType = "0";
                so.InterCompanyOrderId = "InterCompanyOrderId";
                so.ISOCurrencyCode = "ISO";
                so.OrderItemId = "OrderItemId";
                so.OrderItemQuantity =  "0";
                so.OrderItemResourceCount =  "0";
                so.OrderItemResourceId = "OrderItemResourceId"; 
                
                so.Product = new Product();
                so.Product.PriceTierName = "PriceTierName";
                so.Product.PriceTierDescription = "PriceTierDescription";
                so.Product.ProductFamily = "ProductFamily";
                so.Product.ProductSubFamily = "ProductSubFamily";
                so.Product.ProductTLDPhase = "ProductTLDPhase";
                so.Product.RegistrationPeriod = "0";
                so.Product.PeriodType = "days";
                so.Product.RegistryDescription = "RegistryDescription";
                so.Product.Sponsor = "Sponsor";
                so.Product.Supplier = "Supplier";
                so.Product.TLD = "TLD";
                //pr.RegistrationPeriodType = 

                so.ResourceAmount = new ResourceAmount();
                so.ResourceAmount.Cost = this.AmountFormat(0);
                so.ResourceAmount.ICANNFee = this.AmountFormat(1);
                so.ResourceAmount.ListPrice = this.AmountFormat(2);
                so.ResourceAmount.PricePaid = this.AmountFormat(3);
                //so.ResourceAmount.Revenue": {}

                so.ServicePeriodEndDate = this.DateTimeFormat(Convert.ToDateTime("2018-01-25"));
                so.ServicePeriodStartDate = this.DateTimeFormat(Convert.ToDateTime("2018-01-25")); ;

                // Load Taxes
                so.Taxes = new List<Tax>();
                Tax tx1 = new Tax();
                tx1.Amount = this.AmountFormat(0);
                tx1.type = "tx1 Type";
                so.Taxes.Add(tx1);
                so.TaxTotal = this.AmountFormat(0);
                
                order.SalesOrderResources.Add(so);
                
            }
        }

        private void LoadPaymentsForOrders()
        {
            // TEST DATA
            double amount = 1;
            foreach (SalesOrder order in m_salesOrders.DictSalesOrder.Values)
            {
                order.Payments = new List<OrderPayment>(2);

                // Add Payments
                OrderPayment op = new OrderPayment();
                op.Amount = this.AmountFormat(amount);
                op.BillingAddress = new BillingAddress();
                op.BillingAddress.City = "City" + op.Amount;
                op.BillingAddress.Country = "Country"+ op.Amount;
                op.BillingAddress.PostalCode = "PostalCode" + op.Amount;
                op.BillingAddress.State = "State" + op.Amount;
                op.MerchantAccountKey = "MerchantAccountKey";
                op.Index = "1"; // "Payment Index for multiple payments."  Type: Int Number

                order.Payments.Add(op);

            }
        }

        private int FetchSalesOrdersData(OleDbConnection objRmConn)
        {

            string mtSalesOrdersSql = string.Format("{0}\\{1}", varSQL_Dir, "ESOM_MT_SalesOrders.sql");

            try
            {
                string sql = File.ReadAllText(mtSalesOrdersSql);
                System.Data.OleDb.OleDbCommand sqlComm = new System.Data.OleDb.OleDbCommand(sql, objRmConn);

                using (OleDbDataReader reader = sqlComm.ExecuteReader())
                {
                    m_dtMtSalesOrders.Clear();
                    m_dtMtSalesOrders.Load(reader);
                    if (m_dtMtSalesOrders.Rows.Count == 0)
                    {
                        // Log now rows
                        return 0; // nothing to do
                    }

                    #region Get Orders

                    m_salesOrders = new SalesOrders(m_dtMtSalesOrders.Rows.Count);


                    foreach (DataRow dr in m_dtMtSalesOrders.Rows)
                    {
                        SalesOrder so = new SalesOrder();

                        if (dr.IsNull("orderid"))
                            throw new InvalidDataException("orderid");
                        so.OrderId = dr["orderid"].ToString();

                        if (dr.IsNull("startdate"))
                            throw new InvalidDataException("startdate");
                        so.OrderUTCDateTime = this.DateTimeFormat(Convert.ToDateTime(dr["startdate"]));

                        if (dr.IsNull("account"))
                            throw new InvalidDataException("account");
                        so.CustomerId = dr["account"].ToString();

                        if (dr.IsNull("country"))
                            throw new InvalidDataException("country");
                        so.TransactionalISOCurrencyCode = Country2CurrencyISOCode(dr["country"].ToString());

                        //if (dr.IsNull("OriginalOrderIdValue"))
                        //    so.OriginalOrderIdValue = "-1";
                        //else
                        so.OriginalOrderIdValue = "22222";  // 

                        if (dr.IsNull("ordertypeid"))
                            throw new InvalidDataException("ordertypeid");
                        so.OrderType = MT2GD_OrderType(dr["ordertypeid"].ToString());


                        //if (dr.IsNull("ShippingHandlingAmount"))  TBD
                        //    throw new InvalidDataException("ShippingHandlingAmount");
                        so.ShippingHandlingAmount = this.AmountFormat(Convert.ToDouble(dr["total"]));

                        //if (dr.IsNull("TotalTaxAmount")) TBD
                        //    throw new InvalidDataException("TotalTaxAmount");
                        so.TotalTaxAmount = this.AmountFormat(Convert.ToDouble(dr["tax"]));


                        //if (dr.IsNull("SubTotalAmount")) TBD
                        //    throw new InvalidDataException("SubTotalAmount");
                        so.SubTotalAmount = this.AmountFormat(Convert.ToDouble(dr["total"]));

                        //if (dr.IsNull("TotalAmount")) TBD
                        //    throw new InvalidDataException("SubTotalAmount");
                        so.TotalAmount = this.AmountFormat(Convert.ToDouble(dr["total"]));

                        m_salesOrders.Add(so);


                    } // foreach (DataRow dr in dtMtSalesOrders.Rows)

                    #endregion //Get Orders

                }  // using (OleDbDataReader reader = sqlComm.ExecuteReader())

            }
            catch (Exception ex)
            {
                LogMessage(String.Format("FetchSalesOrdersData Exception: [{0}],[{1}]", DateTime.Now.ToString(), ex.Message));
                throw ex;
            }

            return m_dtMtSalesOrders.Rows.Count;
                        
        }
        

        private void Init()
        {
            try
            {
                varPackageName = String.Format(@"{0}", Dts.Variables["PackageName"].Value);
                varTaskName = String.Format(@"{0}", Dts.Variables["TaskName"].Value);
                varDbConnection = String.Format(@"{0}", Dts.Variables["varDbConnection"].Value);
                varDBmtbiOdsPwd = String.Format(@"{0}", Dts.Variables["varDBmtbiOdsPwd"].Value);
                varDataDirectory = String.Format(@"{0}", Dts.Variables["varDataDirectory"].Value);
                varDaysBack = Convert.ToInt32(String.Format(@"{0}", Dts.Variables["varDaysBack"].Value));
                varSalesOrderJsonFile = String.Format(@"{0}", Dts.Variables["varSalesOrdersJsonFile"].Value);
                varSQL_Dir = String.Format(@"{0}", Dts.Variables["varSQL_Dir"].Value);
                varEndDate = (DateTime)Dts.Variables["varEndDate"].Value;
                varModuleToCall = Convert.ToInt32(String.Format(@"{0}", Dts.Variables["varModuleToCall"].Value));
                

            }
            catch (Exception ex)
            {

                ScriptMain.LogMessageSt(String.Format("{0}`Init`[{1}]", DateTime.Now.ToString(), ex.Message));
                throw ex;
            }
        }

        public void LogMessage(string message)
        {
            string logPath = String.Format("{0}{1}.log", @"C:\HDFS_Stage\log\", Dts.Variables["System::PackageName"].Value);
            FileStream fl = File.Open(logPath, FileMode.Append, FileAccess.Write, FileShare.ReadWrite);

            using (System.IO.StreamWriter file = new System.IO.StreamWriter(fl))
            {
                file.WriteLine(message);
            }

        }

        #region Static class members
        static bool IsFileReady(String sFilename)
        {
            // If the file can be opened for exclusive access it means that the file
            // is no longer locked by another process.
            try
            {
                if (!System.IO.File.Exists(sFilename)) return true;

                using (System.IO.FileStream inputStream = File.Open(sFilename, FileMode.Open, FileAccess.Write, FileShare.Write))
                {
                    if (inputStream.Length > 0)
                    {
                        return true;
                    }
                    else
                    {
                        return false;
                    }

                }
            }
            catch (Exception e)
            {
                Console.WriteLine("IsFileReady:{0}", e.Message);
                return false;
            }
        }
                
        /// <summary>
        /// This static function severs the emergency event when no input variables are provided.
        /// </summary>
        /// <param name="message"></param>
        static public void LogMessageSt(string message)
        {


            string logFile = @"C:\HDFS_Stage\log\DW_SalesOrders.log";
            string log = logFile;

            // just wait
            if (!IsFileReady(logFile)) System.Threading.Thread.Sleep(5000);

            // ok tried diferent file
            if (!IsFileReady(logFile)) log = logFile + DateTime.Now.Ticks.ToString();

            FileStream fl = File.Open(log, FileMode.Append, FileAccess.Write, FileShare.ReadWrite);

            using (System.IO.StreamWriter file = new System.IO.StreamWriter(fl))
            {
                file.WriteLine(message);
            }

        }

        #endregion Static class members

        #region JSON Schema convertion functions
        /// <summary>
        /// Schema:
        /// "type": "number",
        /// "multiplesOf": 0.000001,
        /// Sample:  12.170000, but in their sample it is just "0"
        /// </summary>
        /// <param name="number"></param>
        /// <returns> formatted string </returns>
        private string AmountFormat(double number)
        {
            return number.ToString("0.00");
        }

        /// <summary>
        /// "type": "number",
        /// "multiplesOf": 0.01,
        /// 
        /// </summary>
        /// <param name="number"></param>
        /// <returns> formatted string </returns>
        private string RegistrationPeriodFormat(double number)
        {
            throw new NotImplementedException("RegistrationPeriodFormat");
            return number.ToString("0.00");
        }


        /// <summary>
        /// the date will be in a standard json utc format:  “2012-04-23T18:25:43.511Z”  ,
        /// if there is no time then we should have the order as PST to UTC 12AM 
        /// which is summer time "2018-01-25T07:00:00Z"  , winter time "2018-01-25T08:00:00Z"
        /// </summary>
        /// <param name="dateTime"></param>
        /// <returns> formatted string </returns>
        private string DateTimeFormat(DateTime parsedDate)
        { 
            // Convert the current PST to UTC
            //DateTime parsedDate = DateTime.Parse("2018-01-25");
            var timeUtc = DateTime.UtcNow;
            TimeZoneInfo easternZone = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");
            DateTime utcDateTime = TimeZoneInfo.ConvertTimeFromUtc(parsedDate, easternZone);
            Debug.Write(utcDateTime);
            // 2018-01-25T04:00:00Z
            string formattedDate = String.Format("{0}Z", utcDateTime.ToString("yyyy-MM-dd HH:mm:ss").Replace(' ', 'T'));
            Debug.Write(formattedDate);
            return formattedDate;
        }

        private string MT2GD_OrderType(string mtOrderCode)
        {
            string gdOrderType = String.Empty;
            /*
             TBD - mapping
             */

            gdOrderType = mtOrderCode;

            return gdOrderType;
        
        }

        private string Country2CurrencyISOCode(string counrty)
        {
            RegionInfo myRI = new RegionInfo(counrty);
            return myRI.ISOCurrencySymbol;
        }

        #endregion // JSON Schema convertion functions

        

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        /// <summary>
        /// 
        /// </summary>
        /// <param name="data"></param>
        private void SerializeDataToJSON(string data)
        {
            
        }







        
    }  //public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

    #region JSON classes
        /// <summary>
        /// JSON Classes which are used for seralization of the fetching data to the JSON file
        /// </summary>
               

        public class BillingAddress
        {
            public string City { get; set; }
            public string State { get; set; }
            public string Country { get; set; }
            public string PostalCode { get; set; }
        }

        public class OrderPayment
        {
            public string Amount { get; set; }
            public string MerchantAccountKey { get; set; }
            public string Index { get; set; }
            public BillingAddress BillingAddress { get; set; }
        }

        public class ResourceAmount
        {
            public string ICANNFee { get; set; }
            public string ListPrice { get; set; }
            public string Cost { get; set; }
            public string PricePaid { get; set; }
            public Revenue revenue { get; set; }
        }

        public class Revenue
        {
             
        }

        public class Product
        {
            public string ProductFamily { get; set; }
            public string ProductSubFamily { get; set; }
            public string PeriodType { get; set; }
            public string RegistrationPeriod { get; set; }
            public string TLD { get; set; }
            public string Sponsor { get; set; }
            public string RegistrySponsor { get; set; }
            public string Supplier { get; set; }
            public string ProductTLDPhase { get; set; }
            public string RegistryDescription { get; set; }
            public string PriceTierDescription { get; set; }
            public string PriceTierName { get; set; }
            public string PremiumTierType { get; set; }
        }

        public class RegistrationPeriodType
        { 
                
        }

        public class SalesOrderResource
        {
            public string OrderItemId { get; set; }
            public string OrderItemResourceId { get; set; }
            public string OrderItemQuantity { get; set; }
            public string OrderItemResourceCount { get; set; }
            public string ServicePeriodStartDate { get; set; }
            public string ServicePeriodEndDate { get; set; }
            public string DurationType { get; set; }
            public string Duration { get; set; }
            public string InterCompanyOrderId { get; set; }
            public string TaxTotal { get; set; }
            public string ISOCurrencyCode { get; set; }
            public ResourceAmount ResourceAmount { get; set; }
            public Product Product { get; set; }
            public List<Tax> Taxes  { get; set; }
        }

        public class Tax {
            public string type   { get; set; }
            public string Amount { get; set; }
        }

        public class SalesOrder
        {
            public string OrderId { get; set; }
            public string OrderUTCDateTime { get; set; }
            public string CustomerId { get; set; }
            public string TransactionalISOCurrencyCode { get; set; }
            public string OriginalOrderIdValue { get; set; }
            public string OrderType { get; set; }
            public string ShippingHandlingAmount { get; set; }
            public string TotalTaxAmount { get; set; }
            public string SubTotalAmount { get; set; }
            public string TotalAmount { get; set; }
            public List<OrderPayment> Payments { get; set; }
            public List<SalesOrderResource> SalesOrderResources { get; set; }
        }
        

        public class SalesOrders
        {
            // Dictionary<string::SalesOrder::OrderId, SalesOrder>
            private Dictionary<string, SalesOrder> dictSalesOrders;

            public Dictionary<string, SalesOrder> DictSalesOrder
            {
                get { return dictSalesOrders; }
                //set { dictSalesOrder = value; }
            }

            public SalesOrders(int count)
            {
                dictSalesOrders = new Dictionary<string, SalesOrder>(count);     
            }

            public void Add(SalesOrder order)
            {
                dictSalesOrders[order.OrderId] = order;
            }

            public void Serialize2JsonFile(string filePath)
            {
                
                StringBuilder strSalesOrdersJSON = new StringBuilder(1000);

                try
                {
                    strSalesOrdersJSON.AppendFormat("{0} \"SalesOrders\": [ ","{");
                    
                    // Pass the object for conversion object to JSON string
                    foreach (SalesOrder order in dictSalesOrders.Values)
                    {
                        strSalesOrdersJSON.Append(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(order));
                    }

                    strSalesOrdersJSON.AppendFormat("], \"SourceSystem\": \"string\"  {0}","}");

                    //////    Save The file
                    FileStream fl = File.Open(filePath, FileMode.Create, FileAccess.Write, FileShare.Read);

                    using (System.IO.StreamWriter file = new System.IO.StreamWriter(fl))
                    {
                        file.NewLine = "\r"; 
                        file.WriteLine(strSalesOrdersJSON.ToString());
                    }
                                        

                }
                catch (Exception ex)
                {

                    ScriptMain.LogMessageSt(String.Format("{0}`SalesOrders::Serialize2JsonFile`[{1}]", DateTime.Now.ToString(), ex.Message));
                    throw ex;
                }

            }
        }

        #endregion  // JSON classes
}]]></ProjectItem>
          <ProjectItem
            Name="ST_1bc4d9e91dbf417b9862c75a97db0565.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{3133ACB6-C005-429A-82E9-18F68B560CCE}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_2e79ef5ec40c40659c4b5fed897ff42b</RootNamespace>
    <AssemblyName>ST_1bc4d9e91dbf417b9862c75a97db0565</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
    <None Include="SalesOrersDataSample.json" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="MasterPresentationCompletion.sql" />
    <Content Include="MT_SalesOrders.sql" />
    <Content Include="WarningMail.sql" />
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="MasterPresentationCompletion.sql"
            Encoding="UTF8"><![CDATA[SELECT TOP 1
       [ID]
      ,[SOURCE]
      ,[SENDER]
      ,[TYPE]
      ,[STATUS]
      ,[DEPENDENCY]
      ,[MESSAGE]
      ,[SUBJECT]
      ,[EVENT_TIME]
      ,[REC_TIME_STAMP]
  FROM [HostOps].[dbo].[DwEtlLog]
  where 
  [SENDER] = 'googleAnalytics'
  and convert(date,[REC_TIME_STAMP]) = convert(date,GETDATE())
  and STATUS = 'I']]></ProjectItem>
          <ProjectItem
            Name="WarningMail.sql"
            Encoding="UTF8"><![CDATA[DECLARE @Recipients varchar(256) = 'bberlin@mediatemple.net;';
DECLARE @wmessage NVARCHAR(2000);

set @wsubject = 'RM SSIS HDFS ETL [Warning] SSIS PROD Master Presentation ETL seems to be delayed';
set @wmessage = 'SSIS PROD Master Presentation ETL is delaying RM SSIS HDFS ETL node';


EXEC [msdb].dbo.sp_send_dbmail
				@profile_name = '(mt) SMTP Mail',
				@recipients = @Recipients,
				@body = @wmessage,
				@subject = @wsubject,
				@importance='High'
				 ;]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_2e79ef5ec40c40659c4b5fed897ff42b</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_2e79ef5ec40c40659c4b5fed897ff42b</msb:DisplayName>
		<msb:ProjectId>{6D1A6A7B-57F8-4D06-8395-51C0362C0B8A}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_1bc4d9e91dbf417b9862c75a97db0565.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="MT_SalesOrders.sql"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="WarningMail.sql"/>
		<msb:File Include="MasterPresentationCompletion.sql"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:File Include="SalesOrersDataSample.json"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_2e79ef5ec40c40659c4b5fed897ff42b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_2e79ef5ec40c40659c4b5fed897ff42b")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2e79ef5ec40c40659c4b5fed897ff42b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2e79ef5ec40c40659c4b5fed897ff42b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2e79ef5ec40c40659c4b5fed897ff42b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_2e79ef5ec40c40659c4b5fed897ff42b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_2e79ef5ec40c40659c4b5fed897ff42b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_1bc4d9e91dbf417b9862c75a97db0565.dll">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
ogAABhEIb0IAAAo6R/7//94VEQh1KAAAARMJEQksBxEJbyAAAArc3goJLAYJbyAAAArc3jATBgJy
4wMAcCglAAAKEwoSCv4WBwAAAW8mAAAKEQZvIwAACigfAAAKKCEAAAYRBnoCewQAAARvOQAACm86
AAAKKhEHKgAAAEFMAAACAAAAigAAAMABAABKAgAAFQAAAAAAAAACAAAALAAAADUCAABhAgAACgAA
AAAAAAAAAAAAFgAAAFcCAABtAgAAMAAAACsAAAEbMAQA1wEAAAYAABECcjsEAHACKBYAAApvIQAA
CnJDBABwbyIAAApvJwAACihDAAAKKBcAAAYCcjsEAHACKBYAAApvIQAACnJbBABwbyIAAApvJwAA
CihDAAAKKBkAAAYCcjsEAHACKBYAAApvIQAACnJtBABwbyIAAApvJwAACihDAAAKKAkAAAYCcjsE
AHACKBYAAApvIQAACnKNBABwbyIAAApvJwAACihDAAAKKBUAAAYCcjsEAHACKBYAAApvIQAACnKt
BABwbyIAAApvJwAACihDAAAKKAsAAAYCcjsEAHACKBYAAApvIQAACnLPBABwbyIAAApvJwAACihD
AAAKKEQAAAooDQAABgJyOwQAcAIoFgAACm8hAAAKcucEAHBvIgAACm8nAAAKKEMAAAooDwAABgJy
OwQAcAIoFgAACm8hAAAKchUFAHBvIgAACm8nAAAKKEMAAAooGwAABgICKBYAAApvIQAACnIrBQBw
byIAAApvJwAACqUHAAABKBEAAAYCcjsEAHACKBYAAApvIQAACnJBBQBwbyIAAApvJwAACihDAAAK
KEQAAAooEwAABt4rCnJhBQBwKCUAAAoLEgH+FgcAAAFvJgAACgZvIwAACigfAAAKKCMAAAYGeioA
QRwAAAAAAAAAAAAAqwEAAKsBAAArAAAAKwAAARswBABPAAAABwAAEXJ/BQBwcpUFAHACKBYAAApv
IQAACnK7BQBwbyIAAApvJwAACigfAAAKCgYcGBkoRQAACgsHc0YAAAoMCANvRwAACt4KCCwGCG8g
AAAK3CoAARAAAAIAOwAJRAAKAAAAABswBABJAAAACAAAEQIoSAAACi0EFwzeOwIZGBgoRQAACgoG
b0kAAAoWajEEFwzeIxYM3h8GLAYGbyAAAArcC3LjBQBwB28jAAAKKEoAAAoWDN4ACCoAAAABHAAA
AgAWABIoAAoAAAAAAAAAADIyABUrAAABGzAEAGUAAAAJAAARcgMGAHAKBgsGKCIAAAYtCiCIEwAA
KEsAAAoGKCIAAAYtHgYoJQAAChMEEgQoTAAAChMFEgUoTQAACigzAAAKCwccGBkoRQAACgwIc0YA
AAoNCQJvRwAACt4KCSwGCW8gAAAK3CoAAAABEAAAAgBRAAlaAAoAAAAANg8Bck0GAHAoTgAACiou
clcGAHBzTwAACnoAABMwBAA7AAAACgAAEShQAAAKJnKJBgBwKFEAAAoKAwYoUgAACgtytQYAcBIB
cr8GAHAoUwAACh8gH1RvVAAACihDAAAKDAgqABMwAQAKAAAACwAAEX5VAAAKCgMKBioAABMwAQAO
AAAADAAAEQNzVgAACgoGb1cAAAoqBipeAnLnBgBwc1gAAAp9BAAABAIoWQAACioeAnsTAAAEKiIC
A30TAAAEKh4CexQAAAQqIgIDfRQAAAQqHgJ7FQAABCoiAgN9FQAABCoeAnsWAAAEKiICA30WAAAE
Kh4CKA4AAAoqHgJ7FwAABCoiAgN9FwAABCoeAnsYAAAEKiICA30YAAAEKh4CexkAAAQqIgIDfRkA
AAQqHgJ7GgAABCoiAgN9GgAABCoeAigOAAAKKh4CexsAAAQqIgIDfRsAAAQqHgJ7HAAABCoiAgN9
HAAABCoeAnsdAAAEKiICA30dAAAEKh4Cex4AAAQqIgIDfR4AAAQqHgJ7HwAABCoiAgN9HwAABCoe
AigOAAAKKh4CKA4AAAoqHgJ7IAAABCoiAgN9IAAABCoeAnshAAAEKiICA30hAAAEKh4CeyIAAAQq
IgIDfSIAAAQqHgJ7IwAABCoiAgN9IwAABCoeAnskAAAEKiICA30kAAAEKh4CeyUAAAQqIgIDfSUA
AAQqHgJ7JgAABCoiAgN9JgAABCoeAnsnAAAEKiICA30nAAAEKh4CeygAAAQqIgIDfSgAAAQqHgJ7
KQAABCoiAgN9KQAABCoeAnsqAAAEKiICA30qAAAEKh4CeysAAAQqIgIDfSsAAAQqHgJ7LAAABCoi
AgN9LAAABCoeAigOAAAKKh4CKA4AAAoqHgJ7LQAABCoiAgN9LQAABCoeAnsuAAAEKiICA30uAAAE
Kh4Cey8AAAQqIgIDfS8AAAQqHgJ7MAAABCoiAgN9MAAABCoeAnsxAAAEKiICA30xAAAEKh4CezIA
AAQqIgIDfTIAAAQqHgJ7MwAABCoiAgN9MwAABCoeAns0AAAEKiICA300AAAEKh4CezUAAAQqIgID
fTUAAAQqHgJ7NgAABCoiAgN9NgAABCoeAns3AAAEKiICA303AAAEKh4CezgAAAQqIgIDfTgAAAQq
HgJ7OQAABCoiAgN9OQAABCoeAns6AAAEKiICA306AAAEKh4CKA4AAAoqHgJ7OwAABCoiAgN9OwAA
BCoeAns8AAAEKiICA308AAAEKh4CKA4AAAoqHgJ7PQAABCoiAgN9PQAABCoeAns+AAAEKiICA30+
AAAEKh4Cez8AAAQqIgIDfT8AAAQqHgJ7QAAABCoiAgN9QAAABCoeAntBAAAEKiICA31BAAAEKh4C
e0IAAAQqIgIDfUIAAAQqHgJ7QwAABCoiAgN9QwAABCoeAntEAAAEKiICA31EAAAEKh4Ce0UAAAQq
IgIDfUUAAAQqHgJ7RgAABCoiAgN9RgAABCoeAntHAAAEKiICA31HAAAEKh4Ce0gAAAQqIgIDfUgA
AAQqHgIoDgAACioeAntJAAAEKk4CKA4AAAoCA3NaAAAKfUkAAAQqTgJ7SQAABANvhwAABgNvWwAA
CioAABswBADaAAAADQAAESDoAwAAc1wAAAoKBnIDBwBwci8HAHBvXQAACiYCe0kAAARvKQAACm8q
AAAKEwUrGhIFKCsAAAoLBnNeAAAKByhfAAAKb2AAAAomEgUoMQAACi3d3g4SBf4WAwAAG28gAAAK
3AZyMwcAcHJ1BwBwb10AAAomAxgYFyhFAAAKDAhzRgAACg0JcnkHAHBvYQAACgkGbyYAAApvRwAA
Ct4KCSwGCW8gAAAK3N4vEwRyfQcAcCglAAAKEwYSBv4WBwAAAW8mAAAKEQRvIwAACigfAAAKKCMA
AAYRBHoqAAABKAAAAgAuACdVAA4AAAAAAgCFABmeAAoAAAAAAAALAJ+qAC8rAAABAAAAALQAAADO
yu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZl
cnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5
MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFE
UEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAoHAAAI34AAJQcAAC0
HwAAI1N0cmluZ3MAAAAASDwAANQHAAAjVVMAHEQAABAAAAAjR1VJRAAAACxEAABgBAAAI0Jsb2IA
AAAAAAAAAgAAAVcdogkJAwAAAPolMwAWAAABAAAARgAAAA8AAABJAAAAowAAAE4AAABhAAAAAgAA
AM8AAAANAAAACwAAAEQAAACFAAAABgAAAAEAAAAGAAAAAQAAAAEAAAAAAAoAAQAAAAAABgBBAToB
CgBdAUgBDgC9AZQBBgDZAToBBgDvAd4BBgAgAgsCBgBAAzoBEgAnBBsEEgCOBHwEBgCTEHgQBgCA
F3gQBgBSGDgYBgB9GGsYBgCUGGsYBgCxGGsYBgDQGGsYBgDpGGsYBgACGWsYBgAdGWsYBgA4GWsY
BgBRGWsYBgCKGWoZBgCqGWoZBgD/GewZBgAcGjoBBgAhGjoBBgBFGmsYCgBxGlsaCgCKGlsaBgCf
GmoZDgDBGpQBDgDjGpQBFgA8GxwbFgBYGxwbBgCIGzoBEgCpG5YbEgC7G3wEEgDIG5YbBgDgGzoB
BgDtGzoBFgABHBwbFgAZHBwbBgAiHDoBLwBsHAAAswCHHAAABgCsHDoBBgDSHMgcEgDjHHwEEgAH
HRsEEgAYHRsEEgAzHRsEBgBrHVgdEgB3HRsECgCGHcgcBgCsHcgcBgC3HcgcBgDAHcgcBgDLHcgc
BgDVHcgcBgDiHcgcBgDpHcgcBgAQHjoBBgApHhgeBgBAHjoBBgBGHjoBBgBNHjoBBgBwHjoBBgC1
HgsCBgDrHt8eGgA8HxwfAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABrADwACQADAAUA
AQAQAHQAfwANAAQACAADAQAAowAAABEAEAArAAEAEACxAH8ABQATACsAAQAQAMAAfwAFABcANAAB
ABAAzQB/AAUAGwA9AAEAEADcAH8ABQAgAEgAAQAQAOQAfwAFACAASQABABAA7AB/AAUALQBkAAEA
EAADAX8ABQAtAGUAAQAQABYBfwAFADsAggABABAAGgF/AAUAPQCHAAEAEAAlAX8ABQBJAKAAEQD/
ARMAEQAsAhcAEQB2AjkABgAxBGQABgBDBGgAAQBNBYwAAQBuBYwAAQCQBY8AAQCtBYwAAQDUBZIA
AQDwBY8AAQARBowAAQAyBowAAQBSBowAAQBvBowABgYfB48AVoAnB6MAVoAvB6MAAQCTB4wAAQCp
B4wAAQDAB4wAAQDZB4wAAQCRCIwAAQCpCIwAAQDNCIwAAQDkCLwAAQCgCYwAAQC6CYwAAQDVCYwA
AQDrCYwAAQAGCtAAAQAjDIwAAQBCDIwAAQBkDIwAAQCADIwAAQCkDIwAAQC5DIwAAQDSDIwAAQDz
DIwAAQANDYwAAQAuDYwAAQBTDYwAAQB5DYwAAQCYDYwAAQCuEIwAAQDLEIwAAQDwEIwAAQATEYwA
AQA7EYwAAQBjEYwAAQCJEYwAAQCnEYwAAQDBEYwAAQDmEYwAAQAAEowAAQAhEgIBAQBBEgYBAQBa
EgoBAQBBE4wAAQCRCIwAAQA4FYwAAQBRFYwAAQBzFYwAAQCPFYwAAQC9FYwAAQDjFYwAAQD+FYwA
AQAmFowAAQBGFowAAQBmFowAAQCDFksBAQCdFlMBAQCNF20BUCAAAAAAgxg8AhsAAQBYIAAAAACT
CEICHwABAJEgAAAAAJMIVgIkAAEAmCAAAAAAkwhiAikAAQCgIAAAAACWCIYCPQACALMgAAAAAIYY
PAIbAAIApyAAAAAAkRi6GrcBAgC7IAAAAACGCJoCRwACAMMgAAAAAIYIrgJLAAIAzCAAAAAAhgjC
AkcAAwDUIAAAAACGCNcCSwADAN0gAAAAAIYI7AJQAAQA5SAAAAAAhgj8AlQABADuIAAAAACGCAwD
RwAFAPYgAAAAAIYIJgNLAAUA/yAAAAAAhghJA1kABgAHIQAAAACGCFgDXgAGABAhAAAAAIYIZwNQ
AAcAGCEAAAAAhgh7A1QABwAhIQAAAACGCI8DRwAIACkhAAAAAIYIowNLAAgAMiEAAAAAhgi3A0cA
CQA6IQAAAACGCMoDSwAJAEMhAAAAAIYI3QNHAAoASyEAAAAAhgjtA0sACgBUIQAAAACGCP0DRwAL
AFwhAAAAAIYIDARLAAsAaCEAAAAAhgBRBBsADADAIgAAAACBAFYEGwAMAEwlAAAAAIEAZgQbAAwA
bCYAAAAAgQCeBGwADAB4KQAAAACBALMEGwANAHgrAAAAAIYAuARLAA0A5CsAAAAAkQDDBHIADgBY
LAAAAACWAM8EdwAPANwsAAAAAIEA3AR8ABAA6iwAAAAAgQDpBHwAEQD4LAAAAACBAAIFgQASAEAt
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
5hcAAAEA7hcAAAEA5hcAAAEA+BcAAAEA+BcAAAEA/xcAAAEAChgAAAEAFhgAAAEAHhgAAAEA1hcA
AAEA1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEA
1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEA1hcA
AAEA1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEA
1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEA1hcA
AAEA1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEA
1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEA1hcAAAEAIxgAAAEAKRgAAAEALxhhADwCSwBp
ADwCSwBxADwCSwB5ADwCSwCBADwCSwCJADwCSwCRADwCSwCZADwCSwChADwCSwCpADwCSwCxADwC
VAC5ADwCGwDBADwCGwAJADwCGwDJADMakAHJAE4alwEpADwCnAHhADwCqAHxADwCGwARADwCGwD5
ADwCGwAZAPUauwEBAUgbwQEJAWobxwERAXMbRwAZAY8bzgFJADwCSwAhAbYbGwApATwC1QExAdIb
3AEZAeYb4AFBAfkbGwABAQsc5wFJAWob7QFZASwcRwBRATgc9AE5AEIc+QEJAEocRwBRAVMc3AEB
AV0cVAAMAHwcGwIUAJIcMAIcAKAcRQIkADwCVABxAbQcUQIsADwCGwAsALAXXgIkALAXXgIcAL8c
ZAI0ADwCVAAZAY8bgAI0ALAXXgJ5AdcclgIpAfMcmwJBAAEdGwBBABMdoQJBACodqAKZAU4dUACZ
AZIcrgKhAaAc3AGpAX8dtAKxATwCSwCpAWobuQJxAbQcvgJxAZsdxAKhAb8cZAIZAeYb5QJxAaQd
6wJ5AbYb+ALZATwCCAPpAfQdSwB5Af4dcgDhAQUeGQPxAfQdHQP5ATAeLQM5ADYeGQMBAkocRwAJ
AkochwARAjwCSwA5AGUe+QEZAn0eQAMZApQeRwM5AEochwAZAaceUQMZAa8ejAAhAjwCSwAhAsAe
RwBBADwCSwAZADwCGwAMADwCVAAMANYeagMpAjwCVAApAvkecgMxAjwCGwAxAlEfgwMpAlsfiAPp
AWIfSwAIAEQApwAIAEgArAApAJMArgEuAEMAGwQuAGMAQQQuADsAIQQuAFsAOAQuAAsAqgMuABMA
8gMuABsAGwQuACMAGwQuACsAGwQuADMA8gNDAGsArABJAJMArgFhAJsArACDAKsArADBAJsArADh
AJsArAAAAZsArAABAZsArAAgAZsArAAhAZsArABAAZsArABBAZsArABgAZsArABhAZsArACAAZsA
rACBAZsArACgAZsArAChAZsArADAAZsArADBAZsArADgAZsArADhAZsArAAAApsArAAgApsArABA
ApsArABgApsArABhApsArACAApsArACBApsArACgApsArAChApsArADAApsArADBApsArADgApsA
rADhApsArAAAA5sArAABA5sArAAgA5sArAAhA5sArABAA5sArABBA5sArABgA5sArABhA5sArACB
A5sArAChA5sArADBA5sArADhA5sArAABBJsArAAhBJsArABBBJsArABhBJsArACBBJsArAChBJsA
rADBBJsArADhBJsArAABBZsArAAhBZsArABBBZsArABgBZsArABhBZsArACABZsArACBBZsArACg
BZsArAChBZsArADABZsArADBBZsArADgBZsArADhBZsArAAABpsArAABBpsArAAgBpsArAAhBpsA
rABABpsArABBBpsArABhBpsArACABpsArACBBpsArACgBpsArAChBpsArADABpsArADBBpsArADg
BpsArADhBpsArAAAB5sArAABB5sArAAgB5sArAAhB5sArABAB5sArABBB5sArABgB5sArABhB5sA
rACBB5sArACgB5sArAChB5sArADAB5sArADBB5sArADgB5sArADhB5sArAAACJsArAABCJsArAAg
CJsArAAhCJsArABACJsArABBCJsArABgCJsArABhCJsArACACJsArACBCJsArACgCJsArAChCJsA
rADACJsArADBCJsArADhCJsArAABCZsArAAgCZsArABACZsArABgCZsArACACZsArACgCZsArADA
CZsArADgCZsArAAACpsArAAgCpsArABACpsArABgCpsArACACpsArACgCpsArADACpsArADgCpsA
rAAAC5sArAAgC5sArABAC5sArABgC5sArACAC5sArACgC5sArADAC5sArADgC5sArAAADJsArAAg
DJsArABADJsArACgDJsArADADJsArADgDJsArAAADZsArAAgDZsArABADZsArABgDZsArACADZsA
rACgDZsArADADZsArADgDZsArAAADpsArAAgDpsArABADpsArABgDpsArACADpsArACgDpsArADA
DpsArADgDpsArAAAD5sArAAgD5sArABAD5sArABgD5sArACAD5sArACgD5sArADAD5sArADgD5sA
rAAAEJsArABAEJsArABgEJsArACAEJsArACgEJsArADgEJsArAAAEZsArAAgEZsArABAEZsArABg
EZsArACAEZsArACgEZsArADAEZsArADgEZsArAAAEpsArAAgEpsArABAEpsArABgEpsArACAEpsA
rACgEpsArADAEpsArADgEpsArAAAE5sArAAgE5sArABAE5sArABgE5sArACAE5sArACgE5sArADA
E5sArACjAf4BaAKGAskC8AIPAyMDMgNXA2ADZAOPAwIAAQADAAMABAAEAAYADgAHABIACAAWAAoA
GwAMACgADQA2AA4AOAAPAEQAAADvAS8AAABuAjQAAACSAkIAAACLBpYAAACbBpYAAACsBpoAAAC4
BpYAAADOBp4AAADZBpoAAADpBpYAAAD5BpYAAAAIB5YAAAAUB5YAAAD1B5YAAAD6B5YAAAAACJYA
AAAICJYAAAAECZYAAAALCZYAAAAeCZYAAACxAMAAAAAfCpYAAAAoCpYAAAAyCpYAAAA3CpYAAABB
CtQAAAC5DZYAAADHDZYAAADYDZYAAADjDZYAAAD2DZYAAAD6DZYAAAACDpYAAAASDpYAAAAbDpYA
AAArDpYAAAA/DpYAAABUDpYAAABiDpYAAABxEpYAAAB9EpYAAACREpYAAACjEpYAAAC6EpYAAADR
EpYAAADmEpYAAADzEpYAAAD8EpYAAAAQE5YAAAAZE5YAAADNABIBAADkABcBAAApExwBAABXE5YA
AAAECZYAAADCFpYAAADKFpYAAADbFpYAAADmFpYAAAADF5YAAAAYF5YAAAAiF5YAAAA5F5YAAABI
F5YAAABXF5YAAABjF1sBAABsF2QBAADHF4YBAgACAAMAAQAEAAUAAgADAAUAAgAFAAcAAgAIAAkA
AQAJAAkAAgAKAAsAAQALAAsAAgAMAA0AAQANAA0AAgAOAA8AAQAPAA8AAgAQABEAAQARABEAAQAT
ABMAAgASABMAAgAUABUAAQAVABUAAgAWABcAAQAXABcAAgAYABkAAQAZABkAAQAbABsAAgAaABsA
AgArAB0AAQAsAB0AAQAuAB8AAgAtAB8AAQAwACEAAgAvACEAAgAxACMAAQAyACMAAgA0ACUAAQA1
ACUAAgA2ACcAAQA3ACcAAgA4ACkAAQA5ACkAAgA6ACsAAQA7ACsAAgA9AC0AAQA+AC0AAgA/AC8A
AQBAAC8AAgBBADEAAQBCADEAAgBDADMAAQBEADMAAQBGADUAAgBFADUAAgBJADcAAQBKADcAAgBL
ADkAAQBMADkAAgBNADsAAQBOADsAAQBQAD0AAgBPAD0AAgBRAD8AAQBSAD8AAQBUAEEAAgBTAEEA
AQBWAEMAAgBVAEMAAgBXAEUAAQBYAEUAAgBZAEcAAQBaAEcAAgBbAEkAAQBcAEkAAgBdAEsAAQBe
AEsAAgBfAE0AAQBgAE0AAgBhAE8AAQBiAE8AAgBlAFEAAQBmAFEAAgBnAFMAAQBoAFMAAgBpAFUA
AQBqAFUAAgBrAFcAAQBsAFcAAgBtAFkAAQBuAFkAAgBvAFsAAQBwAFsAAgBxAF0AAQByAF0AAgBz
AF8AAQB0AF8AAgB1AGEAAQB2AGEAAgB3AGMAAQB4AGMAAgB5AGUAAQB6AGUAAQB8AGcAAgB7AGcA
AgB9AGkAAQB+AGkAAgB/AGsAAQCAAGsAAgCCAG0AAQCDAG0AAgCEAG8AAQCFAG8AAgCHAHEAAQCI
AHEAAgCJAHMAAQCKAHMAAgCLAHUAAQCMAHUAAQCOAHcAAgCNAHcAAgCPAHkAAQCQAHkAAgCRAHsA
AQCSAHsAAgCTAH0AAQCUAH0AAQCWAH8AAgCVAH8AAgCXAIEAAQCYAIEAAQCaAIMAAgCZAIMAAQCc
AIUAAgCbAIUAAgCdAIcAAQCeAIcAAgCgAIkAEwInAjwCSgJXAnkCBIAAAAEAAACLGpBhAAAAAAAA
yBkAAAQAAAAAAAAAAAAAAAEAMQEAAAAABAAAAAAAAAAAAAAAAQA6AQAAAAAMAAAAAAAAAAAAAAAK
AHUBAAAAAAQAAAAAAAAAAAAAAAEAGwQAAAAADAAAAAAAAAAAAAAACgD9GgAAAAAEAAAAAAAAAAAA
AAB6AwYfAAAAAAAAAAABAAAAbh8AAAUABAAAAAA8TW9kdWxlPgBTVF8xYmM0ZDllOTFkYmY0MTdi
OTg2MmM3NWE5N2RiMDU2NS5kbGwAUmVzb3VyY2VzAFNUXzJlNzllZjVlYzQwYzQwNjU5YzRiNWZl
ZDg5N2ZmNDJiLlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0TWFpbgBTVF8yZTc5ZWY1ZWM0MGM0
MDY1OWM0YjVmZWQ4OTdmZjQyYgBTY3JpcHRSZXN1bHRzAEJpbGxpbmdBZGRyZXNzAE9yZGVyUGF5
bWVudABSZXNvdXJjZUFtb3VudABSZXZlbnVlAFByb2R1Y3QAUmVnaXN0cmF0aW9uUGVyaW9kVHlw
ZQBTYWxlc09yZGVyUmVzb3VyY2UAVGF4AFNhbGVzT3JkZXIAU2FsZXNPcmRlcnMAbXNjb3JsaWIA
U3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMu
VGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UARW51bQBTeXN0ZW0u
UmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlv
bgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdlcgBn
ZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVs
dABEZWZhdWx0AGdldF92YXJEYkNvbm5lY3Rpb24Ac2V0X3ZhckRiQ29ubmVjdGlvbgBnZXRfdmFy
RGF0YURpcmVjdG9yeQBzZXRfdmFyRGF0YURpcmVjdG9yeQBnZXRfdmFyRGF5c0JhY2sAc2V0X3Zh
ckRheXNCYWNrAGdldF92YXJTYWxlc09yZGVySnNvbkZpbGUAc2V0X3ZhclNhbGVzT3JkZXJKc29u
RmlsZQBEYXRlVGltZQBnZXRfdmFyRW5kRGF0ZQBzZXRfdmFyRW5kRGF0ZQBnZXRfdmFyTW9kdWxl
VG9DYWxsAHNldF92YXJNb2R1bGVUb0NhbGwAZ2V0X3ZhckRCbXRiaU9kc1B3ZABzZXRfdmFyREJt
dGJpT2RzUHdkAGdldF92YXJQYWNrYWdlTmFtZQBzZXRfdmFyUGFja2FnZU5hbWUAZ2V0X3ZhclRh
c2tOYW1lAHNldF92YXJUYXNrTmFtZQBnZXRfdmFyU1FMX0RpcgBzZXRfdmFyU1FMX0RpcgBTeXN0
ZW0uRGF0YQBEYXRhVGFibGUAbV9kdE10U2FsZXNPcmRlcnMAbV9zYWxlc09yZGVycwBNYWluAExv
YWRPcmRlcnNJdGVtcwBMb2FkUGF5bWVudHNGb3JPcmRlcnMAU3lzdGVtLkRhdGEuT2xlRGIAT2xl
RGJDb25uZWN0aW9uAEZldGNoU2FsZXNPcmRlcnNEYXRhAEluaXQATG9nTWVzc2FnZQBJc0ZpbGVS
ZWFkeQBMb2dNZXNzYWdlU3QAQW1vdW50Rm9ybWF0AFJlZ2lzdHJhdGlvblBlcmlvZEZvcm1hdABE
YXRlVGltZUZvcm1hdABNVDJHRF9PcmRlclR5cGUAQ291bnRyeTJDdXJyZW5jeUlTT0NvZGUAU2Vy
aWFsaXplRGF0YVRvSlNPTgA8dmFyRGJDb25uZWN0aW9uPmtfX0JhY2tpbmdGaWVsZAA8dmFyRGF0
YURpcmVjdG9yeT5rX19CYWNraW5nRmllbGQAPHZhckRheXNCYWNrPmtfX0JhY2tpbmdGaWVsZAA8
dmFyU2FsZXNPcmRlckpzb25GaWxlPmtfX0JhY2tpbmdGaWVsZAA8dmFyRW5kRGF0ZT5rX19CYWNr
aW5nRmllbGQAPHZhck1vZHVsZVRvQ2FsbD5rX19CYWNraW5nRmllbGQAPHZhckRCbXRiaU9kc1B3
ZD5rX19CYWNraW5nRmllbGQAPHZhclBhY2thZ2VOYW1lPmtfX0JhY2tpbmdGaWVsZAA8dmFyVGFz
a05hbWU+a19fQmFja2luZ0ZpZWxkADx2YXJTUUxfRGlyPmtfX0JhY2tpbmdGaWVsZAB2YXJEYkNv
bm5lY3Rpb24AdmFyRGF0YURpcmVjdG9yeQB2YXJEYXlzQmFjawB2YXJTYWxlc09yZGVySnNvbkZp
bGUAdmFyRW5kRGF0ZQB2YXJNb2R1bGVUb0NhbGwAdmFyREJtdGJpT2RzUHdkAHZhclBhY2thZ2VO
YW1lAHZhclRhc2tOYW1lAHZhclNRTF9EaXIAdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAZ2V0X0Np
dHkAc2V0X0NpdHkAZ2V0X1N0YXRlAHNldF9TdGF0ZQBnZXRfQ291bnRyeQBzZXRfQ291bnRyeQBn
ZXRfUG9zdGFsQ29kZQBzZXRfUG9zdGFsQ29kZQA8Q2l0eT5rX19CYWNraW5nRmllbGQAPFN0YXRl
PmtfX0JhY2tpbmdGaWVsZAA8Q291bnRyeT5rX19CYWNraW5nRmllbGQAPFBvc3RhbENvZGU+a19f
QmFja2luZ0ZpZWxkAENpdHkAU3RhdGUAQ291bnRyeQBQb3N0YWxDb2RlAGdldF9BbW91bnQAc2V0
X0Ftb3VudABnZXRfTWVyY2hhbnRBY2NvdW50S2V5AHNldF9NZXJjaGFudEFjY291bnRLZXkAZ2V0
X0luZGV4AHNldF9JbmRleABnZXRfQmlsbGluZ0FkZHJlc3MAc2V0X0JpbGxpbmdBZGRyZXNzADxB
bW91bnQ+a19fQmFja2luZ0ZpZWxkADxNZXJjaGFudEFjY291bnRLZXk+a19fQmFja2luZ0ZpZWxk
ADxJbmRleD5rX19CYWNraW5nRmllbGQAPEJpbGxpbmdBZGRyZXNzPmtfX0JhY2tpbmdGaWVsZABB
bW91bnQATWVyY2hhbnRBY2NvdW50S2V5AEluZGV4AGdldF9JQ0FOTkZlZQBzZXRfSUNBTk5GZWUA
Z2V0X0xpc3RQcmljZQBzZXRfTGlzdFByaWNlAGdldF9Db3N0AHNldF9Db3N0AGdldF9QcmljZVBh
aWQAc2V0X1ByaWNlUGFpZABnZXRfcmV2ZW51ZQBzZXRfcmV2ZW51ZQA8SUNBTk5GZWU+a19fQmFj
a2luZ0ZpZWxkADxMaXN0UHJpY2U+a19fQmFja2luZ0ZpZWxkADxDb3N0PmtfX0JhY2tpbmdGaWVs
ZAA8UHJpY2VQYWlkPmtfX0JhY2tpbmdGaWVsZAA8cmV2ZW51ZT5rX19CYWNraW5nRmllbGQASUNB
Tk5GZWUATGlzdFByaWNlAENvc3QAUHJpY2VQYWlkAHJldmVudWUAZ2V0X1Byb2R1Y3RGYW1pbHkA
c2V0X1Byb2R1Y3RGYW1pbHkAZ2V0X1Byb2R1Y3RTdWJGYW1pbHkAc2V0X1Byb2R1Y3RTdWJGYW1p
bHkAZ2V0X1BlcmlvZFR5cGUAc2V0X1BlcmlvZFR5cGUAZ2V0X1JlZ2lzdHJhdGlvblBlcmlvZABz
ZXRfUmVnaXN0cmF0aW9uUGVyaW9kAGdldF9UTEQAc2V0X1RMRABnZXRfU3BvbnNvcgBzZXRfU3Bv
bnNvcgBnZXRfUmVnaXN0cnlTcG9uc29yAHNldF9SZWdpc3RyeVNwb25zb3IAZ2V0X1N1cHBsaWVy
AHNldF9TdXBwbGllcgBnZXRfUHJvZHVjdFRMRFBoYXNlAHNldF9Qcm9kdWN0VExEUGhhc2UAZ2V0
X1JlZ2lzdHJ5RGVzY3JpcHRpb24Ac2V0X1JlZ2lzdHJ5RGVzY3JpcHRpb24AZ2V0X1ByaWNlVGll
ckRlc2NyaXB0aW9uAHNldF9QcmljZVRpZXJEZXNjcmlwdGlvbgBnZXRfUHJpY2VUaWVyTmFtZQBz
ZXRfUHJpY2VUaWVyTmFtZQBnZXRfUHJlbWl1bVRpZXJUeXBlAHNldF9QcmVtaXVtVGllclR5cGUA
PFByb2R1Y3RGYW1pbHk+a19fQmFja2luZ0ZpZWxkADxQcm9kdWN0U3ViRmFtaWx5PmtfX0JhY2tp
bmdGaWVsZAA8UGVyaW9kVHlwZT5rX19CYWNraW5nRmllbGQAPFJlZ2lzdHJhdGlvblBlcmlvZD5r
X19CYWNraW5nRmllbGQAPFRMRD5rX19CYWNraW5nRmllbGQAPFNwb25zb3I+a19fQmFja2luZ0Zp
ZWxkADxSZWdpc3RyeVNwb25zb3I+a19fQmFja2luZ0ZpZWxkADxTdXBwbGllcj5rX19CYWNraW5n
RmllbGQAPFByb2R1Y3RUTERQaGFzZT5rX19CYWNraW5nRmllbGQAPFJlZ2lzdHJ5RGVzY3JpcHRp
b24+a19fQmFja2luZ0ZpZWxkADxQcmljZVRpZXJEZXNjcmlwdGlvbj5rX19CYWNraW5nRmllbGQA
PFByaWNlVGllck5hbWU+a19fQmFja2luZ0ZpZWxkADxQcmVtaXVtVGllclR5cGU+a19fQmFja2lu
Z0ZpZWxkAFByb2R1Y3RGYW1pbHkAUHJvZHVjdFN1YkZhbWlseQBQZXJpb2RUeXBlAFJlZ2lzdHJh
dGlvblBlcmlvZABUTEQAU3BvbnNvcgBSZWdpc3RyeVNwb25zb3IAU3VwcGxpZXIAUHJvZHVjdFRM
RFBoYXNlAFJlZ2lzdHJ5RGVzY3JpcHRpb24AUHJpY2VUaWVyRGVzY3JpcHRpb24AUHJpY2VUaWVy
TmFtZQBQcmVtaXVtVGllclR5cGUAZ2V0X09yZGVySXRlbUlkAHNldF9PcmRlckl0ZW1JZABnZXRf
T3JkZXJJdGVtUmVzb3VyY2VJZABzZXRfT3JkZXJJdGVtUmVzb3VyY2VJZABnZXRfT3JkZXJJdGVt
UXVhbnRpdHkAc2V0X09yZGVySXRlbVF1YW50aXR5AGdldF9PcmRlckl0ZW1SZXNvdXJjZUNvdW50
AHNldF9PcmRlckl0ZW1SZXNvdXJjZUNvdW50AGdldF9TZXJ2aWNlUGVyaW9kU3RhcnREYXRlAHNl
dF9TZXJ2aWNlUGVyaW9kU3RhcnREYXRlAGdldF9TZXJ2aWNlUGVyaW9kRW5kRGF0ZQBzZXRfU2Vy
dmljZVBlcmlvZEVuZERhdGUAZ2V0X0R1cmF0aW9uVHlwZQBzZXRfRHVyYXRpb25UeXBlAGdldF9E
dXJhdGlvbgBzZXRfRHVyYXRpb24AZ2V0X0ludGVyQ29tcGFueU9yZGVySWQAc2V0X0ludGVyQ29t
cGFueU9yZGVySWQAZ2V0X1RheFRvdGFsAHNldF9UYXhUb3RhbABnZXRfSVNPQ3VycmVuY3lDb2Rl
AHNldF9JU09DdXJyZW5jeUNvZGUAZ2V0X1Jlc291cmNlQW1vdW50AHNldF9SZXNvdXJjZUFtb3Vu
dABnZXRfUHJvZHVjdABzZXRfUHJvZHVjdABTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBMaXN0
YDEAZ2V0X1RheGVzAHNldF9UYXhlcwA8T3JkZXJJdGVtSWQ+a19fQmFja2luZ0ZpZWxkADxPcmRl
ckl0ZW1SZXNvdXJjZUlkPmtfX0JhY2tpbmdGaWVsZAA8T3JkZXJJdGVtUXVhbnRpdHk+a19fQmFj
a2luZ0ZpZWxkADxPcmRlckl0ZW1SZXNvdXJjZUNvdW50PmtfX0JhY2tpbmdGaWVsZAA8U2Vydmlj
ZVBlcmlvZFN0YXJ0RGF0ZT5rX19CYWNraW5nRmllbGQAPFNlcnZpY2VQZXJpb2RFbmREYXRlPmtf
X0JhY2tpbmdGaWVsZAA8RHVyYXRpb25UeXBlPmtfX0JhY2tpbmdGaWVsZAA8RHVyYXRpb24+a19f
QmFja2luZ0ZpZWxkADxJbnRlckNvbXBhbnlPcmRlcklkPmtfX0JhY2tpbmdGaWVsZAA8VGF4VG90
YWw+a19fQmFja2luZ0ZpZWxkADxJU09DdXJyZW5jeUNvZGU+a19fQmFja2luZ0ZpZWxkADxSZXNv
dXJjZUFtb3VudD5rX19CYWNraW5nRmllbGQAPFByb2R1Y3Q+a19fQmFja2luZ0ZpZWxkADxUYXhl
cz5rX19CYWNraW5nRmllbGQAT3JkZXJJdGVtSWQAT3JkZXJJdGVtUmVzb3VyY2VJZABPcmRlckl0
ZW1RdWFudGl0eQBPcmRlckl0ZW1SZXNvdXJjZUNvdW50AFNlcnZpY2VQZXJpb2RTdGFydERhdGUA
U2VydmljZVBlcmlvZEVuZERhdGUARHVyYXRpb25UeXBlAER1cmF0aW9uAEludGVyQ29tcGFueU9y
ZGVySWQAVGF4VG90YWwASVNPQ3VycmVuY3lDb2RlAFRheGVzAGdldF90eXBlAHNldF90eXBlADx0
eXBlPmtfX0JhY2tpbmdGaWVsZAB0eXBlAGdldF9PcmRlcklkAHNldF9PcmRlcklkAGdldF9PcmRl
clVUQ0RhdGVUaW1lAHNldF9PcmRlclVUQ0RhdGVUaW1lAGdldF9DdXN0b21lcklkAHNldF9DdXN0
b21lcklkAGdldF9UcmFuc2FjdGlvbmFsSVNPQ3VycmVuY3lDb2RlAHNldF9UcmFuc2FjdGlvbmFs
SVNPQ3VycmVuY3lDb2RlAGdldF9PcmlnaW5hbE9yZGVySWRWYWx1ZQBzZXRfT3JpZ2luYWxPcmRl
cklkVmFsdWUAZ2V0X09yZGVyVHlwZQBzZXRfT3JkZXJUeXBlAGdldF9TaGlwcGluZ0hhbmRsaW5n
QW1vdW50AHNldF9TaGlwcGluZ0hhbmRsaW5nQW1vdW50AGdldF9Ub3RhbFRheEFtb3VudABzZXRf
VG90YWxUYXhBbW91bnQAZ2V0X1N1YlRvdGFsQW1vdW50AHNldF9TdWJUb3RhbEFtb3VudABnZXRf
VG90YWxBbW91bnQAc2V0X1RvdGFsQW1vdW50AGdldF9QYXltZW50cwBzZXRfUGF5bWVudHMAZ2V0
X1NhbGVzT3JkZXJSZXNvdXJjZXMAc2V0X1NhbGVzT3JkZXJSZXNvdXJjZXMAPE9yZGVySWQ+a19f
QmFja2luZ0ZpZWxkADxPcmRlclVUQ0RhdGVUaW1lPmtfX0JhY2tpbmdGaWVsZAA8Q3VzdG9tZXJJ
ZD5rX19CYWNraW5nRmllbGQAPFRyYW5zYWN0aW9uYWxJU09DdXJyZW5jeUNvZGU+a19fQmFja2lu
Z0ZpZWxkADxPcmlnaW5hbE9yZGVySWRWYWx1ZT5rX19CYWNraW5nRmllbGQAPE9yZGVyVHlwZT5r
X19CYWNraW5nRmllbGQAPFNoaXBwaW5nSGFuZGxpbmdBbW91bnQ+a19fQmFja2luZ0ZpZWxkADxU
b3RhbFRheEFtb3VudD5rX19CYWNraW5nRmllbGQAPFN1YlRvdGFsQW1vdW50PmtfX0JhY2tpbmdG
aWVsZAA8VG90YWxBbW91bnQ+a19fQmFja2luZ0ZpZWxkADxQYXltZW50cz5rX19CYWNraW5nRmll
bGQAPFNhbGVzT3JkZXJSZXNvdXJjZXM+a19fQmFja2luZ0ZpZWxkAE9yZGVySWQAT3JkZXJVVENE
YXRlVGltZQBDdXN0b21lcklkAFRyYW5zYWN0aW9uYWxJU09DdXJyZW5jeUNvZGUAT3JpZ2luYWxP
cmRlcklkVmFsdWUAT3JkZXJUeXBlAFNoaXBwaW5nSGFuZGxpbmdBbW91bnQAVG90YWxUYXhBbW91
bnQAU3ViVG90YWxBbW91bnQAVG90YWxBbW91bnQAUGF5bWVudHMAU2FsZXNPcmRlclJlc291cmNl
cwBEaWN0aW9uYXJ5YDIAZGljdFNhbGVzT3JkZXJzAGdldF9EaWN0U2FsZXNPcmRlcgBBZGQAU2Vy
aWFsaXplMkpzb25GaWxlAERpY3RTYWxlc09yZGVyAHZhbHVlAG9ialJtQ29ubgBtZXNzYWdlAHNG
aWxlbmFtZQBudW1iZXIAcGFyc2VkRGF0ZQBtdE9yZGVyQ29kZQBjb3VucnR5AGRhdGEAY291bnQA
b3JkZXIAZmlsZVBhdGgAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtB
dHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJs
eURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3Nl
bWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29w
eXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVy
ZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGls
ZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRp
YmlsaXR5QXR0cmlidXRlAFNUXzFiYzRkOWU5MWRiZjQxN2I5ODYyYzc1YTk3ZGIwNTY1AFN5c3Rl
bS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5
cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5D
b21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3Rh
dGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQ
b2ludEF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAENvbm5lY3Rpb25z
AGdldF9Db25uZWN0aW9ucwBDb25uZWN0aW9uTWFuYWdlcgBnZXRfSXRlbQBnZXRfQ29ubmVjdGlv
blN0cmluZwBTdHJpbmcAQ29uY2F0AFN5c3RlbS5EYXRhLkNvbW1vbgBEYkNvbm5lY3Rpb24AT3Bl
bgBPbGVEYkNvbW1hbmQARGJDb21tYW5kAEV4ZWN1dGVTY2FsYXIASW50MzIARm9ybWF0AElEaXNw
b3NhYmxlAERpc3Bvc2UAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFyaWFibGUARXhjZXB0aW9u
AGdldF9NZXNzYWdlAHNldF9WYWx1ZQBnZXRfTm93AFRvU3RyaW5nAGdldF9WYWx1ZQBzZXRfVGFz
a1Jlc3VsdABWYWx1ZUNvbGxlY3Rpb24AZ2V0X1ZhbHVlcwBFbnVtZXJhdG9yAEdldEVudW1lcmF0
b3IAZ2V0X0N1cnJlbnQAQ29udmVydABUb0RhdGVUaW1lAE1vdmVOZXh0AFN5c3RlbS5JTwBGaWxl
AFJlYWRBbGxUZXh0AE9sZURiRGF0YVJlYWRlcgBFeGVjdXRlUmVhZGVyAENsZWFyAElEYXRhUmVh
ZGVyAExvYWQARGF0YVJvd0NvbGxlY3Rpb24AZ2V0X1Jvd3MASW50ZXJuYWxEYXRhQ29sbGVjdGlv
bkJhc2UAZ2V0X0NvdW50AFN5c3RlbS5Db2xsZWN0aW9ucwBJRW51bWVyYXRvcgBEYXRhUm93AElz
TnVsbABJbnZhbGlkRGF0YUV4Y2VwdGlvbgBUb0RvdWJsZQBUb0ludDMyAEZpbGVTdHJlYW0ARmls
ZU1vZGUARmlsZUFjY2VzcwBGaWxlU2hhcmUAU3RyZWFtV3JpdGVyAFN0cmVhbQBUZXh0V3JpdGVy
AFdyaXRlTGluZQBFeGlzdHMAZ2V0X0xlbmd0aABDb25zb2xlAFN5c3RlbS5UaHJlYWRpbmcAVGhy
ZWFkAFNsZWVwAGdldF9UaWNrcwBJbnQ2NABEb3VibGUATm90SW1wbGVtZW50ZWRFeGNlcHRpb24A
Z2V0X1V0Y05vdwBUaW1lWm9uZUluZm8ARmluZFN5c3RlbVRpbWVab25lQnlJZABDb252ZXJ0VGlt
ZUZyb21VdGMAUmVwbGFjZQBFbXB0eQBSZWdpb25JbmZvAGdldF9JU09DdXJyZW5jeVN5bWJvbABz
ZXRfSXRlbQBTeXN0ZW0uVGV4dABTdHJpbmdCdWlsZGVyAEFwcGVuZEZvcm1hdABTeXN0ZW0uV2Vi
LkV4dGVuc2lvbnMAU3lzdGVtLldlYi5TY3JpcHQuU2VyaWFsaXphdGlvbgBKYXZhU2NyaXB0U2Vy
aWFsaXplcgBTZXJpYWxpemUAQXBwZW5kAHNldF9OZXdMaW5lAFNUXzJlNzllZjVlYzQwYzQwNjU5
YzRiNWZlZDg5N2ZmNDJiLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAAAAcVMAVABf
ADIAZQA3ADkAZQBmADUAZQBjADQAMABjADQAMAA2ADUAOQBjADQAYgA1AGYAZQBkADgAOQA3AGYA
ZgA0ADIAYgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAJ0UAUwBP
AE0AXwBEAFcAXwBTAGEAbABlAHMATwByAGQAZQByAHMAAAs7AHAAdwBkAD0AABFTAEUATABFAEMA
VAAgADEAAA97ADAAfQBcAHsAMQB9AAAzdgBhAHIARQByAHIAbwByAFMAYQBsAGUAcwBPAHIAZABl
AHIAcwBPAHUAdABwAHUAdAAAN00AYQBpAG4AIABFAHgAYwBlAHAAdABpAG8AbgA6ACAAWwB7ADAA
fQBdACwAWwB7ADEAfQBdAAADMAAAJ0kAbgB0AGUAcgBDAG8AbQBwAGEAbgB5AE8AcgBkAGUAcgBJ
AGQAAAdJAFMATwAAF08AcgBkAGUAcgBJAHQAZQBtAEkAZAAAJ08AcgBkAGUAcgBJAHQAZQBtAFIA
ZQBzAG8AdQByAGMAZQBJAGQAABtQAHIAaQBjAGUAVABpAGUAcgBOAGEAbQBlAAApUAByAGkAYwBl
AFQAaQBlAHIARABlAHMAYwByAGkAcAB0AGkAbwBuAAAbUAByAG8AZAB1AGMAdABGAGEAbQBpAGwA
eQAAIVAAcgBvAGQAdQBjAHQAUwB1AGIARgBhAG0AaQBsAHkAAB9QAHIAbwBkAHUAYwB0AFQATABE
AFAAaABhAHMAZQAACWQAYQB5AHMAACdSAGUAZwBpAHMAdAByAHkARABlAHMAYwByAGkAcAB0AGkA
bwBuAAAPUwBwAG8AbgBzAG8AcgAAEVMAdQBwAHAAbABpAGUAcgAAB1QATABEAAAVMgAwADEAOAAt
ADAAMQAtADIANQABEXQAeAAxACAAVAB5AHAAZQAACUMAaQB0AHkAAA9DAG8AdQBuAHQAcgB5AAAV
UABvAHMAdABhAGwAQwBvAGQAZQAAC1MAdABhAHQAZQAAJU0AZQByAGMAaABhAG4AdABBAGMAYwBv
AHUAbgB0AEsAZQB5AAADMQAAL0UAUwBPAE0AXwBNAFQAXwBTAGEAbABlAHMATwByAGQAZQByAHMA
LgBzAHEAbAAAD28AcgBkAGUAcgBpAGQAABNzAHQAYQByAHQAZABhAHQAZQAAD2EAYwBjAG8AdQBu
AHQAAA9jAG8AdQBuAHQAcgB5AAALMgAyADIAMgAyAAAXbwByAGQAZQByAHQAeQBwAGUAaQBkAAAL
dABvAHQAYQBsAAAHdABhAHgAAFdGAGUAdABjAGgAUwBhAGwAZQBzAE8AcgBkAGUAcgBzAEQAYQB0
AGEAIABFAHgAYwBlAHAAdABpAG8AbgA6ACAAWwB7ADAAfQBdACwAWwB7ADEAfQBdAAAHewAwAH0A
ABdQAGEAYwBrAGEAZwBlAE4AYQBtAGUAABFUAGEAcwBrAE4AYQBtAGUAAB92AGEAcgBEAGIAQwBv
AG4AbgBlAGMAdABpAG8AbgAAH3YAYQByAEQAQgBtAHQAYgBpAE8AZABzAFAAdwBkAAAhdgBhAHIA
RABhAHQAYQBEAGkAcgBlAGMAdABvAHIAeQAAF3YAYQByAEQAYQB5AHMAQgBhAGMAawAALXYAYQBy
AFMAYQBsAGUAcwBPAHIAZABlAHIAcwBKAHMAbwBuAEYAaQBsAGUAABV2AGEAcgBTAFEATABfAEQA
aQByAAAVdgBhAHIARQBuAGQARABhAHQAZQAAH3YAYQByAE0AbwBkAHUAbABlAFQAbwBDAGEAbABs
AAAdewAwAH0AYABJAG4AaQB0AGAAWwB7ADEAfQBdAAAVewAwAH0AewAxAH0ALgBsAG8AZwAAJUMA
OgBcAEgARABGAFMAXwBTAHQAYQBnAGUAXABsAG8AZwBcAAAnUwB5AHMAdABlAG0AOgA6AFAAYQBj
AGsAYQBnAGUATgBhAG0AZQAAH0kAcwBGAGkAbABlAFIAZQBhAGQAeQA6AHsAMAB9AABJQwA6AFwA
SABEAEYAUwBfAFMAdABhAGcAZQBcAGwAbwBnAFwARABXAF8AUwBhAGwAZQBzAE8AcgBkAGUAcgBz
AC4AbABvAGcAAAkwAC4AMAAwAAAxUgBlAGcAaQBzAHQAcgBhAHQAaQBvAG4AUABlAHIAaQBvAGQA
RgBvAHIAbQBhAHQAACtQAGEAYwBpAGYAaQBjACAAUwB0AGEAbgBkAGEAcgBkACAAVABpAG0AZQAA
CXsAMAB9AFoAACd5AHkAeQB5AC0ATQBNAC0AZABkACAASABIADoAbQBtADoAcwBzAAEbbQB0AFMA
YQBsAGUAcwBPAHIAZABlAHIAcwAAK3sAMAB9ACAAIgBTAGEAbABlAHMATwByAGQAZQByAHMAIgA6
ACAAWwAgAAADewAAQV0ALAAgACIAUwBvAHUAcgBjAGUAUwB5AHMAdABlAG0AIgA6ACAAIgBzAHQA
cgBpAG4AZwAiACAAIAB7ADAAfQAAA30AAAMNAABTewAwAH0AYABTAGEAbABlAHMATwByAGQAZQBy
AHMAOgA6AFMAZQByAGkAYQBsAGkAegBlADIASgBzAG8AbgBGAGkAbABlAGAAWwB7ADEAfQBdAAAA
AABYqAsUP/hOQaOpygCYsCXdAAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQAABIVBAAA
EhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwDIAAOBCABAQ4DIAAIBCABAQgEIAARHQUg
AQERHQMGEiEDBhI8BSABCBIlBAABAg4EAAEBDgQgAQ4NBSABDhEdBCABDg4CBg4CBggDBhEdAygA
DgMoAAgEKAARHQMGERQEAAAAAAQBAAAABCAAEhgFIAEBEhgDBhIYBCgAEhgEIAASJAUgAQESJAMG
EiQEKAASJAQgABIgBSABARIgBCAAEigFIAEBEigIIAAVEikBEjQJIAEBFRIpARI0AwYSIAMGEigH
BhUSKQESNAQoABIgBCgAEigIKAAVEikBEjQIIAAVEikBEhwJIAEBFRIpARIcCCAAFRIpARIwCSAB
ARUSKQESMAcGFRIpARIcBwYVEikBEjAIKAAVEikBEhwIKAAVEikBEjAIBhUSLQIOEjgJIAAVEi0C
DhI4BSABARI4CSgAFRItAg4SOAYAARJlEWkEIAASbQYgAgEOEm0EBwESFQUgAQERdQgBAAIAAAAA
AAMAAAEFIAASgIEFIAASgIUGIAESgIkcBgADDg4ODgYgAgEOEiUDIAAcBgADDg4cHAUgABKApQYg
ARKAqRwEIAEBHAQAABEdFAcJEoCJAg4SJRKAlQ4SgK0SJREdBxUSLQIOEjgLIAAVEoCxAhMAEwEI
FRKAsQIOEjgLIAAVEYC1AhMAEwEIFRGAtQIOEjgEIAATAQYVEikBEjAFAAERHQ4GFRIpARI0BSAB
ARMAAyAAAhAHBBI4EjASNBURgLUCDhI4BhUSKQESHAUAAg4ODg8HBA0SOBIcFRGAtQIOEjgEAAEO
DgUgABKAwQYgAQESgMUFIAASgMkFIAASgNEEIAECDgQgARwOBQABER0cBAABDRwbBwsODhKAlRKA
wRKA1RI4EoCtCBKA0RKAoREdBQACDg4cBAABCA4HBwISgK0RHQ8ABBKA3Q4RgOERgOURgOkGIAEB
EoDxCQcDDhKA3RKA7QMgAAoFAAIBDhwJBwMSgN0SgK0CBAABAQgNBwYODhKA3RKA7REdCgYAARKB
DQ4JAAIRHREdEoENBSACDgMDCAcDEoENER0OAwcBDgUHARKBEQcgAgETABMBByACEoEVDhwIMb84
Vq02TjUEIAEOHAYgARKBFQ4aBwcSgRUSOBKA3RKA7RKArRURgLUCDhI4ER1HAQAaLk5FVEZyYW1l
d29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3Jr
IDQoAQAjU1RfMmU3OWVmNWVjNDBjNDA2NTljNGI1ZmVkODk3ZmY0MmIAAAUBAAAAABYBABFDb3B5
cmlnaHQgQCAgMjAxNwAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzARx8
AAAAAAAAAAAAAD58AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwfAAAAAAAAAAAAAAAAAAAAAAA
AAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACA
AAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWIAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBS
AFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQCQYYsaAAABAJBhixo/AAAAAAAAAAQA
AAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABU
AHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkA
bgBmAG8AAADsAgAAAQAwADAAMAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBp
AHAAdABpAG8AbgAAAAAAUwBUAF8AMgBlADcAOQBlAGYANQBlAGMANAAwAGMANAAwADYANQA5AGMA
NABiADUAZgBlAGQAOAA5ADcAZgBmADQAMgBiAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBu
AAAAAAAxAC4AMAAuADYANwA5ADUALgAyADQAOQA3ADYAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEA
bABOAGEAbQBlAAAAUwBUAF8AMQBiAGMANABkADkAZQA5ADEAZABiAGYANAAxADcAYgA5ADgANgAy
AGMANwA1AGEAOQA3AGQAYgAwADUANgA1AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAA
eQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADcAAAB4ACgAAQBP
AHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AMQBiAGMANABkADkAZQA5ADEA
ZABiAGYANAAxADcAYgA5ADgANgAyAGMANwA1AGEAOQA3AGQAYgAwADUANgA1AC4AZABsAGwAAABo
ACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfADIAZQA3ADkAZQBmADUAZQBjADQA
MABjADQAMAA2ADUAOQBjADQAYgA1AGYAZQBkADgAOQA3AGYAZgA0ADIAYgAAAEQADwABAFAAcgBv
AGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgA3ADkANQAuADIANAA5ADcANgAAAAAA
SAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgA3ADkANQAu
ADIANAA5ADcANgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAHAAAAwAAABQPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{62FD8F51-5CD6-4B72-B67C-1E7E3162CCC3}"
      DTS:From="Package\PROD SQL Server Listener"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Script Task - fetch Sales Orders" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{5107CE3B-B99A-43F1-A5DA-D8F198F01202}"
      DTS:From="Package\PROD SQL Server Listener"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\ERROR ESOM - Listener"
      DTS:Value="1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{C745C7DA-52FE-411B-A887-35F58EE195D6}"
      DTS:From="Package\Script Task - fetch Sales Orders"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\ERROR fetch Sales Orders"
      DTS:Value="1" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="227,42"
          Id="Package\Script Task - fetch Sales Orders"
          TopLeft="309,305" />
        <AnnotationLayout
          Text="varEndDate  :  DATEADD(&quot;day&quot;, -1, GETDATE() )&#xA;&#xA;&#xA;varModuleToCall:&#xA;0 -  Sales Orders&#xA;&#xA;"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="277,136"
          Id="51732875-1fef-4faf-a8de-44a97d259da1"
          TopLeft="613,35" />
        <AnnotationLayout
          Text="The date range has the following algorithm:&#xA;1.  Date Range : varEndDate = varDateRange &#xA;     varDateRange  is always set to yesterday,&#xA;     then the application will calculate the start date by [varEndDate  - varDaysBack]&#xA;&#xA;Note that varDaysBack  will define the start date in the API Call.  &#xA;&#xA;2. Full load : Set varEndDate to varFull  (default)"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="464,152"
          Id="3070c220-241f-424d-b7d6-534a8f58b31f"
          TopLeft="97,24" />
        <NodeLayout
          Size="202,42"
          Id="Package\PROD SQL Server Listener"
          TopLeft="161,223" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="294.333333333333,265">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="128.166666666667,40"
              Start="0,0"
              End="128.166666666667,32.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.188605108055" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.188605108055"
                    Point2="0,16.188605108055"
                    Point3="4,16.188605108055" />
                  <mssgle:LineSegment
                    End="124.166666666667,16.188605108055" />
                  <mssgle:CubicBezierSegment
                    Point1="124.166666666667,16.188605108055"
                    Point2="128.166666666667,16.188605108055"
                    Point3="128.166666666667,20.188605108055" />
                  <mssgle:LineSegment
                    End="128.166666666667,32.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="191,42"
          Id="Package\ERROR ESOM - Listener"
          TopLeft="69,360" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="229.666666666667,265">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-65.1666666666667,95"
              Start="0,0"
              End="-65.1666666666667,87.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.4479371316306" />
                  <mssgle:CubicBezierSegment
                    Point1="0,34.4479371316306"
                    Point2="0,38.4479371316306"
                    Point3="-4,38.4479371316306" />
                  <mssgle:LineSegment
                    End="-61.1666666666667,38.4479371316306" />
                  <mssgle:CubicBezierSegment
                    Point1="-61.1666666666667,38.4479371316306"
                    Point2="-65.1666666666667,38.4479371316306"
                    Point3="-65.1666666666667,42.4479371316306" />
                  <mssgle:LineSegment
                    End="-65.1666666666667,87.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-47.8246809895833,43.4479371316306,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="202,42"
          Id="Package\ERROR fetch Sales Orders"
          TopLeft="396,406" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="422.5,347">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="74.5,59"
              Start="0,0"
              End="74.5,51.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.5"
                    Point2="0,29.5"
                    Point3="4,29.5" />
                  <mssgle:LineSegment
                    End="70.5,29.5" />
                  <mssgle:CubicBezierSegment
                    Point1="70.5,29.5"
                    Point2="74.5,29.5"
                    Point3="74.5,33.5" />
                  <mssgle:LineSegment
                    End="74.5,51.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="22.00865234375,34.5,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>