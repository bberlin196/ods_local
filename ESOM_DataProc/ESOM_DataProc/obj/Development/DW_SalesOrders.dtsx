<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/4/2018 10:29:10 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="BORISPC"
  DTS:CreatorName="JOMAX\bberlin"
  DTS:DTSID="{E637F06B-9BE9-4F40-8F20-3419FAE5F90E}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="12.0.2430.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="DW_SalesOrders"
  DTS:PackageType="5"
  DTS:VersionBuild="223"
  DTS:VersionGUID="{667021A1-B892-49DA-B0C3-B049981289BA}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[campaigns.db.txt]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{0EF52C77-86AC-41C8-9CFC-F51E5F4202DF}"
      DTS:ObjectName="campaigns.db.txt">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\HDFS_Stage\data\campaigns.db.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0060_"
              DTS:DataType="21"
              DTS:TextQualified="True"
              DTS:ObjectName="id"
              DTS:DTSID="{A68BF38F-85AE-4C66-9798-E710C6F90E35}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0060_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="name"
              DTS:DTSID="{B42677EF-2FF5-4230-8EB3-4B3A216C49F5}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0060_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="created_date"
              DTS:DTSID="{E6AA32C9-B8F5-418F-BA9E-47030643B67F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0060_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="launch_date"
              DTS:DTSID="{B5154752-D922-470A-9C52-66B8141B2E6E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0060_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="last_surveyed_date"
              DTS:DTSID="{CE8A2C55-F420-4079-A55E-41B7744EF319}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="21"
              DTS:TextQualified="True"
              DTS:ObjectName="drip_duration"
              DTS:DTSID="{D52A3088-AD13-45D2-A2F0-58AA210D473F}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[feedbacks.db.txt]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{8AC6CFBB-2D09-4BA5-8672-50CE492C1872}"
      DTS:ObjectName="feedbacks.db.txt">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\HDFS_Stage\data\feedbacks.db.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0060_"
              DTS:DataType="21"
              DTS:TextQualified="True"
              DTS:ObjectName="id"
              DTS:DTSID="{480ACB91-F033-45E3-AF05-D85B8DECF24A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0060_"
              DTS:DataType="19"
              DTS:TextQualified="True"
              DTS:ObjectName="campaign"
              DTS:DTSID="{83955E68-5C49-40CF-83C4-22A062993589}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0060_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="posted_date"
              DTS:DTSID="{9E3F797A-EA1E-4C6A-AD32-31689EEDEF7A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0060_"
              DTS:DataType="21"
              DTS:TextQualified="True"
              DTS:ObjectName="score"
              DTS:DTSID="{3E537E5D-8BFF-40C9-99E3-F07B73B0C618}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0060_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="score_type"
              DTS:DTSID="{05478E96-257D-41F4-B057-0B3291630538}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0060_"
              DTS:DataType="21"
              DTS:TextQualified="True"
              DTS:ObjectName="contact id"
              DTS:DTSID="{49A79F71-370A-4366-8FE0-B45128D50B89}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="250"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="contact email"
              DTS:DTSID="{C5BA4D51-A8B8-4F81-8643-0E71D30D63D3}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F1821E50-3665-4ED6-8B84-A9EEE93ECC62}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varApiToken">
      <DTS:VariableValue
        DTS:DataType="8">TBD</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5EF9FBAE-5BCB-4FB0-9176-4273530AE33F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varApiUrl">
      <DTS:VariableValue
        DTS:DataType="8">TBD</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{92026C51-4BA1-481E-9658-FFEEF6CAAC5E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varCurlExe">
      <DTS:VariableValue
        DTS:DataType="8">C:\curl-7.57\src\curl.exe</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AE7D116F-3D41-4A13-8049-05F4AE68E664}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="GETDATE()"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varCurTime">
      <DTS:VariableValue
        DTS:DataType="7">7/27/2018 4:07:15 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{95F706A9-E26A-470A-A09D-C325E47A27AD}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varDataDirectory">
      <DTS:VariableValue
        DTS:DataType="8">C:\HDFS_Stage\data</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6EEE3519-3A41-48E3-9C60-05F2A1E2EEAF}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="DATEADD(&quot;day&quot;, -1, GETDATE() )"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varDateRange">
      <DTS:VariableValue
        DTS:DataType="7">7/26/2018 4:07:15 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{06CABAFE-22CC-4DDA-925F-E55E7CF41D0E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varDaysBack">
      <DTS:VariableValue
        DTS:DataType="3">60</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2D3C2414-2AFA-42B8-B7EB-537E6A15D275}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varDbConnection">
      <DTS:VariableValue
        DTS:DataType="8">bi01.lax01.mtsvc.net.mtbiODS.biadmin</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{16EECC2D-041C-4303-AEAD-3ADF49B832D1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varDB_LoadError">
      <DTS:VariableValue
        DTS:DataType="8">DB Load Error</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B960425C-1359-4B30-BDB4-EE9C846F2230}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varDependences">
      <DTS:VariableValue
        DTS:DataType="8">NONE</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{58F57E92-0ED7-4A9E-861C-CCC584CC7B3F}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::varFullLoad]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varEndDate">
      <DTS:VariableValue
        DTS:DataType="7">7/27/2018 4:07:15 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{073AE249-B11B-48CF-A248-867E1468413C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varErrorSalesOrdersOutput">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{38896184-DAA3-4EE7-9552-18F9DDFE39B8}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="GETDATE()"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varFullLoad">
      <DTS:VariableValue
        DTS:DataType="7">7/27/2018 4:07:15 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4E0885CE-1F24-4BB0-9955-023AC454745E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Variable_Proxy_Expected">
      <DTS:VariableValue
        DTS:DataType="8">infragw01.lax01.mtsvc.net:3128</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0C3ACEDE-BC5E-4EE8-BCA1-E538C43254DC}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varMaxIterNumber">
      <DTS:VariableValue
        DTS:DataType="3">3</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{27D64CF2-79C2-4CB6-9C9D-5B51F732304A}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varModuleToCall">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AA69FB26-0E98-4859-A1B0-63647E8FFA32}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSalesOrders">
      <DTS:VariableValue
        DTS:DataType="8">salesorders</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{706840FA-9A9A-4BF6-BA15-9908CA116CE9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSalesOrdersDbDataFile">
      <DTS:VariableValue
        DTS:DataType="8">salesorders.db.txt</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{918F1708-E093-48EF-98CE-FA6C0E6021FF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSalesOrdersJsonFile">
      <DTS:VariableValue
        DTS:DataType="8">salesorders.json</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A7BF145F-910B-4A4D-A27C-1FF5D000F876}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varSleepTimeMin">
      <DTS:VariableValue
        DTS:DataType="3">15</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EE083E8F-84C4-4B0A-A613-4696D9C5D002}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varStatus">
      <DTS:VariableValue
        DTS:DataType="8">F</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3E98017A-8C0A-4787-8C62-4DCB55136347}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SSIS HostOps [Failure]:  &quot; + @[System::PackageName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSubject">
      <DTS:VariableValue
        DTS:DataType="8">SSIS HostOps [Failure]:  DW_SalesOrders</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E9C8EE0B-7BBA-4C8C-B9F1-3974951C4DCA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varTruncateErrorMessage">
      <DTS:VariableValue
        DTS:DataType="8">ERROR - Truncate Destination Table - Execute SQL Task</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A51FC50F-3E21-44FE-8F3D-0AB076D31A5F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varType">
      <DTS:VariableValue
        DTS:DataType="8">E</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DA887CD7-7A3F-436E-9607-1A7A1A496CCB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="var_API_Call_ErrorMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Script Task - Sales Orders"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{89b646f3-c899-4377-883a-d72b245aba9b}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task - Sales Orders"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_1bc4d9e91dbf417b9862c75a97db0565"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::PackageName,User::varDataDirectory,User::varDateRange,User::varDaysBack,User::varDbConnection,User::varEndDate,User::varMaxIterNumber,User::varModuleToCall,User::varSalesOrders,User::varSalesOrdersDbDataFile,User::varSalesOrdersJsonFile,User::varSleepTimeMin"
          ReadWriteVariables="User::varErrorSalesOrdersOutput">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="MT_SalesOrders.sql"
            Encoding="UTF8"><![CDATA[select
	top 10
	/*ds not null*/
	orderid,  
	/* nullable  ????  what to do?  */
	startdate,  
	/*ds not null*/
	account,  
	/*ds not null*/
	country,  
	/*ds not null*/
	ordertypeid, 
	/*ds not null*/
	tax, 
	/*ds not null*/
	total 
from [dbo].[vAllocationDetail]
	where ordertypeid in (1,2,3) and orderid > 0]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Data.OleDb;
using System.Threading;
using System.Collections.Generic;
using System.Diagnostics;
using System.Data.SqlClient;
using System.Globalization;
using System.Text;

#endregion

namespace ST_2e79ef5ec40c40659c4b5fed897ff42b
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */
        public string varDbConnection { get; set; }
        public string varDataDirectory { get; set; }
        public int varDaysBack { get; set; }
        public string varSalesOrderJsonFile { get; set; }
        public DateTime varEndDate { get; set; }
        public int varMaxIterNumber { get; set; }
        public int varSleepTimeMin { get; set; }
        public int varModuleToCall { get; set; }

        public DataTable m_dtMtSalesOrders = new DataTable("mtSalesOrders");
        public SalesOrders m_salesOrders;

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
			// TODO: Add your code here
            ConnectionManager cm;
            string pwd = @"a\7B'fTRXQ~re/y";
            bool isFailed = true;

            string f1 = AppDomain.CurrentDomain.SetupInformation.ApplicationBase;

            try
            {
                Init();

                // get the SSIS Remote connection object
                cm = Dts.Connections[varDbConnection]; //"bi01.lax01.mtsvc.net.HostOps.biadmin"];

                
                string connstr = cm.ConnectionString + ";pwd=" + pwd;
                System.Data.OleDb.OleDbConnection objRmConn = new System.Data.OleDb.OleDbConnection(connstr);
                using (objRmConn)
                {

                    objRmConn.Open();

                    // Test connection
                    OleDbCommand cmd = new OleDbCommand("SELECT 1", objRmConn);
                    int val = (int)cmd.ExecuteScalar();

                    // Is Master Presentaion will be checked prior  to this component
                    if( FetchSalesOrdersData(objRmConn) > 0)
                    {
                        // Load Payments For Orders
                        LoadPaymentsForOrders();

                        // Serialize Sales Orders Object as JSON file.
                        string jsonDataFile = String.Format(@"{0}\{1}", varDataDirectory,  varSalesOrderJsonFile);
                        m_salesOrders.Serialize2JsonFile(jsonDataFile);
                    }

                    isFailed = false;

                } // using (objRmConn)
            }
            catch (Exception ex)
            {
                LogMessage(String.Format("Main Exception: [{0}],[{1}]", DateTime.Now.ToString(), ex.Message));
            }

            Dts.TaskResult = isFailed ? (int)ScriptResults.Failure : (int)ScriptResults.Success;
			
		}

        private void LoadPaymentsForOrders()
        {
            // TEST DATA
            double amount = 1;
            foreach (SalesOrder order in m_salesOrders.DictSalesOrder.Values)
            {
                order.Payments = new List<OrderPayment>(2);

                // Add Payments
                OrderPayment op = new OrderPayment();
                op.Amount = this.AmountFormat(amount);
                op.BillingAddress = new BillingAddress();
                op.BillingAddress.City = "City" + op.Amount;
                op.BillingAddress.Country = "Country"+ op.Amount;
                op.BillingAddress.PostalCode = "PostalCode" + op.Amount;
                op.BillingAddress.State = "State" + op.Amount;
                op.MerchantAccountKey = "MerchantAccountKey";
                op.Index = "1"; // "Payment Index for multiple payments."  Type: Int Number

                order.Payments.Add(op);

            }
        }

        private int FetchSalesOrdersData(OleDbConnection objRmConn)
        {
            // set sql dir path
            string sql_dir_path = @"C:\Temp\Boris\Dev\Jira\aa-ESOM-Workday\Dev\SSIS\ESOM_DataProc\ESOM_DataProc\";
                        
            string mtSalesOrdersSql = sql_dir_path + "MT_SalesOrders.sql";

            try
            {
                string sql = File.ReadAllText(mtSalesOrdersSql);
                System.Data.OleDb.OleDbCommand sqlComm = new System.Data.OleDb.OleDbCommand(sql, objRmConn);

                using (OleDbDataReader reader = sqlComm.ExecuteReader())
                {
                    m_dtMtSalesOrders.Clear();
                    m_dtMtSalesOrders.Load(reader);
                    if (m_dtMtSalesOrders.Rows.Count == 0)
                    {
                        // Log now rows
                        return 0; // nothing to do
                    }

                    #region Get Orders

                    m_salesOrders = new SalesOrders(m_dtMtSalesOrders.Rows.Count);


                    foreach (DataRow dr in m_dtMtSalesOrders.Rows)
                    {
                        SalesOrder so = new SalesOrder();

                        if (dr.IsNull("orderid"))
                            throw new InvalidDataException("orderid");
                        so.OrderId = dr["orderid"].ToString();

                        if (dr.IsNull("startdate"))
                            throw new InvalidDataException("startdate");
                        so.OrderUTCDateTime = this.DateTimeFormat(Convert.ToDateTime(dr["startdate"]));

                        if (dr.IsNull("account"))
                            throw new InvalidDataException("account");
                        so.CustomerId = dr["account"].ToString();

                        if (dr.IsNull("country"))
                            throw new InvalidDataException("country");
                        so.TransactionalISOCurrencyCode = Country2CurrencyISOCode(dr["country"].ToString());

                        //if (dr.IsNull("OriginalOrderIdValue"))
                        //    so.OriginalOrderIdValue = "-1";
                        //else
                        so.OriginalOrderIdValue = "22222";  // 

                        if (dr.IsNull("ordertypeid"))
                            throw new InvalidDataException("ordertypeid");
                        so.OrderType = MT2GD_OrderType(dr["ordertypeid"].ToString());


                        //if (dr.IsNull("ShippingHandlingAmount"))  TBD
                        //    throw new InvalidDataException("ShippingHandlingAmount");
                        so.ShippingHandlingAmount = this.AmountFormat(Convert.ToDouble(dr["total"]));

                        //if (dr.IsNull("TotalTaxAmount")) TBD
                        //    throw new InvalidDataException("TotalTaxAmount");
                        so.TotalTaxAmount = this.AmountFormat(Convert.ToDouble(dr["tax"]));


                        //if (dr.IsNull("SubTotalAmount")) TBD
                        //    throw new InvalidDataException("SubTotalAmount");
                        so.SubTotalAmount = this.AmountFormat(Convert.ToDouble(dr["total"]));

                        //if (dr.IsNull("TotalAmount")) TBD
                        //    throw new InvalidDataException("SubTotalAmount");
                        so.TotalAmount = this.AmountFormat(Convert.ToDouble(dr["total"]));

                        m_salesOrders.Add(so);


                    } // foreach (DataRow dr in dtMtSalesOrders.Rows)

                    #endregion //Get Orders

                }  // using (OleDbDataReader reader = sqlComm.ExecuteReader())

            }
            catch (Exception ex)
            {
                LogMessage(String.Format("FetchSalesOrdersData Exception: [{0}],[{1}]", DateTime.Now.ToString(), ex.Message));
                throw ex;
            }

            return m_dtMtSalesOrders.Rows.Count;
                        
        }

        

        void Wait4MasterPresentaion(System.Data.OleDb.OleDbConnection objRmConn)
        {
            // set sql dir path
            string sql_dir_path = @"C:\temp\";
            
            
            string mtSalesOrdersSql = sql_dir_path + "MT_SalesOrders.sql";
            string sql = File.ReadAllText(mtSalesOrdersSql);
            System.Data.OleDb.OleDbCommand sqlComm = new System.Data.OleDb.OleDbCommand(sql, objRmConn);
            bool sentWarning = false;

            // get the SSIS Remote connection object
            ConnectionManager cm = Dts.Connections["localhost.HostOps"];
            //string connstr = cm.ConnectionString + ";pwd=" + pwd;
            System.Data.OleDb.OleDbConnection objLocalConn = new System.Data.OleDb.OleDbConnection(cm.ConnectionString);

            using (objLocalConn)
            {
                objLocalConn.Open();
                // test objLocalConn  connection
                OleDbCommand cmdLoc = new OleDbCommand("SELECT 1", objRmConn);
                int val = (int)cmdLoc.ExecuteScalar();


                while (sqlComm.ExecuteReader().HasRows)
                {
                    // Should we issue an error?
                    if (DateTime.Now.Hour > 20)
                    {
                        string WarningMailSql = sql_dir_path + "MasterPresentationErrorMail.sql";
                        string sqlWarningMail = File.ReadAllText(WarningMailSql);
                        System.Data.OleDb.OleDbCommand sqlWarningMailCom = new System.Data.OleDb.OleDbCommand(sqlWarningMail, objLocalConn);
                        int num_of_rows = sqlWarningMailCom.ExecuteNonQuery();
                        break;
                    }

                    // Should we issue a warning?
                    if (!sentWarning && DateTime.Now.Hour > 9)
                    {

                        // send warning
                        sentWarning = true;

                        string WarningMailSql = sql_dir_path + "MasterPresentationWarningMail.sql";
                        string sqlWarningMail = File.ReadAllText(WarningMailSql);
                        System.Data.OleDb.OleDbCommand sqlWarningMailCom = new System.Data.OleDb.OleDbCommand(sqlWarningMail, objLocalConn);
                        int num_of_rows = sqlWarningMailCom.ExecuteNonQuery();


                    }

                    Thread.Sleep(1);  // 5000 * 60  = 5 min

                } // while((number_of_rows = sqlComm.ExecuteNonQuery()) == 0)

                

            }  // using (objLocalConn)
        
        }

        private void Init()
        {
            try
            {

                varDbConnection = String.Format(@"{0}", Dts.Variables["varDbConnection"].Value);
                varDataDirectory = String.Format(@"{0}", Dts.Variables["varDataDirectory"].Value);
                varDaysBack = Convert.ToInt32(String.Format(@"{0}", Dts.Variables["varDaysBack"].Value));
                varSalesOrderJsonFile = String.Format(@"{0}", Dts.Variables["varSalesOrdersJsonFile"].Value);
                varEndDate = (DateTime)Dts.Variables["varEndDate"].Value;
                varMaxIterNumber = Convert.ToInt32(String.Format(@"{0}", Dts.Variables["varMaxIterNumber"].Value));
                varSleepTimeMin = Convert.ToInt32(String.Format(@"{0}", Dts.Variables["varSleepTimeMin"].Value));
                varModuleToCall = Convert.ToInt32(String.Format(@"{0}", Dts.Variables["varModuleToCall"].Value));
                                


            }
            catch (Exception ex)
            {

                ScriptMain.LogMessageSt(String.Format("{0}`DW_Esom::Init`[{1}]", DateTime.Now.ToString(), ex.Message));
                throw ex;
            }
        }

        public void LogMessage(string message)
        {
            string logPath = String.Format("{0}{1}.log", @"C:\HDFS_Stage\log\", Dts.Variables["System::PackageName"].Value);
            FileStream fl = File.Open(logPath, FileMode.Append, FileAccess.Write, FileShare.ReadWrite);

            using (System.IO.StreamWriter file = new System.IO.StreamWriter(fl))
            {
                file.WriteLine(message);
            }

        }

        #region Static class members
        static bool IsFileReady(String sFilename)
        {
            // If the file can be opened for exclusive access it means that the file
            // is no longer locked by another process.
            try
            {
                if (!System.IO.File.Exists(sFilename)) return true;

                using (System.IO.FileStream inputStream = File.Open(sFilename, FileMode.Open, FileAccess.Write, FileShare.Write))
                {
                    if (inputStream.Length > 0)
                    {
                        return true;
                    }
                    else
                    {
                        return false;
                    }

                }
            }
            catch (Exception e)
            {
                Console.WriteLine("IsFileReady:{0}", e.Message);
                return false;
            }
        }
                
        /// <summary>
        /// This static function severs the emergency event when no input variables are provided.
        /// </summary>
        /// <param name="message"></param>
        static public void LogMessageSt(string message)
        {


            string logFile = @"C:\HDFS_Stage\log\DW_SalesOrders.log";
            string log = logFile;

            // just wait
            if (!IsFileReady(logFile)) System.Threading.Thread.Sleep(5000);

            // ok tried diferent file
            if (!IsFileReady(logFile)) log = logFile + DateTime.Now.Ticks.ToString();

            FileStream fl = File.Open(log, FileMode.Append, FileAccess.Write, FileShare.ReadWrite);

            using (System.IO.StreamWriter file = new System.IO.StreamWriter(fl))
            {
                file.WriteLine(message);
            }

        }

        #endregion Static class members

        #region JSON Schema convertion functions
        /// <summary>
        /// Schema:
        /// "type": "number",
        /// "multiplesOf": 0.000001,
        /// Sample:  12.170000
        /// </summary>
        /// <param name="number"></param>
        /// <returns> formatted string </returns>
        private string AmountFormat(double number)
        {
            return number.ToString("0.000000");
        }

        /// <summary>
        /// "type": "number",
        /// "multiplesOf": 0.01,
        /// 
        /// </summary>
        /// <param name="number"></param>
        /// <returns> formatted string </returns>
        private string RegistrationPeriodFormat(double number)
        {
            throw new NotImplementedException("RegistrationPeriodFormat");
            return number.ToString("0.00");
        }


        /// <summary>
        /// the date will be in a standard json utc format:  “2012-04-23T18:25:43.511Z”  ,
        /// if there is no time then we should have the order as PST to UTC 12AM 
        /// which is summer time "2018-01-25T07:00:00Z"  , winter time "2018-01-25T08:00:00Z"
        /// </summary>
        /// <param name="dateTime"></param>
        /// <returns> formatted string </returns>
        private string DateTimeFormat(DateTime parsedDate)
        { 
            // Convert the current PST to UTC
            //DateTime parsedDate = DateTime.Parse("2018-01-25");
            var timeUtc = DateTime.UtcNow;
            TimeZoneInfo easternZone = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");
            DateTime utcDateTime = TimeZoneInfo.ConvertTimeFromUtc(parsedDate, easternZone);
            Debug.Write(utcDateTime);
            // 2018-01-25T04:00:00Z
            string formattedDate = String.Format("{0}Z", utcDateTime.ToString("yyyy-MM-dd HH:mm:ss").Replace(' ', 'T'));
            Debug.Write(formattedDate);
            return formattedDate;
        }

        private string MT2GD_OrderType(string mtOrderCode)
        {
            string gdOrderType = String.Empty;
            /*
             TBD - mapping
             */

            gdOrderType = mtOrderCode;

            return gdOrderType;
        
        }

        private string Country2CurrencyISOCode(string counrty)
        {
            RegionInfo myRI = new RegionInfo(counrty);
            return myRI.ISOCurrencySymbol;
        }

        #endregion // JSON Schema convertion functions

        

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        /// <summary>
        /// 
        /// </summary>
        /// <param name="data"></param>
        private void SerializeDataToJSON(string data)
        {
            
        }

        


        

    }  //public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

    #region JSON classes
        /// <summary>
        /// JSON Classes which are used for seralization of the fetching data to the JSON file
        /// </summary>
               

        public class BillingAddress
        {
            public string City { get; set; }
            public string State { get; set; }
            public string Country { get; set; }
            public string PostalCode { get; set; }
        }

        public class OrderPayment
        {
            public string Amount { get; set; }
            public string MerchantAccountKey { get; set; }
            public string Index { get; set; }
            public BillingAddress BillingAddress { get; set; }
        }

        public class ResourceAmount
        {
            public double ICANNFee { get; set; }
            public double ListPrice { get; set; }
            public double Cost { get; set; }
            public double PricePaid { get; set; }
        }

        public class Product
        {
            public string ProductFamily { get; set; }
            public string ProductSubFamily { get; set; }
            public string RegistrationPeriodType { get; set; }
            public string RegistrationPeriod { get; set; }
            public string TLD { get; set; }
            public string Sponsor { get; set; }
            public string RegistrySponsor { get; set; }
            public string Supplier { get; set; }
            public string ProductTLDPhase { get; set; }
            public string RegistryDescription { get; set; }
            public string PriceTierDescription { get; set; }
            public string PriceTierName { get; set; }
            public string PremiumTierType { get; set; }
        }

        public class SalesOrderResource
        {
            public string OrderItemId { get; set; }
            public string OrderItemResourceId { get; set; }
            public int OrderItemQuantity { get; set; }
            public int OrderItemResourceCount { get; set; }
            public DateTime ServicePeriodStartDate { get; set; }
            public DateTime ServicePeriodEndDate { get; set; }
            public string DurationType { get; set; }
            public double Duration { get; set; }
            public double TaxTotal { get; set; }
            public string ISOCurrencyCode { get; set; }
            public ResourceAmount ResourceAmount { get; set; }
            public Product Product { get; set; }
        }

        

        public class SalesOrder
        {
            public string OrderId { get; set; }
            public string OrderUTCDateTime { get; set; }
            public string CustomerId { get; set; }
            public string TransactionalISOCurrencyCode { get; set; }
            public string OriginalOrderIdValue { get; set; }
            public string OrderType { get; set; }
            public string ShippingHandlingAmount { get; set; }
            public string TotalTaxAmount { get; set; }
            public string SubTotalAmount { get; set; }
            public string TotalAmount { get; set; }
            public List<OrderPayment> Payments { get; set; }
            public List<SalesOrderResource> SalesOrderResources { get; set; }
        }
        

        public class SalesOrders
        {
            // Dictionary<string::SalesOrder::OrderId, SalesOrder>
            private Dictionary<string, SalesOrder> dictSalesOrders;

            public Dictionary<string, SalesOrder> DictSalesOrder
            {
                get { return dictSalesOrders; }
                //set { dictSalesOrder = value; }
            }

            public SalesOrders(int count)
            {
                dictSalesOrders = new Dictionary<string, SalesOrder>(count);     
            }

            public void Add(SalesOrder order)
            {
                dictSalesOrders[order.OrderId] = order;
            }

            public void Serialize2JsonFile(string filePath)
            {
                
                StringBuilder strSalesOrdersJSON = new StringBuilder(1000);

                try
                {
                    strSalesOrdersJSON.AppendFormat("{0} \"SalesOrders\": [ ","{");
                    
                    // Pass the object for conversion object to JSON string
                    foreach (SalesOrder order in dictSalesOrders.Values)
                    {
                        strSalesOrdersJSON.Append(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(order));
                    }

                    strSalesOrdersJSON.AppendFormat("], \"SourceSystem\": \"string\"  {0}","}");

                    //////    Save The file
                    FileStream fl = File.Open(filePath, FileMode.Create, FileAccess.Write, FileShare.Read);

                    using (System.IO.StreamWriter file = new System.IO.StreamWriter(fl))
                    {
                        file.WriteLine(strSalesOrdersJSON.ToString());
                    }
                                        

                }
                catch (Exception ex)
                {

                    ScriptMain.LogMessageSt(String.Format("{0}`SalesOrders::Serialize2JsonFile`[{1}]", DateTime.Now.ToString(), ex.Message));
                    throw ex;
                }

            }
        }

        #endregion  // JSON classes
}]]></ProjectItem>
          <ProjectItem
            Name="ST_1bc4d9e91dbf417b9862c75a97db0565.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{3133ACB6-C005-429A-82E9-18F68B560CCE}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_2e79ef5ec40c40659c4b5fed897ff42b</RootNamespace>
    <AssemblyName>ST_1bc4d9e91dbf417b9862c75a97db0565</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
    <None Include="SalesOrersDataSample.json" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="MasterPresentationCompletion.sql" />
    <Content Include="MT_SalesOrders.sql" />
    <Content Include="WarningMail.sql" />
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="MasterPresentationCompletion.sql"
            Encoding="UTF8"><![CDATA[SELECT TOP 1
       [ID]
      ,[SOURCE]
      ,[SENDER]
      ,[TYPE]
      ,[STATUS]
      ,[DEPENDENCY]
      ,[MESSAGE]
      ,[SUBJECT]
      ,[EVENT_TIME]
      ,[REC_TIME_STAMP]
  FROM [HostOps].[dbo].[DwEtlLog]
  where 
  [SENDER] = 'googleAnalytics'
  and convert(date,[REC_TIME_STAMP]) = convert(date,GETDATE())
  and STATUS = 'I']]></ProjectItem>
          <ProjectItem
            Name="WarningMail.sql"
            Encoding="UTF8"><![CDATA[DECLARE @Recipients varchar(256) = 'bberlin@mediatemple.net;';
DECLARE @wmessage NVARCHAR(2000);

set @wsubject = 'RM SSIS HDFS ETL [Warning] SSIS PROD Master Presentation ETL seems to be delayed';
set @wmessage = 'SSIS PROD Master Presentation ETL is delaying RM SSIS HDFS ETL node';


EXEC [msdb].dbo.sp_send_dbmail
				@profile_name = '(mt) SMTP Mail',
				@recipients = @Recipients,
				@body = @wmessage,
				@subject = @wsubject,
				@importance='High'
				 ;]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_2e79ef5ec40c40659c4b5fed897ff42b</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_2e79ef5ec40c40659c4b5fed897ff42b</msb:DisplayName>
		<msb:ProjectId>{6D1A6A7B-57F8-4D06-8395-51C0362C0B8A}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_1bc4d9e91dbf417b9862c75a97db0565.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="MT_SalesOrders.sql"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="WarningMail.sql"/>
		<msb:File Include="MasterPresentationCompletion.sql"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:File Include="SalesOrersDataSample.json"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="SalesOrersDataSample.json"
            Encoding="UTF8"><![CDATA[{
  "SalesOrders": [
    {
      "CustomerId": "string",
      "OrderId": "string",
      "OrderType": "string",
      "OrderUTCDateTime": "2018-07-27T17:09:23.833Z",
      "OriginalOrderIdValue": "string",
      "Payments": [
        {
          "Amount": 0,
          "BillingAddress": {
            "City": "string",
            "Country": "string",
            "PostalCode": "string",
            "State": "string"
          },
          "Index": 0,
          "MerchantAccountKey": "string"
        }
      ],
      "SalesOrderResources": [
        {
          "Duration": 0,
          "DurationType": 0,
          "InterCompanyOrderId": "string",
          "ISOCurrencyCode": "string",
          "OrderItemId": "string",
          "OrderItemQuantity": 0,
          "OrderItemResourceCount": 0,
          "OrderItemResourceId": "string",
          "Product": {
            "PeriodType": 0,
            "PriceTierDescription": "string",
            "ProductFamily": "string",
            "ProductSubFamily": "string",
            "ProductTLDPhase": "string",
            "RegistrationPeriod": 0,
            "RegistryDescription": "string",
            "Sponsor": "string",
            "Supplier": "string",
            "TLD": "string",
            "RegistrationPeriodType": {}
          },
          "ResourceAmount": {
            "Cost": 0,
            "ICANNFee": 0,
            "ListPrice": 0,
            "PricePaid": 0,
            "Revenue": {}
          },
          "ServicePeriodEndDate": "2018-07-27T17:09:23.833Z",
          "ServicePeriodStartDate": "2018-07-27T17:09:23.833Z",
          "Taxes": [
            {
              "TaxAmount": 0,
              "TaxType": "string",
              "Type": {},
              "Amount": {}
            }
          ],
          "TaxTotal": 0
        }
      ],
      "ShippingHandlingAmount": 0,
      "SubTotalAmount": 0,
      "TotalAmount": 0,
      "TotalTaxAmount": 0,
      "TransactionalISOCurrencyCode": "string",
      "TaxAmount": {}
    }
  ],
  "SourceSystem": "string"
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2e79ef5ec40c40659c4b5fed897ff42b.Properties.Settings.get_Default():ST_2e79ef5ec40c40659c4b5fed897ff42b.Properties.Sett" +
    "ings")]

namespace ST_2e79ef5ec40c40659c4b5fed897ff42b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_2e79ef5ec40c40659c4b5fed897ff42b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_2e79ef5ec40c40659c4b5fed897ff42b")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2e79ef5ec40c40659c4b5fed897ff42b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2e79ef5ec40c40659c4b5fed897ff42b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2e79ef5ec40c40659c4b5fed897ff42b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_2e79ef5ec40c40659c4b5fed897ff42b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_2e79ef5ec40c40659c4b5fed897ff42b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_1bc4d9e91dbf417b9862c75a97db0565.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAJ6lW1sAAAAAAAAAAOAAAiELAQsAAFYAAAAIAAAAAAAAvnUA
AAAgAAAAgAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAADAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHB1AABLAAAAAIAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAKAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAxFUAAAAgAAAAVgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAgAAAAAYAAABYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAKAAAAACAAAAXgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACg
dQAAAAAAAEgAAAACAAUA+DAAAHhEAAABAAAAAAAAAEAwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqHgJ7BgAABCoiAgN9BgAABCoeAnsHAAAEKiICA30HAAAEKh4CewgAAAQq
IgIDfQgAAAQqHgJ7CQAABCoiAgN9CQAABCoeAnsKAAAEKiICA30KAAAEKh4CewsAAAQqIgIDfQsA
AAQqHgJ7DAAABCoiAgN9DAAABCoeAnsNAAAEKiICA30NAAAEKgAbMAQA/wAAAAIAABFycwAAcAsX
DCgWAAAKbxcAAApvGAAACiYCKBwAAAYCKBkAAApvGgAACgIoCAAABm8bAAAKCgZvHAAACnKTAABw
BygdAAAKDQlzHgAAChMEEQQTCBEEbx8AAApynwAAcBEEcyAAAAoTBREFbyEAAAqlKQAAASYCEQQo
GgAABhYxKwIoGQAABnKxAABwAigKAAAGAigOAAAGKCIAAAoTBgJ7BQAABBEGb5IAAAYWDN4MEQgs
BxEIbyMAAArc3i8TBwJywQAAcCgkAAAKEwkSCf4WBwAAAW8lAAAKEQdvJgAACigiAAAKKB0AAAbe
AAIoGQAACggtAxYrARdvJwAACioAARwAAAIAUwBcrwAMAAAAAAAAGAClvQAvKwAAARswAwACAQAA
AwAAESMAAAAAAADwPwoCewUAAARvjwAABm8oAAAKbykAAAoNOMAAAAASAygqAAAKCwcYcysAAApv
iwAABnM4AAAGDAgCBiggAAAGbzEAAAYIcy8AAAZvNwAABghvNgAABnL5AABwCG8wAAAGKCwAAApv
KAAABghvNgAABnIDAQBwCG8wAAAGKCwAAApvLAAABghvNgAABnITAQBwCG8wAAAGKCwAAApvLgAA
BghvNgAABnIpAQBwCG8wAAAGKCwAAApvKgAABghyNQEAcG8zAAAGCHJbAQBwbzUAAAYHb4oAAAYI
by0AAAoSAyguAAAKOjT////eDhID/hYDAAAbbyMAAArcKgAAARAAAAIAIADT8wAOAAAAABswBACx
AgAABAAAEXJfAQBwCgZy+gEAcCgsAAAKCwcoLwAACgwIA3MgAAAKDQlvMAAAChMEAnsEAAAEbzEA
AAoCewQAAAQRBG8yAAAKAnsEAAAEbzMAAApvNAAACi0IFhMI3VMCAAACAnsEAAAEbzMAAApvNAAA
CnOQAAAGfQUAAAQCewQAAARvMwAACm81AAAKEwk4rQEAABEJbzYAAAp0NAAAARMFc44AAAYTBhEF
ciACAHBvNwAACiwLciACAHBzOAAACnoRBhEFciACAHBvOQAACm8lAAAKb3cAAAYRBXIwAgBwbzcA
AAosC3IwAgBwczgAAAp6EQYCEQVyMAIAcG85AAAKKDoAAAooIgAABm95AAAGEQVyRAIAcG83AAAK
LAtyRAIAcHM4AAAKehEGEQVyRAIAcG85AAAKbyUAAApvewAABhEFclQCAHBvNwAACiwLclQCAHBz
OAAACnoRBgIRBXJUAgBwbzkAAApvJQAACigkAAAGb30AAAYRBnJkAgBwb38AAAYRBXJwAgBwbzcA
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
JQAACm9IAAAK3goJLAYJbyMAAArc3i8TBHLoBgBwKCQAAAoTBhIG/hYHAAABbyUAAAoRBG8mAAAK
KCIAAAooHwAABhEEeioAASgAAAIALgAnVQAOAAAAAAIAhQAOkwAKAAAAAAAACwCUnwAvKwAAAbQA
AADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIs
IFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1
NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAA
UEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAADMGQAAI34AADga
AACwHgAAI1N0cmluZ3MAAAAA6DgAADwHAAAjVVMAJEAAABAAAAAjR1VJRAAAADRAAABEBAAAI0Js
b2IAAAAAAAAAAgAAAVcdogkJAwAAAPolMwAWAAABAAAASQAAAAwAAABCAAAAkgAAAEgAAABgAAAA
AgAAALoAAAANAAAACgAAAD0AAAB3AAAABAAAAAEAAAAGAAAAAQAAAAEAAAAAAAoAAQAAAAAABgAe
ARcBCgA6ASUBDgCaAXEBBgC2ARcBBgDMAbsBBgD9AegBBgAdAxcBEgDKA74DEgAhBA8EBgB1E1oT
BgAOFloTBgDgFsYWBgALF/kWBgAiF/kWBgA/F/kWBgBeF/kWBgB3F/kWBgCQF/kWBgCrF/kWBgDG
F/kWBgDfF/kWBgAYGPgXBgA4GPgXBgCNGHoYBgCqGBcBBgCvGBcBBgDTGPkWCgD/GOkYCgAYGekY
BgAtGfgXDgBPGXEBBgBxGRcBBgCNGRcBDgDFGXEBFgAeGv4ZFgA6Gv4ZBgBqGhcBEgCLGngaEgCd
Gg8EEgCqGngaBgDCGhcBBgDPGhcBBgD0GhcBLwAZGwAAswA0GwAABgBsG2IbEgB9Gw8EEgChG74D
EgCyG74DEgDNG74DBgAFHPIbEgARHL4DCgAgHGIbBgA1HBcBBgB7HGocEgCIHHgaFgChHP4ZFgC5
HP4ZBgDUHGIbBgDfHGIbBgDoHGIbBgDzHGIbBgD9HGIbBgAKHWIbBgARHWIbBgA4HRcBBgBKHRcB
BgBQHRcBBgBXHRcBBgB6HRcBBgC/HegBBgD1HekdGgBGHiYeAAAAAAEAAAAAAAEAAQAAABAAMgA8
AAUAAQABAAABEABrADwACQADAAUAAQAQAHQAfwANAAQACAADAQAAowAAABEADgAnAAEAEACxAH8A
BQARACcAAQAQAMAAfwAFABUAMAABABAAzQB/AAUAGQA5AAEAEADcAH8ABQAdAEIAAQAQAOQAfwAF
ACoAXQABABAA9wB/AAUANgB2AAEAEAACAX8ABQBCAI8AEQDcARMAEQAJAhcAEQBTAjkABgDUA2QA
BgDmA2gAAQD3BJIAAQAYBZIAAQA6BZUAAQBXBZIAAQB+BZgAAQCaBZUAAQC8BZUAAQDdBZUABgZ9
BpUAVoCFBqkAVoCNBqkAAQDxBpIAAQAHB5IAAQAeB5IAAQA3B5IAAQDvB5IAAQAHCJIAAQArCJIA
AQBCCMIAAQDmCNQAAQAACdQAAQAbCdQAAQAxCdQAAQBgC5IAAQB/C5IAAQChC5IAAQDJC5IAAQDt
C5IAAQACDJIAAQAbDJIAAQA8DJIAAQBWDJIAAQB3DJIAAQCcDJIAAQDCDJIAAQDhDJIAAQCdD5IA
AQC6D5IAAQDfD5UAAQACEJUAAQAqEJgAAQBSEJgAAQB4EJIAAQCWENQAAQCwENQAAQDKEJIAAQDr
EPEAAQALEfUAAQDGE5IAAQDfE5IAAQABFJIAAQAdFJIAAQBLFJIAAQBxFJIAAQCMFJIAAQC0FJIA
AQDUFJIAAQD0FJIAAQARFSkBAQArFTEBAQAbFksBUCAAAAAAgxgZAhsAAQBYIAAAAACTCB8CHwAB
AJEgAAAAAJMIMwIkAAEAmCAAAAAAkwg/AikAAQCgIAAAAACWCGMCPQACALMgAAAAAIYYGQIbAAIA
pyAAAAAAkRhIGZUBAgC7IAAAAACGCHcCRwACAMMgAAAAAIYIiwJLAAIAzCAAAAAAhgifAkcAAwDU
IAAAAACGCLQCSwADAN0gAAAAAIYIyQJQAAQA5SAAAAAAhgjZAlQABADuIAAAAACGCOkCRwAFAPYg
AAAAAIYIAwNLAAUA/yAAAAAAhggmA1kABgAHIQAAAACGCDUDXgAGABAhAAAAAIYIRANQAAcAGCEA
AAAAhghZA1QABwAhIQAAAACGCG4DUAAIACkhAAAAAIYIggNUAAgAMiEAAAAAhgiWA1AACQA6IQAA
AACGCKoDVAAJAEQhAAAAAIYA9AMbAAoAbCIAAAAAgQD5AxsACgCMIwAAAACBADEEbAAKAJgmAAAA
AIEARgRyAAsAzCcAAAAAgQBdBBsADACEKQAAAACGAGIESwAMAPApAAAAAJEAbQR4AA0AZCoAAAAA
lgB5BH0ADgDoKgAAAACBAIYEggAPAPYqAAAAAIEAkwSCABAABCsAAAAAgQCsBIcAEQBMKwAAAACB
ALsEjQASAGQrAAAAAIEAywSNABMAfisAAAAAgQDjBEsAFACAKwAAAACGGBkCGwAVAJgrAAAAAIYI
lQZHABUAoCsAAAAAhgieBksAFQCpKwAAAACGCKcGRwAWALErAAAAAIYIsQZLABYAuisAAAAAhgi7
BkcAFwDCKwAAAACGCMcGSwAXAMsrAAAAAIYI0wZHABgA0ysAAAAAhgjiBksAGADcKwAAAACGGBkC
GwAZAOQrAAAAAIYIcQdHABkA7CsAAAAAhgh8B0sAGQD1KwAAAACGCIcHRwAaAP0rAAAAAIYIngdL
ABoABiwAAAAAhgi1B0cAGwAOLAAAAACGCL8HSwAbABcsAAAAAIYIyQe3ABwAHywAAAAAhgjcB7wA
HAAoLAAAAACGGBkCGwAdADAsAAAAAIYIggjLAB0AOCwAAAAAhgiPCM8AHQBBLAAAAACGCJwIywAe
AEksAAAAAIYIqgjPAB4AUiwAAAAAhgi4CMsAHwBaLAAAAACGCMEIzwAfAGMsAAAAAIYIygjLACAA
aywAAAAAhgjYCM8AIAB0LAAAAACGGBkCGwAhAHwsAAAAAIYIbglHACEAhCwAAAAAhgiACUsAIQCN
LAAAAACGCJIJRwAiAJUsAAAAAIYIpwlLACIAniwAAAAAhgi8CUcAIwCmLAAAAACGCNcJSwAjAK8s
AAAAAIYI8glHACQAtywAAAAAhggJCksAJADALAAAAACGCCAKRwAlAMgsAAAAAIYIKApLACUA0SwA
AAAAhggwCkcAJgDZLAAAAACGCDwKSwAmAOIsAAAAAIYISApHACcA6iwAAAAAhghcCksAJwDzLAAA
AACGCHAKRwAoAPssAAAAAIYIfQpLACgABC0AAAAAhgiKCkcAKQAMLQAAAACGCJ4KSwApABUtAAAA
AIYIsgpHACoAHS0AAAAAhgjKCksAKgAmLQAAAACGCOIKRwArAC4tAAAAAIYI+wpLACsANy0AAAAA
hggUC0cALAA/LQAAAACGCCYLSwAsAEgtAAAAAIYIOAtHAC0AUC0AAAAAhghMC0sALQBZLQAAAACG
GBkCGwAuAGEtAAAAAIYIxw1HAC4AaS0AAAAAhgjXDUsALgByLQAAAACGCOcNRwAvAHotAAAAAIYI
/w1LAC8Agy0AAAAAhggXDlAAMACLLQAAAACGCC0OVAAwAJQtAAAAAIYIQw5QADEAnC0AAAAAhghe
DlQAMQClLQAAAACGCHkOWQAyAK0tAAAAAIYIlA5eADIAti0AAAAAhgivDlkAMwC+LQAAAACGCMgO
XgAzAMctAAAAAIYI4Q5HADQAzy0AAAAAhgjyDksANADYLQAAAACGCAMPywA1AOAtAAAAAIYIEA/P
ADUA6S0AAAAAhggdD8sANgDxLQAAAACGCCoPzwA2APotAAAAAIYINw9HADcAAi4AAAAAhghLD0sA
NwALLgAAAACGCF8P2wA4ABMuAAAAAIYIcg/gADgAHC4AAAAAhgiFD+YAOQAkLgAAAACGCJEP6wA5
AC0uAAAAAIYYGQIbADoANS4AAAAAhgjIEUcAOgA9LgAAAACGCNQRSwA6AEYuAAAAAIYI4BFHADsA
Ti4AAAAAhgj1EUsAOwBXLgAAAACGCAoSRwA8AF8uAAAAAIYIGRJLADwAaC4AAAAAhggoEkcAPQBw
LgAAAACGCEkSSwA9AHkuAAAAAIYIahJHAD4AgS4AAAAAhgiDEksAPgCKLgAAAACGCJwSRwA/AJIu
AAAAAIYIqhJLAD8Amy4AAAAAhgi4EkcAQACjLgAAAACGCNMSSwBAAKwuAAAAAIYI7hJHAEEAtC4A
AAAAhggBE0sAQQC9LgAAAACGCBQTRwBCAMUuAAAAAIYIJxNLAEIAzi4AAAAAhgg6E0cAQwDWLgAA
AACGCEoTSwBDAN8uAAAAAIYIfBMDAUQA5y4AAAAAhgiJEwwBRADwLgAAAACGCJYTFgFFAPguAAAA
AIYIrhMfAUUAAS8AAAAAhhgZAhsARgAJLwAAAACGCCsWVAFGABEvAAAAAIYYGQJUAEYAJS8AAAAA
hgA+Fl4BRwA8LwAAAACGAEIWSwBIAAAAAQBkFgAAAQBkFgAAAQBkFgAAAQBkFgAAAQBkFgAAAQBk
FgAAAQBkFgAAAQBkFgAAAQBkFgAAAQBqFgAAAQBqFgAAAQB0FgAAAQB8FgAAAQB0FgAAAQCGFgAA
AQCGFgAAAQCNFgAAAQCYFgAAAQCkFgAAAQCsFgAAAQBkFgAAAQBkFgAAAQBkFgAAAQBkFgAAAQBk
FgAAAQBkFgAAAQBkFgAAAQBkFgAAAQBkFgAAAQBkFgAAAQBkFgAAAQBkFgAAAQBkFgAAAQBkFgAA
AQBkFgAAAQBkFgAAAQBkFgAAAQBkFgAAAQBkFgAAAQBkFgAAAQBkFgAAAQBkFgAAAQBkFgAAAQBk
FgAAAQBkFgAAAQBkFgAAAQBkFgAAAQBkFgAAAQBkFgAAAQBkFgAAAQBkFgAAAQBkFgAAAQBkFgAA
AQBkFgAAAQBkFgAAAQBkFgAAAQBkFgAAAQBkFgAAAQBkFgAAAQBkFgAAAQBkFgAAAQBkFgAAAQBk
FgAAAQBkFgAAAQBkFgAAAQBkFgAAAQBkFgAAAQBkFgAAAQBkFgAAAQCxFgAAAQC3FgAAAQC9FmEA
GQJLAGkAGQJLAHEAGQJLAHkAGQJLAIEAGQJLAIkAGQJLAJEAGQJLAJkAGQJLAKEAGQJLAKkAGQJL
ALEAGQJUALkAGQIbAMEAGQIbAAkAGQIbAMkAwRhuAckA3Bh1ASkAGQJ6AeEAGQKGAfEAGQIbABEA
GQIbAPkAGQIbAAEBexmZAQEBnBmfAQkBsRlHABkA1xmlAREBKhqrARkBTBqxASEBVRpHACkBcRq4
AUkAGQJLADEBmBobADkBGQK/AUEBtBrGASkByBrKAVEB2xobADkA4xrRAQkA6xpHAFkB/hpHABEB
ChtUAAwAKRv0ARQAPxsJAhwATRseAiQAGQJUACkBcRoqAiQAPhYwAhwAWRs2AnEBcRtKAjkBjRtP
AkEAmxsbAEEArRtVAkEAxBtcApEB6BtQAJEBPxtiApkBTRvGAaEBGRxoAqkBGQJLAKEBTBptArEB
PRxyArEBSBx4ApkBWRs2AjkAURxQAEEBWhxQALkBghyaAsEBlRw2AhEBqxzBAskBTBrHAtEBwhzG
ASkByBrOArEBzBzUAnEBmBrhAvkBGQLxAgkCHB1LAHEBJh14AAECLR0CAxECHB0GAzkAQB0CAxkC
6xpHACEC6xqNACkCGQJLADkAbx3RATEChx0kAzECnh0rAzkA6xqNACkBsR01AykBuR2SADkCGQJL
ADkCyh1HAEEAGQJLABkAGQIbAAwAGQJUAAwA4B1OA0ECGQJUAEECAx5WA0kCGQIbAEkCWx5nA0EC
ZR5sAwgAPACtAAgAQACyACkAkwCMAS4AQwD/Ay4AYwAlBC4AOwAFBC4AWwAcBC4ACwCOAy4AEwDW
Ay4AGwD/Ay4AIwD/Ay4AKwD/Ay4AMwDWA0MAawCyAEkAkwCMAWEAmwCyAIMAqwCyAMEAmwCyAOEA
mwCyAAABmwCyAAEBmwCyACABmwCyACEBmwCyAEABmwCyAEEBmwCyAGABmwCyAGEBmwCyAIABmwCy
AIEBmwCyAKABmwCyAKEBmwCyAMABmwCyAOABmwCyAAACmwCyACACmwCyACECmwCyAEACmwCyAEEC
mwCyAGACmwCyAGECmwCyAIACmwCyAIECmwCyAKACmwCyAKECmwCyAMACmwCyAMECmwCyAOACmwCy
AOECmwCyAAEDmwCyACEDmwCyAEEDmwCyAGEDmwCyAIEDmwCyAKEDmwCyAMEDmwCyAOEDmwCyAAEE
mwCyACEEmwCyAEEEmwCyAGEEmwCyAIEEmwCyAKEEmwCyAMEEmwCyAOAEmwCyAOEEmwCyAAAFmwCy
AAEFmwCyACAFmwCyACEFmwCyAEAFmwCyAEEFmwCyAGAFmwCyAGEFmwCyAIAFmwCyAIEFmwCyAKAF
mwCyAKEFmwCyAMAFmwCyAMEFmwCyAOEFmwCyAAAGmwCyAAEGmwCyACAGmwCyACEGmwCyAEAGmwCy
AEEGmwCyAGAGmwCyAGEGmwCyAIAGmwCyAIEGmwCyAKAGmwCyAKEGmwCyAMAGmwCyAMEGmwCyAOAG
mwCyAOEGmwCyAAEHmwCyACAHmwCyACEHmwCyAEAHmwCyAEEHmwCyAGAHmwCyAGEHmwCyAIAHmwCy
AIEHmwCyAKAHmwCyAKEHmwCyAMAHmwCyAMEHmwCyAOAHmwCyAOEHmwCyAAAImwCyAAEImwCyACEI
mwCyAEAImwCyAGAImwCyAIAImwCyAKAImwCyAMAImwCyAOAImwCyAAAJmwCyACAJmwCyAEAJmwCy
AGAJmwCyAIAJmwCyAKAJmwCyAMAJmwCyAOAJmwCyAAAKmwCyACAKmwCyAEAKmwCyAGAKmwCyAIAK
mwCyAKAKmwCyAMAKmwCyAOAKmwCyAAALmwCyACALmwCyAEALmwCyAGALmwCyAKALmwCyAMALmwCy
AOALmwCyAAAMmwCyACAMmwCyAEAMmwCyAGAMmwCyAIAMmwCyAKAMmwCyAMAMmwCyAOAMmwCyAAAN
mwCyACANmwCyAEANmwCyAGANmwCyAIANmwCyAKANmwCyAMANmwCyAOANmwCyAAAOmwCyACAOmwCy
AEAOmwCyAGAOmwCyAIAOmwCyAMAOmwCyAOAOmwCyAAAPmwCyACAPmwCyAEAPmwCyAGAPmwCyAIAP
mwCyAKAPmwCyAMAPmwCyAOAPmwCyAAAQmwCyACAQmwCyAEAQmwCyAGAQmwCyAIAQmwCyAKAQmwCy
AMAQmwCyAOAQmwCyAAARmwCyACARmwCyAEARmwCyAGARmwCyAIARmwCyAKARmwCyAIEB1gE6An0C
nwLZAvgCDAMWAzsDRANIA3MDAgABAAMAAwAEAAQABgAMAAcAEAAIABQACQAYAAoAJQALADEADAA9
AAAAzAEvAAAASwI0AAAAbwJCAAAA/gWcAAAADgacAAAAHwagAAAAKwacAAAAQQakAAAATAagAAAA
XQagAAAAbQagAAAAUwecAAAAWAecAAAAXgecAAAAZgecAAAAYgicAAAAaQicAAAAfAicAAAAsQDG
AAAATAnXAAAAVQnXAAAAXwnXAAAAZAnXAAAAAg2cAAAAEA2cAAAAIQ2cAAAAOA2cAAAASw2cAAAA
Tw2cAAAAVw2cAAAAZw2cAAAAcA2cAAAAgA2cAAAAlA2cAAAAqQ2cAAAAtw2cAAAAJBGcAAAAMBGc
AAAARBGgAAAAVhGgAAAAbRGkAAAAhBGkAAAAmRGcAAAAphHXAAAArxHXAAAAuBGcAAAAzQD5AAAA
3AD+AAAAUBWcAAAAWBWcAAAAaRWcAAAAdBWcAAAAkRWcAAAAphWcAAAAsBWcAAAAxxWcAAAA1hWc
AAAA5RWcAAAA8RU5AQAA+hVCAQAAVRZkAQIAAgADAAIAAwAFAAEABAAFAAIABQAHAAEACQAJAAIA
CAAJAAIACgALAAEACwALAAIADAANAAEADQANAAIADgAPAAEADwAPAAEAEQARAAIAEAARAAIAEgAT
AAEAEwATAAIAFAAVAAEAFQAVAAIAFgAXAAEAFwAXAAIAJwAZAAEAKAAZAAIAKQAbAAEAKgAbAAIA
KwAdAAEALAAdAAIALQAfAAEALgAfAAIAMAAhAAEAMQAhAAEAMwAjAAIAMgAjAAIANAAlAAEANQAl
AAEANwAnAAIANgAnAAIAOQApAAEAOgApAAIAOwArAAEAPAArAAIAPQAtAAEAPgAtAAEAQAAvAAIA
PwAvAAIAQgAxAAEAQwAxAAIARAAzAAEARQAzAAIARgA1AAEARwA1AAIASAA3AAEASQA3AAIASgA5
AAEASwA5AAIATAA7AAEATQA7AAIATgA9AAEATwA9AAEAUQA/AAIAUAA/AAEAUwBBAAIAUgBBAAIA
VABDAAEAVQBDAAEAVwBFAAIAVgBFAAIAWABHAAEAWQBHAAIAWgBJAAEAWwBJAAIAXQBLAAEAXgBL
AAEAYABNAAIAXwBNAAIAYQBPAAEAYgBPAAIAYwBRAAEAZABRAAIAZQBTAAEAZgBTAAIAZwBVAAEA
aABVAAIAaQBXAAEAagBXAAIAawBZAAEAbABZAAIAbQBbAAEAbgBbAAIAbwBdAAEAcABdAAEAcgBf
AAIAcQBfAAIAcwBhAAEAdABhAAEAdwBjAAIAdgBjAAIAeABlAAEAeQBlAAIAegBnAAEAewBnAAIA
fABpAAEAfQBpAAEAfwBrAAIAfgBrAAIAgABtAAEAgQBtAAIAggBvAAEAgwBvAAIAhABxAAEAhQBx
AAIAhgBzAAEAhwBzAAIAiAB1AAEAiQB1AAIAigB3AAEAiwB3AAIAjAB5AAEAjQB5AAIAjwB7AOwB
AAIVAiMCBIAAAAEAAAB+Gk9qAAAAAAAAVhgAAAQAAAAAAAAAAAAAAAEADgEAAAAABAAAAAAAAAAA
AAAAAQAXAQAAAAAMAAAAAAAAAAAAAAAKAFIBAAAAAAQAAAAAAAAAAAAAAAEAvgMAAAAADAAAAAAA
AAAAAAAACgDfGQAAAAAEAAAAAAAAAAAAAABeAxAeAAAAAAAAAAABAAAAbB4AAAUABAAAAAAAADxN
b2R1bGU+AFNUXzFiYzRkOWU5MWRiZjQxN2I5ODYyYzc1YTk3ZGIwNTY1LmRsbABSZXNvdXJjZXMA
U1RfMmU3OWVmNWVjNDBjNDA2NTljNGI1ZmVkODk3ZmY0MmIuUHJvcGVydGllcwBTZXR0aW5ncwBT
Y3JpcHRNYWluAFNUXzJlNzllZjVlYzQwYzQwNjU5YzRiNWZlZDg5N2ZmNDJiAFNjcmlwdFJlc3Vs
dHMAQmlsbGluZ0FkZHJlc3MAT3JkZXJQYXltZW50AFJlc291cmNlQW1vdW50AFByb2R1Y3QAU2Fs
ZXNPcmRlclJlc291cmNlAFNhbGVzT3JkZXIAU2FsZXNPcmRlcnMAbXNjb3JsaWIAU3lzdGVtAE9i
amVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBNaWNyb3Nv
ZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2Ny
aXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UARW51bQBTeXN0ZW0uUmVzb3VyY2Vz
AFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJl
SW5mbwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVy
ZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0
AGdldF92YXJEYkNvbm5lY3Rpb24Ac2V0X3ZhckRiQ29ubmVjdGlvbgBnZXRfdmFyRGF0YURpcmVj
dG9yeQBzZXRfdmFyRGF0YURpcmVjdG9yeQBnZXRfdmFyRGF5c0JhY2sAc2V0X3ZhckRheXNCYWNr
AGdldF92YXJTYWxlc09yZGVySnNvbkZpbGUAc2V0X3ZhclNhbGVzT3JkZXJKc29uRmlsZQBEYXRl
VGltZQBnZXRfdmFyRW5kRGF0ZQBzZXRfdmFyRW5kRGF0ZQBnZXRfdmFyTWF4SXRlck51bWJlcgBz
ZXRfdmFyTWF4SXRlck51bWJlcgBnZXRfdmFyU2xlZXBUaW1lTWluAHNldF92YXJTbGVlcFRpbWVN
aW4AZ2V0X3Zhck1vZHVsZVRvQ2FsbABzZXRfdmFyTW9kdWxlVG9DYWxsAFN5c3RlbS5EYXRhAERh
dGFUYWJsZQBtX2R0TXRTYWxlc09yZGVycwBtX3NhbGVzT3JkZXJzAE1haW4ATG9hZFBheW1lbnRz
Rm9yT3JkZXJzAFN5c3RlbS5EYXRhLk9sZURiAE9sZURiQ29ubmVjdGlvbgBGZXRjaFNhbGVzT3Jk
ZXJzRGF0YQBXYWl0NE1hc3RlclByZXNlbnRhaW9uAEluaXQATG9nTWVzc2FnZQBJc0ZpbGVSZWFk
eQBMb2dNZXNzYWdlU3QAQW1vdW50Rm9ybWF0AFJlZ2lzdHJhdGlvblBlcmlvZEZvcm1hdABEYXRl
VGltZUZvcm1hdABNVDJHRF9PcmRlclR5cGUAQ291bnRyeTJDdXJyZW5jeUlTT0NvZGUAU2VyaWFs
aXplRGF0YVRvSlNPTgA8dmFyRGJDb25uZWN0aW9uPmtfX0JhY2tpbmdGaWVsZAA8dmFyRGF0YURp
cmVjdG9yeT5rX19CYWNraW5nRmllbGQAPHZhckRheXNCYWNrPmtfX0JhY2tpbmdGaWVsZAA8dmFy
U2FsZXNPcmRlckpzb25GaWxlPmtfX0JhY2tpbmdGaWVsZAA8dmFyRW5kRGF0ZT5rX19CYWNraW5n
RmllbGQAPHZhck1heEl0ZXJOdW1iZXI+a19fQmFja2luZ0ZpZWxkADx2YXJTbGVlcFRpbWVNaW4+
a19fQmFja2luZ0ZpZWxkADx2YXJNb2R1bGVUb0NhbGw+a19fQmFja2luZ0ZpZWxkAHZhckRiQ29u
bmVjdGlvbgB2YXJEYXRhRGlyZWN0b3J5AHZhckRheXNCYWNrAHZhclNhbGVzT3JkZXJKc29uRmls
ZQB2YXJFbmREYXRlAHZhck1heEl0ZXJOdW1iZXIAdmFyU2xlZXBUaW1lTWluAHZhck1vZHVsZVRv
Q2FsbAB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQBnZXRfQ2l0eQBzZXRfQ2l0eQBnZXRfU3RhdGUA
c2V0X1N0YXRlAGdldF9Db3VudHJ5AHNldF9Db3VudHJ5AGdldF9Qb3N0YWxDb2RlAHNldF9Qb3N0
YWxDb2RlADxDaXR5PmtfX0JhY2tpbmdGaWVsZAA8U3RhdGU+a19fQmFja2luZ0ZpZWxkADxDb3Vu
dHJ5PmtfX0JhY2tpbmdGaWVsZAA8UG9zdGFsQ29kZT5rX19CYWNraW5nRmllbGQAQ2l0eQBTdGF0
ZQBDb3VudHJ5AFBvc3RhbENvZGUAZ2V0X0Ftb3VudABzZXRfQW1vdW50AGdldF9NZXJjaGFudEFj
Y291bnRLZXkAc2V0X01lcmNoYW50QWNjb3VudEtleQBnZXRfSW5kZXgAc2V0X0luZGV4AGdldF9C
aWxsaW5nQWRkcmVzcwBzZXRfQmlsbGluZ0FkZHJlc3MAPEFtb3VudD5rX19CYWNraW5nRmllbGQA
PE1lcmNoYW50QWNjb3VudEtleT5rX19CYWNraW5nRmllbGQAPEluZGV4PmtfX0JhY2tpbmdGaWVs
ZAA8QmlsbGluZ0FkZHJlc3M+a19fQmFja2luZ0ZpZWxkAEFtb3VudABNZXJjaGFudEFjY291bnRL
ZXkASW5kZXgAZ2V0X0lDQU5ORmVlAHNldF9JQ0FOTkZlZQBnZXRfTGlzdFByaWNlAHNldF9MaXN0
UHJpY2UAZ2V0X0Nvc3QAc2V0X0Nvc3QAZ2V0X1ByaWNlUGFpZABzZXRfUHJpY2VQYWlkADxJQ0FO
TkZlZT5rX19CYWNraW5nRmllbGQAPExpc3RQcmljZT5rX19CYWNraW5nRmllbGQAPENvc3Q+a19f
QmFja2luZ0ZpZWxkADxQcmljZVBhaWQ+a19fQmFja2luZ0ZpZWxkAElDQU5ORmVlAExpc3RQcmlj
ZQBDb3N0AFByaWNlUGFpZABnZXRfUHJvZHVjdEZhbWlseQBzZXRfUHJvZHVjdEZhbWlseQBnZXRf
UHJvZHVjdFN1YkZhbWlseQBzZXRfUHJvZHVjdFN1YkZhbWlseQBnZXRfUmVnaXN0cmF0aW9uUGVy
aW9kVHlwZQBzZXRfUmVnaXN0cmF0aW9uUGVyaW9kVHlwZQBnZXRfUmVnaXN0cmF0aW9uUGVyaW9k
AHNldF9SZWdpc3RyYXRpb25QZXJpb2QAZ2V0X1RMRABzZXRfVExEAGdldF9TcG9uc29yAHNldF9T
cG9uc29yAGdldF9SZWdpc3RyeVNwb25zb3IAc2V0X1JlZ2lzdHJ5U3BvbnNvcgBnZXRfU3VwcGxp
ZXIAc2V0X1N1cHBsaWVyAGdldF9Qcm9kdWN0VExEUGhhc2UAc2V0X1Byb2R1Y3RUTERQaGFzZQBn
ZXRfUmVnaXN0cnlEZXNjcmlwdGlvbgBzZXRfUmVnaXN0cnlEZXNjcmlwdGlvbgBnZXRfUHJpY2VU
aWVyRGVzY3JpcHRpb24Ac2V0X1ByaWNlVGllckRlc2NyaXB0aW9uAGdldF9QcmljZVRpZXJOYW1l
AHNldF9QcmljZVRpZXJOYW1lAGdldF9QcmVtaXVtVGllclR5cGUAc2V0X1ByZW1pdW1UaWVyVHlw
ZQA8UHJvZHVjdEZhbWlseT5rX19CYWNraW5nRmllbGQAPFByb2R1Y3RTdWJGYW1pbHk+a19fQmFj
a2luZ0ZpZWxkADxSZWdpc3RyYXRpb25QZXJpb2RUeXBlPmtfX0JhY2tpbmdGaWVsZAA8UmVnaXN0
cmF0aW9uUGVyaW9kPmtfX0JhY2tpbmdGaWVsZAA8VExEPmtfX0JhY2tpbmdGaWVsZAA8U3BvbnNv
cj5rX19CYWNraW5nRmllbGQAPFJlZ2lzdHJ5U3BvbnNvcj5rX19CYWNraW5nRmllbGQAPFN1cHBs
aWVyPmtfX0JhY2tpbmdGaWVsZAA8UHJvZHVjdFRMRFBoYXNlPmtfX0JhY2tpbmdGaWVsZAA8UmVn
aXN0cnlEZXNjcmlwdGlvbj5rX19CYWNraW5nRmllbGQAPFByaWNlVGllckRlc2NyaXB0aW9uPmtf
X0JhY2tpbmdGaWVsZAA8UHJpY2VUaWVyTmFtZT5rX19CYWNraW5nRmllbGQAPFByZW1pdW1UaWVy
VHlwZT5rX19CYWNraW5nRmllbGQAUHJvZHVjdEZhbWlseQBQcm9kdWN0U3ViRmFtaWx5AFJlZ2lz
dHJhdGlvblBlcmlvZFR5cGUAUmVnaXN0cmF0aW9uUGVyaW9kAFRMRABTcG9uc29yAFJlZ2lzdHJ5
U3BvbnNvcgBTdXBwbGllcgBQcm9kdWN0VExEUGhhc2UAUmVnaXN0cnlEZXNjcmlwdGlvbgBQcmlj
ZVRpZXJEZXNjcmlwdGlvbgBQcmljZVRpZXJOYW1lAFByZW1pdW1UaWVyVHlwZQBnZXRfT3JkZXJJ
dGVtSWQAc2V0X09yZGVySXRlbUlkAGdldF9PcmRlckl0ZW1SZXNvdXJjZUlkAHNldF9PcmRlckl0
ZW1SZXNvdXJjZUlkAGdldF9PcmRlckl0ZW1RdWFudGl0eQBzZXRfT3JkZXJJdGVtUXVhbnRpdHkA
Z2V0X09yZGVySXRlbVJlc291cmNlQ291bnQAc2V0X09yZGVySXRlbVJlc291cmNlQ291bnQAZ2V0
X1NlcnZpY2VQZXJpb2RTdGFydERhdGUAc2V0X1NlcnZpY2VQZXJpb2RTdGFydERhdGUAZ2V0X1Nl
cnZpY2VQZXJpb2RFbmREYXRlAHNldF9TZXJ2aWNlUGVyaW9kRW5kRGF0ZQBnZXRfRHVyYXRpb25U
eXBlAHNldF9EdXJhdGlvblR5cGUAZ2V0X0R1cmF0aW9uAHNldF9EdXJhdGlvbgBnZXRfVGF4VG90
YWwAc2V0X1RheFRvdGFsAGdldF9JU09DdXJyZW5jeUNvZGUAc2V0X0lTT0N1cnJlbmN5Q29kZQBn
ZXRfUmVzb3VyY2VBbW91bnQAc2V0X1Jlc291cmNlQW1vdW50AGdldF9Qcm9kdWN0AHNldF9Qcm9k
dWN0ADxPcmRlckl0ZW1JZD5rX19CYWNraW5nRmllbGQAPE9yZGVySXRlbVJlc291cmNlSWQ+a19f
QmFja2luZ0ZpZWxkADxPcmRlckl0ZW1RdWFudGl0eT5rX19CYWNraW5nRmllbGQAPE9yZGVySXRl
bVJlc291cmNlQ291bnQ+a19fQmFja2luZ0ZpZWxkADxTZXJ2aWNlUGVyaW9kU3RhcnREYXRlPmtf
X0JhY2tpbmdGaWVsZAA8U2VydmljZVBlcmlvZEVuZERhdGU+a19fQmFja2luZ0ZpZWxkADxEdXJh
dGlvblR5cGU+a19fQmFja2luZ0ZpZWxkADxEdXJhdGlvbj5rX19CYWNraW5nRmllbGQAPFRheFRv
dGFsPmtfX0JhY2tpbmdGaWVsZAA8SVNPQ3VycmVuY3lDb2RlPmtfX0JhY2tpbmdGaWVsZAA8UmVz
b3VyY2VBbW91bnQ+a19fQmFja2luZ0ZpZWxkADxQcm9kdWN0PmtfX0JhY2tpbmdGaWVsZABPcmRl
ckl0ZW1JZABPcmRlckl0ZW1SZXNvdXJjZUlkAE9yZGVySXRlbVF1YW50aXR5AE9yZGVySXRlbVJl
c291cmNlQ291bnQAU2VydmljZVBlcmlvZFN0YXJ0RGF0ZQBTZXJ2aWNlUGVyaW9kRW5kRGF0ZQBE
dXJhdGlvblR5cGUARHVyYXRpb24AVGF4VG90YWwASVNPQ3VycmVuY3lDb2RlAGdldF9PcmRlcklk
AHNldF9PcmRlcklkAGdldF9PcmRlclVUQ0RhdGVUaW1lAHNldF9PcmRlclVUQ0RhdGVUaW1lAGdl
dF9DdXN0b21lcklkAHNldF9DdXN0b21lcklkAGdldF9UcmFuc2FjdGlvbmFsSVNPQ3VycmVuY3lD
b2RlAHNldF9UcmFuc2FjdGlvbmFsSVNPQ3VycmVuY3lDb2RlAGdldF9PcmlnaW5hbE9yZGVySWRW
YWx1ZQBzZXRfT3JpZ2luYWxPcmRlcklkVmFsdWUAZ2V0X09yZGVyVHlwZQBzZXRfT3JkZXJUeXBl
AGdldF9TaGlwcGluZ0hhbmRsaW5nQW1vdW50AHNldF9TaGlwcGluZ0hhbmRsaW5nQW1vdW50AGdl
dF9Ub3RhbFRheEFtb3VudABzZXRfVG90YWxUYXhBbW91bnQAZ2V0X1N1YlRvdGFsQW1vdW50AHNl
dF9TdWJUb3RhbEFtb3VudABnZXRfVG90YWxBbW91bnQAc2V0X1RvdGFsQW1vdW50AFN5c3RlbS5D
b2xsZWN0aW9ucy5HZW5lcmljAExpc3RgMQBnZXRfUGF5bWVudHMAc2V0X1BheW1lbnRzAGdldF9T
YWxlc09yZGVyUmVzb3VyY2VzAHNldF9TYWxlc09yZGVyUmVzb3VyY2VzADxPcmRlcklkPmtfX0Jh
Y2tpbmdGaWVsZAA8T3JkZXJVVENEYXRlVGltZT5rX19CYWNraW5nRmllbGQAPEN1c3RvbWVySWQ+
a19fQmFja2luZ0ZpZWxkADxUcmFuc2FjdGlvbmFsSVNPQ3VycmVuY3lDb2RlPmtfX0JhY2tpbmdG
aWVsZAA8T3JpZ2luYWxPcmRlcklkVmFsdWU+a19fQmFja2luZ0ZpZWxkADxPcmRlclR5cGU+a19f
QmFja2luZ0ZpZWxkADxTaGlwcGluZ0hhbmRsaW5nQW1vdW50PmtfX0JhY2tpbmdGaWVsZAA8VG90
YWxUYXhBbW91bnQ+a19fQmFja2luZ0ZpZWxkADxTdWJUb3RhbEFtb3VudD5rX19CYWNraW5nRmll
bGQAPFRvdGFsQW1vdW50PmtfX0JhY2tpbmdGaWVsZAA8UGF5bWVudHM+a19fQmFja2luZ0ZpZWxk
ADxTYWxlc09yZGVyUmVzb3VyY2VzPmtfX0JhY2tpbmdGaWVsZABPcmRlcklkAE9yZGVyVVRDRGF0
ZVRpbWUAQ3VzdG9tZXJJZABUcmFuc2FjdGlvbmFsSVNPQ3VycmVuY3lDb2RlAE9yaWdpbmFsT3Jk
ZXJJZFZhbHVlAE9yZGVyVHlwZQBTaGlwcGluZ0hhbmRsaW5nQW1vdW50AFRvdGFsVGF4QW1vdW50
AFN1YlRvdGFsQW1vdW50AFRvdGFsQW1vdW50AFBheW1lbnRzAFNhbGVzT3JkZXJSZXNvdXJjZXMA
RGljdGlvbmFyeWAyAGRpY3RTYWxlc09yZGVycwBnZXRfRGljdFNhbGVzT3JkZXIAQWRkAFNlcmlh
bGl6ZTJKc29uRmlsZQBEaWN0U2FsZXNPcmRlcgB2YWx1ZQBvYmpSbUNvbm4AbWVzc2FnZQBzRmls
ZW5hbWUAbnVtYmVyAHBhcnNlZERhdGUAbXRPcmRlckNvZGUAY291bnJ0eQBkYXRhAGNvdW50AG9y
ZGVyAGZpbGVQYXRoAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0
cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlE
ZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1i
bHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHly
aWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVB
dHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVy
U2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJp
bGl0eUF0dHJpYnV0ZQBTVF8xYmM0ZDllOTFkYmY0MTdiOTg2MmM3NWE5N2RiMDU2NQBTeXN0ZW0u
RGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBl
SGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29t
cG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRl
AENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9p
bnRBdHRyaWJ1dGUAQXBwRG9tYWluAGdldF9DdXJyZW50RG9tYWluAEFwcERvbWFpblNldHVwAGdl
dF9TZXR1cEluZm9ybWF0aW9uAGdldF9BcHBsaWNhdGlvbkJhc2UAU2NyaXB0T2JqZWN0TW9kZWwA
Z2V0X0R0cwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuUnVudGltZQBDb25uZWN0aW9ucwBnZXRfQ29ubmVjdGlvbnMAQ29ubmVjdGlvbk1hbmFn
ZXIAZ2V0X0l0ZW0AZ2V0X0Nvbm5lY3Rpb25TdHJpbmcAU3RyaW5nAENvbmNhdABTeXN0ZW0uRGF0
YS5Db21tb24ARGJDb25uZWN0aW9uAE9wZW4AT2xlRGJDb21tYW5kAERiQ29tbWFuZABFeGVjdXRl
U2NhbGFyAEludDMyAEZvcm1hdABJRGlzcG9zYWJsZQBEaXNwb3NlAGdldF9Ob3cAVG9TdHJpbmcA
RXhjZXB0aW9uAGdldF9NZXNzYWdlAHNldF9UYXNrUmVzdWx0AFZhbHVlQ29sbGVjdGlvbgBnZXRf
VmFsdWVzAEVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgBnZXRfQ3VycmVudABNb3ZlTmV4dABTeXN0
ZW0uSU8ARmlsZQBSZWFkQWxsVGV4dABPbGVEYkRhdGFSZWFkZXIARXhlY3V0ZVJlYWRlcgBDbGVh
cgBJRGF0YVJlYWRlcgBMb2FkAERhdGFSb3dDb2xsZWN0aW9uAGdldF9Sb3dzAEludGVybmFsRGF0
YUNvbGxlY3Rpb25CYXNlAGdldF9Db3VudABTeXN0ZW0uQ29sbGVjdGlvbnMASUVudW1lcmF0b3IA
RGF0YVJvdwBJc051bGwASW52YWxpZERhdGFFeGNlcHRpb24AQ29udmVydABUb0RhdGVUaW1lAFRv
RG91YmxlAGdldF9Ib3VyAEV4ZWN1dGVOb25RdWVyeQBTeXN0ZW0uVGhyZWFkaW5nAFRocmVhZABT
bGVlcABEYkRhdGFSZWFkZXIAZ2V0X0hhc1Jvd3MAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFy
aWFibGUAZ2V0X1ZhbHVlAFRvSW50MzIARmlsZVN0cmVhbQBGaWxlTW9kZQBGaWxlQWNjZXNzAEZp
bGVTaGFyZQBTdHJlYW1Xcml0ZXIAU3RyZWFtAFRleHRXcml0ZXIAV3JpdGVMaW5lAEV4aXN0cwBn
ZXRfTGVuZ3RoAENvbnNvbGUAZ2V0X1RpY2tzAEludDY0AERvdWJsZQBOb3RJbXBsZW1lbnRlZEV4
Y2VwdGlvbgBnZXRfVXRjTm93AFRpbWVab25lSW5mbwBGaW5kU3lzdGVtVGltZVpvbmVCeUlkAENv
bnZlcnRUaW1lRnJvbVV0YwBSZXBsYWNlAEVtcHR5AFJlZ2lvbkluZm8AZ2V0X0lTT0N1cnJlbmN5
U3ltYm9sAHNldF9JdGVtAFN5c3RlbS5UZXh0AFN0cmluZ0J1aWxkZXIAQXBwZW5kRm9ybWF0AFN5
c3RlbS5XZWIuRXh0ZW5zaW9ucwBTeXN0ZW0uV2ViLlNjcmlwdC5TZXJpYWxpemF0aW9uAEphdmFT
Y3JpcHRTZXJpYWxpemVyAFNlcmlhbGl6ZQBBcHBlbmQAU1RfMmU3OWVmNWVjNDBjNDA2NTljNGI1
ZmVkODk3ZmY0MmIuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAcVMAVABfADIAZQA3
ADkAZQBmADUAZQBjADQAMABjADQAMAA2ADUAOQBjADQAYgA1AGYAZQBkADgAOQA3AGYAZgA0ADIA
YgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAH2EAXAA3AEIAJwBm
AFQAUgBYAFEAfgByAGUALwB5AAELOwBwAHcAZAA9AAARUwBFAEwARQBDAFQAIAAxAAAPewAwAH0A
XAB7ADEAfQAAN00AYQBpAG4AIABFAHgAYwBlAHAAdABpAG8AbgA6ACAAWwB7ADAAfQBdACwAWwB7
ADEAfQBdAAAJQwBpAHQAeQAAD0MAbwB1AG4AdAByAHkAABVQAG8AcwB0AGEAbABDAG8AZABlAAAL
UwB0AGEAdABlAAAlTQBlAHIAYwBoAGEAbgB0AEEAYwBjAG8AdQBuAHQASwBlAHkAAAMxAACAmUMA
OgBcAFQAZQBtAHAAXABCAG8AcgBpAHMAXABEAGUAdgBcAEoAaQByAGEAXABhAGEALQBFAFMATwBN
AC0AVwBvAHIAawBkAGEAeQBcAEQAZQB2AFwAUwBTAEkAUwBcAEUAUwBPAE0AXwBEAGEAdABhAFAA
cgBvAGMAXABFAFMATwBNAF8ARABhAHQAYQBQAHIAbwBjAFwAASVNAFQAXwBTAGEAbABlAHMATwBy
AGQAZQByAHMALgBzAHEAbAAAD28AcgBkAGUAcgBpAGQAABNzAHQAYQByAHQAZABhAHQAZQAAD2EA
YwBjAG8AdQBuAHQAAA9jAG8AdQBuAHQAcgB5AAALMgAyADIAMgAyAAAXbwByAGQAZQByAHQAeQBw
AGUAaQBkAAALdABvAHQAYQBsAAAHdABhAHgAAFdGAGUAdABjAGgAUwBhAGwAZQBzAE8AcgBkAGUA
cgBzAEQAYQB0AGEAIABFAHgAYwBlAHAAdABpAG8AbgA6ACAAWwB7ADAAfQBdACwAWwB7ADEAfQBd
AAARQwA6AFwAdABlAG0AcABcAAAjbABvAGMAYQBsAGgAbwBzAHQALgBIAG8AcwB0AE8AcABzAAA/
TQBhAHMAdABlAHIAUAByAGUAcwBlAG4AdABhAHQAaQBvAG4ARQByAHIAbwByAE0AYQBpAGwALgBz
AHEAbAAAQ00AYQBzAHQAZQByAFAAcgBlAHMAZQBuAHQAYQB0AGkAbwBuAFcAYQByAG4AaQBuAGcA
TQBhAGkAbAAuAHMAcQBsAAAHewAwAH0AAB92AGEAcgBEAGIAQwBvAG4AbgBlAGMAdABpAG8AbgAA
IXYAYQByAEQAYQB0AGEARABpAHIAZQBjAHQAbwByAHkAABd2AGEAcgBEAGEAeQBzAEIAYQBjAGsA
AC12AGEAcgBTAGEAbABlAHMATwByAGQAZQByAHMASgBzAG8AbgBGAGkAbABlAAAVdgBhAHIARQBu
AGQARABhAHQAZQAAIXYAYQByAE0AYQB4AEkAdABlAHIATgB1AG0AYgBlAHIAAB92AGEAcgBTAGwA
ZQBlAHAAVABpAG0AZQBNAGkAbgAAH3YAYQByAE0AbwBkAHUAbABlAFQAbwBDAGEAbABsAAAvewAw
AH0AYABEAFcAXwBFAHMAbwBtADoAOgBJAG4AaQB0AGAAWwB7ADEAfQBdAAAVewAwAH0AewAxAH0A
LgBsAG8AZwAAJUMAOgBcAEgARABGAFMAXwBTAHQAYQBnAGUAXABsAG8AZwBcAAAnUwB5AHMAdABl
AG0AOgA6AFAAYQBjAGsAYQBnAGUATgBhAG0AZQAAH0kAcwBGAGkAbABlAFIAZQBhAGQAeQA6AHsA
MAB9AABJQwA6AFwASABEAEYAUwBfAFMAdABhAGcAZQBcAGwAbwBnAFwARABXAF8AUwBhAGwAZQBz
AE8AcgBkAGUAcgBzAC4AbABvAGcAABEwAC4AMAAwADAAMAAwADAAADFSAGUAZwBpAHMAdAByAGEA
dABpAG8AbgBQAGUAcgBpAG8AZABGAG8AcgBtAGEAdAAAK1AAYQBjAGkAZgBpAGMAIABTAHQAYQBu
AGQAYQByAGQAIABUAGkAbQBlAAAJewAwAH0AWgAAJ3kAeQB5AHkALQBNAE0ALQBkAGQAIABIAEgA
OgBtAG0AOgBzAHMAARttAHQAUwBhAGwAZQBzAE8AcgBkAGUAcgBzAAArewAwAH0AIAAiAFMAYQBs
AGUAcwBPAHIAZABlAHIAcwAiADoAIABbACAAAAN7AABBXQAsACAAIgBTAG8AdQByAGMAZQBTAHkA
cwB0AGUAbQAiADoAIAAiAHMAdAByAGkAbgBnACIAIAAgAHsAMAB9AAADfQAAU3sAMAB9AGAAUwBh
AGwAZQBzAE8AcgBkAGUAcgBzADoAOgBTAGUAcgBpAGEAbABpAHoAZQAyAEoAcwBvAG4ARgBpAGwA
ZQBgAFsAewAxAH0AXQAAtpwyvB4/tUCgDuJmYqHbigAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYS
GQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMAyAADgQgAQEOAyAA
CAQgAQEIBCAAER0FIAEBER0DBhIhAwYSMAUgAQgSJQUgAQESJQQAAQIOBAABAQ4EIAEODQUgAQ4R
HQQgAQ4OAgYOAgYIAwYRHQMoAA4DKAAIBCgAER0DBhEUBAAAAAAEAQAAAAQgABIYBSABARIYAwYS
GAQoABIYAyAADQQgAQENAgYNAygADQQgABIgBSABARIgBCAAEiQFIAEBEiQDBhIgAwYSJAQoABIg
BCgAEiQIIAAVEikBEhwJIAEBFRIpARIcCCAAFRIpARIoCSABARUSKQESKAcGFRIpARIcBwYVEikB
EigIKAAVEikBEhwIKAAVEikBEigIBhUSLQIOEiwJIAAVEi0CDhIsBSABARIsCSgAFRItAg4SLAYA
ARJlEWkEIAASbQYgAgEOEm0EBwESFQUgAQERdQgBAAIAAAAAAAMAAAEFAAASgIEFIAASgIUFIAAS
gIkFIAASgI0GIAESgJEcBgADDg4ODgYgAgEOEiUDIAAcBgADDg4cHAQAABEdFQcKEoCRDgIOEiUS
gJ0OEoCtEiURHQcVEi0CDhIsCyAAFRKAsQITABMBCBUSgLECDhIsCyAAFRGAtQITABMBCBURgLUC
DhIsBCAAEwEGFRIpARIcBQACDg4OBSABARMAAyAAAg8HBA0SLBIcFRGAtQIOEiwEAAEODgUgABKA
vQYgAQESgMEFIAASgMUFIAASgM0EIAECDgQgARwOBQABER0cBAABDRwcBwwODg4SgJ0SgL0SgNES
LBKArQgSgM0SgKkRHQQAAQEIIQcRDg4OEoCdAhKAkRIlEoCdDg4SgJ0ODhKAnRIlER0RHQUgABKA
5QYgARKA6RwFAAIODhwEAAEIDgcHAhKArREdDwAEEoDtDhGA8RGA9RGA+QYgAQESgQEJBwMOEoDt
EoD9AyAACgUAAgEOHAkHAxKA7RKArQINBwYODhKA7RKA/REdCgYAARKBGQ4JAAIRHREdEoEZBSAC
DgMDCAcDEoEZER0OAwcBDgUHARKBHQcgAgETABMBByACEoEhDhwIMb84Vq02TjUEIAEOHAYgARKB
IQ4aBwcSgSESLBKA7RKA/RKArRURgLUCDhIsER1HAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU1RfMmU3OWVm
NWVjNDBjNDA2NTljNGI1ZmVkODk3ZmY0MmIAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNwAA
CAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAZh1AAAAAAAAAAAAAK51AAAA
IAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgdQAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwA
AAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAA
MAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFiAAACwAwAAAAAAAAAAAACwAzQAAABWAFMAXwBW
AEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAT2p+GgAAAQBPan4aPwAAAAAA
AAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAE
AAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEEAMAAAEAUwB0AHIAaQBuAGcARgBpAGwA
ZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAAMAAwADQAYgAwAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBj
AHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfADIAZQA3ADkAZQBmADUAZQBjADQAMABjADQAMAA2ADUA
OQBjADQAYgA1AGYAZQBkADgAOQA3AGYAZgA0ADIAYgAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBp
AG8AbgAAAAAAMQAuADAALgA2ADcAOAAyAC4AMgA3ADIAMQA1AAAAAABwACgAAQBJAG4AdABlAHIA
bgBhAGwATgBhAG0AZQAAAFMAVABfADEAYgBjADQAZAA5AGUAOQAxAGQAYgBmADQAMQA3AGIAOQA4
ADYAMgBjADcANQBhADkANwBkAGIAMAA1ADYANQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMA
bwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA3AAAAeAAo
AAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfADEAYgBjADQAZAA5AGUA
OQAxAGQAYgBmADQAMQA3AGIAOQA4ADYAMgBjADcANQBhADkANwBkAGIAMAA1ADYANQAuAGQAbABs
AAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwAyAGUANwA5AGUAZgA1AGUA
YwA0ADAAYwA0ADAANgA1ADkAYwA0AGIANQBmAGUAZAA4ADkANwBmAGYANAAyAGIAAABEAA8AAQBQ
AHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYANwA4ADIALgAyADcAMgAxADUA
AAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYANwA4
ADIALgAyADcAMgAxADUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABwAAAMAAAAwDUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="201,42"
          Id="Package\Script Task - Sales Orders"
          TopLeft="99,236" />
        <AnnotationLayout
          Text="varEndDate  :  DATEADD(&quot;day&quot;, -1, GETDATE() )&#xA;&#xA;&#xA;varModuleToCall:&#xA;1.  0 -  Sales Orders&#xA;&#xA;"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="275,136"
          Id="51732875-1fef-4faf-a8de-44a97d259da1"
          TopLeft="613,35" />
        <AnnotationLayout
          Text="The date range has the following algorithm:&#xA;1.  Date Range : varEndDate = varDateRange &#xA;     varDateRange  is always set to yesterday,&#xA;     then the application will calculate the start date by [varEndDate  - varDaysBack]&#xA;&#xA;Note that varDaysBack  will define the start date in the API Call.  &#xA;&#xA;2. Full load : Set varEndDate to varFull  (default)"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="464,152"
          Id="3070c220-241f-424d-b7d6-534a8f58b31f"
          TopLeft="97,24" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>